{
  "documentation": "Provides the top-level API for the dogen product.\n",
  "tagged_values": {
    "masd.injection.dia.comment": "true",
    "masd.injection.model_modules": "masd.dogen",
    "masd.injection.input_language": "cpp",
    "masd.extraction.ignore_files_matching_regex": ".*/tests/.*",
    "masd.extraction.delete_extra_files": "true",
    "masd.extraction.cpp.enabled": "true",
    "masd.extraction.cpp.standard": "c++-17",
    "masd.extraction.cpp.msbuild.enabled": "false",
    "masd.extraction.cpp.visual_studio.project.enabled": "false",
    "masd.extraction.cpp.visual_studio.solution.enabled": "false",
    "masd.extraction.csharp.enabled": "false",
    "masd.annotations.profile": "dogen.disable_common_facets"
  },
  "elements": [
    {
      "name": "configuration",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "error_handling",
          "type": "boost::optional<error_handling_configuration>"
        },
        {
          "name": "tracing",
          "type": "boost::optional<tracing_configuration>",
          "documentation": "Configuration for tracing.\n"
        },
        {
          "name": "diffing",
          "type": "boost::optional<diffing_configuration>"
        }
      ]
    },
    {
      "name": "tracing_level",
      "documentation": "Available levels for tracing transformation.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "detail",
          "type": ""
        },
        {
          "name": "summary",
          "type": ""
        }
      ]
    },
    {
      "name": "tracing_configuration",
      "documentation": "Configuration related to transform tracing.\n",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "level",
          "type": "tracing_level",
          "documentation": "Dump all available tracing information about transforms.\n"
        },
        {
          "name": "format",
          "type": "tracing_format",
          "documentation": "Format to use when writting trace files.\n"
        },
        {
          "name": "guids_enabled",
          "type": "bool",
          "documentation": "Enable GUIDs in probe stats.\n\nDisabling GUIDs makes comparisons easier.\n"
        },
        {
          "name": "logging_impact",
          "type": "std::string",
          "documentation": "Additional information to tell tracing about the possible impact of logging.\n\nInformative string detailing whether logging was off, or set to debug etc. This is\nrequired in order to be able to compare like-for-like numbers.\n"
        },
        {
          "name": "use_short_names",
          "type": "bool",
          "documentation": "Use short directory and file names. Useful mainly on windows due to path\nsize limitations.\n"
        }
      ]
    },
    {
      "name": "tracing_format",
      "documentation": "Available formats for tracing transformations.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "org_mode",
          "type": "",
          "documentation": "Emacs Org mode.\n"
        },
        {
          "name": "markdown",
          "type": "",
          "documentation": "Markdown text format.\n"
        }
      ]
    },
    {
      "name": "configuration_builder",
      "documentation": "masd::builder\n",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "diffing_configuration",
      "documentation": "Configuration for diff generation.\n",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "style",
          "type": "diffing_style",
          "documentation": "What style to use when producing diffs.\n"
        },
        {
          "name": "report_identical_files",
          "type": "bool",
          "documentation": "If true, reports files that have not changed as well.\n"
        }
      ]
    },
    {
      "name": "weaving_style",
      "documentation": "Style of the weaving to perform.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "stitch",
          "type": ""
        },
        {
          "name": "wale",
          "type": ""
        }
      ]
    },
    {
      "name": "configuration_validator",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "error_handling_configuration",
      "documentation": "Configuration related to the behaviour of Dogen in the presence of errors and\nwarnings.\n",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "compatibility_mode_enabled",
          "type": "bool",
          "documentation": "Try to process diagram even if there are errors.\n\nOnly a certain class of errors are allowed, believed to be caused by backwards or\nforwards compatibility problems: missing types or types that do not exist.\n"
        }
      ]
    },
    {
      "name": "diffing_style",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "minimal",
          "type": "",
          "documentation": "Reports only if a file is different or not.\n"
        },
        {
          "name": "unified_diff",
          "type": "",
          "documentation": "Produces unified diffs for each file that differs.\n"
        }
      ]
    },
    {
      "name": "invalid_configuration",
      "documentation": "The values supplied for the configuration are not valid.\n",
      "stereotypes": [
        "masd::exception"
      ],
      "tagged_values": {
        "masd.extraction.cpp.types.forward_declarations.enabled": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "generator",
      "stereotypes": [
        "masd::interface"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "converter",
      "stereotypes": [
        "masd::interface"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "weaver",
      "stereotypes": [
        "masd::interface"
      ],
      "fallback_element_type": "masd::object"
    }
  ]
}
