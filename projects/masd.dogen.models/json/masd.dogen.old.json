{
  "documentation": "Provides the top-level API for the dogen product.\n",
  "tagged_values": {
    "masd.injection.dia.comment": "true",
    "masd.injection.model_modules": "masd.dogen",
    "masd.injection.input_language": "cpp",
    "masd.extraction.ignore_files_matching_regex": ".*/tests/.*",
    "masd.extraction.delete_extra_files": "true",
    "masd.extraction.cpp.enabled": "true",
    "masd.extraction.cpp.standard": "c++-17",
    "masd.extraction.cpp.msbuild.enabled": "false",
    "masd.extraction.cpp.visual_studio.project.enabled": "false",
    "masd.extraction.cpp.visual_studio.solution.enabled": "false",
    "masd.extraction.csharp.enabled": "false",
    "masd.annotations.profile": "dogen.disable_common_facets"
  },
  "elements": [
    {
      "name": "artefact",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "name",
          "type": "std::string"
        },
        {
          "name": "content",
          "type": "std::string"
        },
        {
          "name": "diff",
          "type": "std::string"
        },
        {
          "name": "operation",
          "type": "operation"
        }
      ]
    },
    {
      "name": "artefact_container",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "name",
          "type": "std::string"
        },
        {
          "name": "type",
          "type": "artefact_group_type"
        },
        {
          "name": "artefacts",
          "type": "std::list<artefact>"
        },
        {
          "name": "has_diffs",
          "type": "bool",
          "documentation": "If true, one or more artefacts are different.\n"
        }
      ]
    },
    {
      "name": "generation_exception",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "configuration",
      "stereotypes": [
        "masd::fluent"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "activity",
          "type": "boost::variant<generation_configuration, weaving_configuration, conversion_configuration>"
        },
        {
          "name": "tracing",
          "type": "tracing_configuration",
          "documentation": "Configuration for tracing.\n"
        },
        {
          "name": "logging",
          "type": "logging_configuration",
          "documentation": "Configuration for logging.\n"
        },
        {
          "name": "diffing",
          "type": "diffing_configuration"
        }
      ]
    },
    {
      "name": "tracing_level",
      "documentation": "Available levels for tracing transformation.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "detail",
          "type": ""
        },
        {
          "name": "summary",
          "type": ""
        }
      ]
    },
    {
      "name": "tracing_configuration",
      "documentation": "Configuration related to tracing.\n",
      "stereotypes": [
        "masd::fluent",
        "Enablable",
        "Outputable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "level",
          "type": "tracing_level",
          "documentation": "Dump all available tracing information about transforms.\n"
        },
        {
          "name": "format",
          "type": "tracing_format",
          "documentation": "Format to use when writting trace files.\n"
        },
        {
          "name": "guids_enabled",
          "type": "bool",
          "documentation": "Enable GUIDs in probe stats.\n\nDisabling GUIDs makes comparisons easier.\n"
        }
      ]
    },
    {
      "name": "tracing_format",
      "documentation": "Available formats for tracing transformations.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "org_mode",
          "type": "",
          "documentation": "Emacs Org mode.\n"
        },
        {
          "name": "markdown",
          "type": "",
          "documentation": "Markdown text format.\n"
        }
      ]
    },
    {
      "name": "logging_configuration",
      "documentation": "Configuration related to logging.\n",
      "stereotypes": [
        "masd::fluent",
        "Enablable",
        "Outputable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "level",
          "type": "log_level"
        },
        {
          "name": "file_name",
          "type": "std::string",
          "documentation": "Name of the file to log into.\n"
        },
        {
          "name": "output_to_console",
          "type": "bool",
          "documentation": "If true, dumps the log into the console.\n"
        }
      ]
    },
    {
      "name": "log_level",
      "documentation": "Available levels for logging.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "trace",
          "type": ""
        },
        {
          "name": "debug",
          "type": ""
        },
        {
          "name": "info",
          "type": ""
        },
        {
          "name": "warn",
          "type": ""
        },
        {
          "name": "error",
          "type": ""
        }
      ]
    },
    {
      "name": "configuration_builder",
      "documentation": "masd::builder\n",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "generation_configuration",
      "documentation": "Configuration related to code generation.\n",
      "stereotypes": [
        "masd::fluent",
        "Outputable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "reference_model_directories",
          "type": "std::vector<boost::filesystem::path>",
          "documentation": "Directories to search for reference models.\n"
        },
        {
          "name": "force_write",
          "type": "bool",
          "documentation": "Always write files, even when there are no differences.\n"
        },
        {
          "name": "compatibility_mode_enabled",
          "type": "bool",
          "documentation": "If true, attempt to process inputs, ignoring certain types of errors.\n"
        },
        {
          "name": "target",
          "type": "boost::filesystem::path",
          "documentation": "Target model for generation.\n"
        },
        {
          "name": "delete_extra_files",
          "type": "bool",
          "documentation": "If true, deletes any files that are not known to Dogen .\n"
        },
        {
          "name": "ignore_files_matching_regex",
          "type": "std::vector<std::string>",
          "documentation": "Files matching the supplied regular expressions will be ignored by Dogen.\n\nOnly applicable when deleting extra files.\n"
        },
        {
          "name": "cpp_headers_output_directory",
          "type": "boost::filesystem::path",
          "documentation": "Directory in which to place C++ header files.\n"
        }
      ]
    },
    {
      "name": "filesystem_generator",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "in_memory_generator",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "in_memory_converter",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "diffing_configuration",
      "documentation": "Configuration for diff generation.\n",
      "stereotypes": [
        "masd::fluent",
        "Enablable",
        "Outputable"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "artefact_group_type",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "tracing",
          "type": "",
          "documentation": "Fileset contains tracing data.\n"
        },
        {
          "name": "code",
          "type": "",
          "documentation": "Fileset contains generated souce code.\n"
        }
      ]
    },
    {
      "name": "filesystem_converter",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "Enablable",
      "documentation": "Element which can be enabled.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "enabled",
          "type": "bool",
          "documentation": "If true, the configurable aspect will be expressed.\n"
        }
      ]
    },
    {
      "name": "Outputable",
      "documentation": "Element which requires output information.\n",
      "stereotypes": [
        "masd::object_template"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "output_directory",
          "type": "boost::filesystem::path",
          "documentation": "Directory in which to place the output.\n"
        }
      ]
    },
    {
      "name": "operation_type",
      "documentation": "Operation to perform to a given artefact.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "create",
          "type": ""
        },
        {
          "name": "overwrite",
          "type": ""
        },
        {
          "name": "ignore",
          "type": ""
        },
        {
          "name": "remove",
          "type": ""
        }
      ]
    },
    {
      "name": "operation_reason",
      "documentation": "Reasons for performing an operation.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "new_generated_file",
          "type": ""
        },
        {
          "name": "changed_generated_file",
          "type": ""
        },
        {
          "name": "force_overwrite_enabled",
          "type": ""
        },
        {
          "name": "file_is_not_expected",
          "type": ""
        }
      ]
    },
    {
      "name": "model",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "name",
          "type": "std::string"
        },
        {
          "name": "type",
          "type": "std::string"
        },
        {
          "name": "content",
          "type": "std::string"
        }
      ]
    },
    {
      "name": "model_factory",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "filesystem_weaver",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "in_memory_weaver",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "tagged_values": {
        "masd.generalization.is_final": "false"
      },
      "fallback_element_type": "masd::object"
    },
    {
      "name": "weaving_exception",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "conversion_exception",
      "stereotypes": [
        "masd::exception"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "weaving_style",
      "documentation": "Style of the weaving to perform.\n",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "stitch",
          "type": ""
        },
        {
          "name": "wale",
          "type": ""
        }
      ]
    },
    {
      "name": "weaving_configuration",
      "documentation": "Configuration for weaving.\n",
      "stereotypes": [
        "masd::fluent",
        "Outputable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "style",
          "type": "weaving_style",
          "documentation": "What style of weaving to perform.\n"
        },
        {
          "name": "target",
          "type": "boost::filesystem::path"
        }
      ]
    },
    {
      "name": "configuration_validator",
      "stereotypes": [
        "masd::handcrafted"
      ],
      "fallback_element_type": "masd::object"
    },
    {
      "name": "conversion_configuration",
      "documentation": "Configuration for the model conversion.\n",
      "stereotypes": [
        "masd::fluent",
        "Outputable"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "source",
          "type": "boost::filesystem::path"
        },
        {
          "name": "destination_type",
          "type": "std::string",
          "documentation": "Type of the model to convert into.\n\nMust be supported by Dogen.\n"
        },
        {
          "name": "destination_file_name",
          "type": "std::string",
          "documentation": "Name of the file to output to, when outputting to a file.\n\nIf not supplied, defaults to the source file name, with the appropriate extension\nfor the destination type.\n"
        }
      ]
    },
    {
      "name": "operation",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "type",
          "type": "operation_type"
        },
        {
          "name": "reason",
          "type": "operation_reason"
        }
      ]
    },
    {
      "name": "archive_type",
      "stereotypes": [
        "masd::enumeration"
      ],
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "zip",
          "type": ""
        },
        {
          "name": "tar",
          "type": ""
        }
      ]
    },
    {
      "name": "archive",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "content",
          "type": "std::string"
        },
        {
          "name": "type",
          "type": "archive_type"
        }
      ]
    }
  ]
}
