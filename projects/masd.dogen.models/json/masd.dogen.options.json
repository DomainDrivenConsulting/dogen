{
  "documentation": "Stores the configuration options for Dogen applications.\n\nThe options model provides types to store general configuration\noptions for all the different Dogen applications, such as knitter,\netc.\n",
  "tagged_values": {
    "masd.injection.dia.comment": "true",
    "masd.injection.model_modules": "masd.dogen.options",
    "masd.injection.input_language": "cpp",
    "masd.extraction.ignore_files_matching_regex": ".*/tests/.*",
    "masd.extraction.delete_extra_files": "true",
    "masd.extraction.cpp.enabled": "true",
    "masd.extraction.cpp.standard": "c++-17",
    "masd.extraction.cpp.msbuild.enabled": "false",
    "masd.extraction.cpp.visual_studio.project.enabled": "false",
    "masd.extraction.cpp.visual_studio.solution.enabled": "false",
    "masd.extraction.csharp.enabled": "false",
    "masd.annotations.profile": "dogen.disable_common_facets"
  },
  "elements": [
    {
      "name": "stitching_options",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "log_level",
          "type": "std::string",
          "documentation": "What level of logging to log at.\n"
        },
        {
          "name": "target",
          "type": "boost::filesystem::path"
        },
        {
          "name": "force_write",
          "type": "bool"
        },
        {
          "name": "log_directory",
          "type": "boost::filesystem::path"
        },
        {
          "name": "compatibility_mode",
          "type": "bool",
          "documentation": "Try to process diagram even if there are errors.\n\nOnly a certain class of errors are allowed, believed to be caused by backwards or\nforwards compatibility problems: missing types or types that do not exist.\n"
        }
      ]
    },
    {
      "name": "tailoring_options",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "log_level",
          "type": "std::string",
          "documentation": "What level of logging to log at.\n"
        },
        {
          "name": "target",
          "type": "boost::filesystem::path"
        },
        {
          "name": "output",
          "type": "boost::filesystem::path"
        },
        {
          "name": "force_write",
          "type": "bool"
        },
        {
          "name": "log_directory",
          "type": "boost::filesystem::path"
        }
      ]
    },
    {
      "name": "darting_options",
      "fallback_element_type": "masd::object",
      "attributes": [
        {
          "name": "log_level",
          "type": "std::string",
          "documentation": "What level of logging to log at.\n"
        },
        {
          "name": "force_write",
          "type": "bool"
        },
        {
          "name": "product_name",
          "type": "std::string"
        },
        {
          "name": "log_directory",
          "type": "boost::filesystem::path"
        }
      ]
    }
  ]
}
