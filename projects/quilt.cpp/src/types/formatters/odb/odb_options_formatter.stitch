<#@ decoration.licence_name=gpl_v3 #>
<#@ decoration.copyright_notice=Copyright (C) 2012-2015 Marco Craveiro <marco.craveiro@gmail.com> #>
<#@ decoration.modeline_group_name=emacs #>
<#@ stream_variable_name=a.stream() #>
<#@ inclusion_dependency="dogen/quilt.cpp/types/formatters/odb/odb_options_formatter_stitch.hpp" #>
<#@ inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#@ inclusion_dependency=<boost/algorithm/string/case_conv.hpp> #>
<#@ containing_namespaces=dogen::quilt::cpp::formatters::odb #>
<#+

dogen::formatters::artefact odb_options_formatter_stitch(
    assistant& a, const fabric::odb_options& o) {

    {
        a.make_decoration_preamble();

        const auto model_name(a.get_identifiable_model_name(o.name()));
        const auto product_name(a.get_product_name(o.name()));
        const auto odb_folder(a.get_odb_facet_directory());
#>
# enable C++11. FIXME: causes ODB crash in options file.
# --std c++11

# target postgres
--database pgsql

# use the boost profile
--profile boost

# generate queries and embedded schemas
--generate-query
--generate-schema
--schema-format embedded

# use extensions similar to the dogen ones
# --ixx-suffix .ipp
# --hxx-suffix .hpp
--cxx-suffix .cpp

# fix domain includes
--include-regex '%(.*).hpp%<#= product_name #>/<#= model_name #>/types/$1.hpp%'

# fix odb generated includes
--include-regex '%(^[a-zA-Z0-9_]+)-odb.(.*)%<#= product_name #>/<#= model_name #>/odb/$1-odb.$2%'
--include-regex '%<#= product_name #>/<#= model_name #>/types/(.*)-odb.(.*)%<#= product_name #>/<#= model_name #>/odb/$1-odb.$2%'

# debug regexes
# --include-regex-trace

# make the header guards similar to dogen ones
--guard-prefix <#= boost::to_upper_copy(product_name) #>_<#= boost::to_upper_copy(model_name) #>_<#= boost::to_upper_copy(odb_folder) #>
<#+
    } // sbf
    return a.make_file();
}
#>
