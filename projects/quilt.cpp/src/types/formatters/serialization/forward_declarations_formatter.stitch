<#@ annotations.profile=dogen.stitch #>
<#@ stitch.containing_namespaces=dogen::quilt::cpp::formatters::serialization #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/serialization/forward_declarations_formatter_stitch.hpp" #>
<#@ stitch.inclusion_dependency="dogen/formatters/types/cpp/scoped_namespace_formatter.hpp" #>
<#@ stitch.inclusion_dependency="dogen/formatters/types/cpp/scoped_boilerplate_formatter.hpp" #>
<#+

dogen::formatters::artefact forward_declarations_formatter_stitch(
    assistant& a, const fabric::forward_declarations& fd) {

    {
        auto sbf(a.make_scoped_boilerplate_formatter());
        const auto qn(a.get_qualified_name(fd.name()));
#>

namespace boost {
namespace serialization {

template<class Archive>
void save(Archive& ar, const <#= qn #>& v, unsigned int version);

template<class Archive>
void load(Archive& ar, <#= qn #>& v, unsigned int version);

} }

<#+
    } // sbf
    return a.make_artefact();
}

#>
