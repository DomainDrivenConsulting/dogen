<#@ annotations.profile=dogen.stitch #>
<#@ containing_namespaces=dogen::quilt::cpp::formatters::test_data #>
<#@ inclusion_dependency="dogen/quilt.cpp/types/formatters/test_data/enum_header_formatter_stitch.hpp" #>
<#@ inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#+

dogen::formatters::artefact enum_header_formatter_stitch(
    assistant& a, const yarn::enumeration& e) {

    {
        auto sbf(a.make_scoped_boilerplate_formatter());
        {
            const auto ns(a.make_namespaces(e.name()));
            auto snf(a.make_scoped_namespace_formatter(ns));
#>

class <#= e.name().simple() #>_generator {
public:
    <#= e.name().simple() #>_generator();

public:
    typedef <#= a.get_qualified_name(e.name()) #> result_type;

public:
    static void populate(const unsigned int position, result_type& v);
    static result_type create(const unsigned int position);
    result_type operator()();

private:
    unsigned int position_;
};

<#+
         } // snf
#>

<#+
    } // sbf
    return a.make_artefact();
}

#>
