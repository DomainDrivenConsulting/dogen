<#@ annotations.profile=dogen.stitch #>
<#@ stitch.inclusion_dependency=<boost/algorithm/string/case_conv.hpp> #>
<#@ stitch.inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/assistant.hpp" #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/include_cmakelists_formatter_stitch.hpp" #>
<#+

dogen::formatters::artefact include_cmakelists_formatter_stitch(
    assistant& a, const fabric::cmakelists& c) {

    {
        a.make_decoration_preamble();
#>
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src)

install(
    DIRECTORY include/
    DESTINATION include/
    COMPONENT headers
    FILES_MATCHING PATTERN "*.hpp")
<#+
        if (a.is_odb_facet_enabled()) {
            const auto model_name(a.get_identifiable_model_name(c.name()));
            const auto product_name(a.get_product_name(c.name()));
            const auto odb_folder(a.get_odb_facet_directory());
#>

set(include_dir "${CMAKE_CURRENT_SOURCE_DIR}/include/<#= product_name #>/<#= model_name #>")
set(all_odb_files "")
file(GLOB_RECURSE all_odb_files RELATIVE
    "${include_dir}/<#= odb_folder #>/"
    "${include_dir}/<#= odb_folder #>/*_pragmas.hpp")

set(src_odb_dir "${CMAKE_CURRENT_SOURCE_DIR}/src/<#= odb_folder #>/")
if(NOT EXISTS "${src_odb_dir}")
    file(MAKE_DIRECTORY "${src_odb_dir}")
endif()

add_custom_target(codegen_<#= model_name #>_odb
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    COMMAND mv ${CMAKE_CURRENT_SOURCE_DIR}/include/<#= product_name #>/<#= model_name #>/<#= odb_folder #>/*.cpp
    ${src_odb_dir})

set(ignore_file false)
foreach(odb_file ${all_odb_files})
    if (odb_file MATCHES "all_pragmas.hpp")
        set(ignore_file true)
    endif()

    if(NOT ignore_file)
        set(type_name "")
        string(REPLACE "_pragmas.hpp" "" type_name ${odb_file})
        string(REPLACE "\\" "_" type_name ${type_name})
        string(REPLACE "/" "_" type_name ${type_name})

        set(pfh_dir "$ENV{PFH_LOCATION}")
        set(target_name "codegen_<#= model_name #>_odb_${type_name}")
        add_custom_target(${target_name}
            WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
            COMMAND odb
            --options-file ${CMAKE_CURRENT_SOURCE_DIR}/src/options.odb
            --std c++11
            --output-dir ${CMAKE_CURRENT_SOURCE_DIR}/include/<#= product_name #>/<#= model_name #>/<#= odb_folder #>/
            --odb-epilogue '\#include \"<#= product_name #>/<#= model_name #>/<#= odb_folder #>/${odb_file}\"'
            -I ${pfh_dir}/include -I ${CMAKE_CURRENT_SOURCE_DIR}/include
            ${include_dir}/types/${type_name}.hpp)

        add_dependencies(codegen_<#= model_name #>_odb ${target_name})
    endif()
    add_dependencies(codegen_<#= model_name #>_odb codegen_<#= model_name #>)
    set(ignore_file false)
endforeach()
<#+
        }
    } // sbf
    return a.make_artefact();
}
#>
