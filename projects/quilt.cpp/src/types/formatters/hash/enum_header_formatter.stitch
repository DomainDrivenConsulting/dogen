<#@ decoration.licence_name=gpl_v3 #>
<#@ decoration.copyright_notice=Copyright (C) 2012-2015 Marco Craveiro <marco.craveiro@gmail.com> #>
<#@ decoration.modeline_group_name=emacs #>
<#@ stream_variable_name=a.stream() #>
<#@ inclusion_dependency="dogen/quilt.cpp/types/formatters/hash/enum_header_formatter_stitch.hpp" #>
<#@ inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#@ containing_namespaces=dogen::quilt::cpp::formatters::hash #>
<#+

dogen::formatters::artefact enum_header_formatter_stitch(
    assistant& a, const yarn::enumeration& e) {

    {
        auto sbf(a.make_scoped_boilerplate_formatter());
#>

namespace std {

template<>
struct hash<<#= a.get_qualified_name(e.name()) #>> {
public:
    size_t operator()(const <#= a.get_qualified_name(e.name()) #>& v) const {
        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
    }
};

}

<#+
    } // sbf
    return a.make_file();
}

#>
