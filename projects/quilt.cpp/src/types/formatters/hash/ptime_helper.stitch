<#@ annotations.profile=dogen.stitch #>
<#@ stitch.containing_namespaces=dogen::quilt::cpp::formatters::hash #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/hash/traits.hpp" #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/assistant.hpp" #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formattables/helper_properties.hpp" #>
<#@ stitch.inclusion_dependency="dogen/quilt.cpp/types/formatters/hash/ptime_helper.hpp" #>
<#@ stitch.wale.template=cpp_helper_formatter_implementation_enabled.wale #>
<#@ stitch.wale.kvp.helper.family=BoostPTime #>
<#@ stitch.wale.kvp.class.simple_name=ptime_helper #>
<#$ stitch.wale.template_instantiation_result #>
<#+

void ptime_helper::
format(assistant& a, const formattables::helper_properties& hp) const {
    const auto d(hp.current());
    const auto qn(d.name_tree_qualified());
    const auto ident(d.name_tree_identifiable());
#>

inline std::size_t hash_<#= ident #>(const <#= qn #>& v) {
    std::size_t seed(0);
    const boost::posix_time::ptime epoch(boost::gregorian::date(1970, 1, 1));
    boost::posix_time::time_duration d(v - epoch);
    seed = static_cast<std::size_t>(d.total_seconds());
    return seed;
}
<#+
}
#>
