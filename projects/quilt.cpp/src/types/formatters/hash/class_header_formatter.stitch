<#@ decoration.licence_name=gpl_v3 #>
<#@ decoration.copyright_notice=Copyright (C) 2012-2015 Marco Craveiro <marco.craveiro@gmail.com> #>
<#@ decoration.modeline_group_name=emacs #>
<#@ stream_variable_name=a.stream() #>
<#@ inclusion_dependency="dogen/quilt.cpp/types/formatters/hash/class_header_formatter_stitch.hpp" #>
<#@ inclusion_dependency="dogen/formatters/types/sequence_formatter.hpp" #>
<#@ containing_namespaces=dogen::quilt::cpp::formatters::hash #>
<#+

dogen::formatters::file class_header_formatter_stitch(
    assistant& a, const yarn::object& o) {

    const auto sn(o.name().simple());
    const auto qn(a.get_qualified_name(o.name()));
    {
   
        auto sbf(a.make_scoped_boilerplate_formatter());
        {
            const auto ns(a.make_namespaces(o.name()));
            auto snf(a.make_scoped_namespace_formatter(ns));
#>

struct <#= sn #>_hasher {
public:
    static std::size_t hash(const <#= sn #>& v);
};

<#+
        } // snf
#>

namespace std {

template<>
struct hash<<#= qn #>> {
public:
    size_t operator()(const <#= qn #>& v) const {
        return <#= qn #>_hasher::hash(v);
    }
};

}
<#+
    } // sbf
    return a.make_file();
}
#>
