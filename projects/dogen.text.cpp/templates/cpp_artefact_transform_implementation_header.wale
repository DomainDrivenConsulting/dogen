
physical::entities::archetype {{class.simple_name}}::static_archetype() const {
    static physical::entities::archetype r([]() {
        physical::entities::archetype r;
        using pmnf = physical::helpers::meta_name_factory;
        r.meta_name(pmnf::make(cpp::traits::backend_sn(),
            traits::facet_sn(), traits::{{archetype.simple_name}}_archetype_sn()));
        using lmnf = {{meta_name_factory}};
        r.logical_meta_element_id(lmnf::make_{{meta_element}}_name().qualified().dot());
        return r;
    }());
    return r;
}

physical::entities::archetype {{class.simple_name}}::archetype() const {
    return static_archetype();
}

inclusion_support_types {{class.simple_name}}::inclusion_support_type() const {
    return inclusion_support_types::{{class.inclusion_support_type}};
}

boost::filesystem::path {{class.simple_name}}::inclusion_path(
    const formattables::locator& l, const logical::entities::name& n) const {
    return l.make_inclusion_path_for_cpp_header(n, archetype().meta_name().qualified());
}

boost::filesystem::path {{class.simple_name}}::full_path(
    const formattables::locator& l, const logical::entities::name& n) const {
    return l.make_full_path_for_cpp_header(n, archetype().meta_name().qualified());
}
