<#@ licence_name=gpl_v3 #>
<#@ copyright_notice=Copyright(C) 2012 Kitanda <info@kitanda.co.uk> #>
<#@ modeline_group_name=emacs #>
<#@ stream_variable_name=fa.stream() #>
<#@ inclusion_dependency="dogen/cpp/types/formatters/test_data/optional_helper_stitch.hpp" #>
<#@ containing_namespaces=dogen::cpp::formatters::test_data #>
<#+

void optional_helper_stitch(
    formatters::nested_type_formatting_assistant& fa,
    const formattables::nested_type_info& t) {
    
    const auto containee(t.children().front());
#>

inline std::size_t test_data_<#= t.complete_identifiable_name() #>(const <#= t.complete_name() #>& v) {
    std::size_t seed(0);

    if (!v)
        return seed;

<#+
    if (!fa.requires_hashing_helper_method(containee))
#>
    combine(seed, *v);
<#+
    else
#>
    combine(seed, test_data_<#= containee.complete_identifiable_name() #>(*v));
    return seed;
}
<#+
}
#>
