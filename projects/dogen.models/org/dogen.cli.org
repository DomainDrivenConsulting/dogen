#+title: dogen.cli
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
:PROPERTIES:
:masd.codec.dia.comment: true
:masd.codec.model_modules: dogen.cli
:masd.codec.input_technical_space: cpp
:masd.codec.reference: cpp.builtins
:masd.codec.reference: cpp.std
:masd.codec.reference: cpp.boost
:masd.codec.reference: dogen
:masd.codec.reference: dogen.utility
:masd.codec.reference: masd
:masd.codec.reference: masd.variability
:masd.codec.reference: dogen.profiles
:masd.variability.profile: dogen.profiles.base.default_profile
:END:

Implements the command-line interface for Dogen.

* parser_exception
:PROPERTIES:
:masd.codec.stereotypes: masd::exception
:END:

A fatal error has occurred during option parsing.

* application
:PROPERTIES:
:masd.codec.stereotypes: dogen::handcrafted::typeable
:END:
* command_line_parser
:PROPERTIES:
:masd.codec.stereotypes: dogen::handcrafted::typeable::header_only
:END:
* program_options_parser
:PROPERTIES:
:masd.codec.parent: command_line_parser
:masd.codec.stereotypes: dogen::handcrafted::typeable
:END:
* injector_factory
:PROPERTIES:
:masd.codec.stereotypes: dogen::handcrafted::typeable::header_only
:END:
* application_exception
:PROPERTIES:
:masd.codec.stereotypes: masd::exception
:END:

A fatal error has occurred whilst executing the application.

* configuration
All of the configuration required by the command line application.

** logging
:PROPERTIES:
:masd.codec.type: boost::optional<utility::log::logging_configuration>
:END:

Configuration related to logging, if any.

** api
:PROPERTIES:
:masd.codec.type: dogen::configuration
:END:
** cli
:PROPERTIES:
:masd.codec.type: cli_configuration
:END:
* generation_configuration
:PROPERTIES:
:masd.codec.stereotypes: masd::fluent
:END:

Configuration related to code generation.

** reference_model_directories
:PROPERTIES:
:masd.codec.type: std::vector<boost::filesystem::path>
:END:

Directories to search for reference models.

** target
:PROPERTIES:
:masd.codec.type: boost::filesystem::path
:END:

Target model for generation.

** output_directory
:PROPERTIES:
:masd.codec.type: boost::filesystem::path
:END:
* conversion_configuration
:PROPERTIES:
:masd.codec.stereotypes: masd::fluent
:END:

Configuration for the model conversion.

** source
:PROPERTIES:
:masd.codec.type: boost::filesystem::path
:END:
** destination
:PROPERTIES:
:masd.codec.type: std::string
:END:

Name of the file to output the conversion to.

* configuration_validator
:PROPERTIES:
:masd.codec.stereotypes: dogen::handcrafted::typeable
:END:
* initializer
:PROPERTIES:
:masd.codec.stereotypes: dogen::handcrafted::typeable
:END:
* cli_configuration
:PROPERTIES:
:masd.codec.stereotypes: masd::fluent
:END:

Configuration specific to the CLI application.

** activity
:PROPERTIES:
:masd.codec.type: boost::variant<generation_configuration, conversion_configuration, dumpspecs_configuration>
:END:
** byproduct_directory
:PROPERTIES:
:masd.codec.type: boost::filesystem::path
:END:

Directory in which to place all files not directly related to generated code.

* main
:PROPERTIES:
:masd.cpp.types.enabled: true
:masd.cpp.types.overwrite: false
:masd.codec.stereotypes: masd::entry_point
:END:
* CMakeLists
:PROPERTIES:
:masd.codec.stereotypes: masd::build::cmakelists, dogen::handcrafted::cmake
:END:
* dumpspecs_configuration
:PROPERTIES:
:masd.codec.stereotypes: masd::fluent
:END:

Dumps all the specs about this version of dogen.

** style
:PROPERTIES:
:masd.codec.type: reporting_style
:END:

Which style to use when dumping the specs.

