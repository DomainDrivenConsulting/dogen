#+title: dogen.dia
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
:PROPERTIES:
:masd.injection.dia.comment: true
:masd.injection.model_modules: dogen.dia
:masd.injection.input_technical_space: cpp
:masd.injection.reference: cpp.builtins
:masd.injection.reference: cpp.std
:masd.injection.reference: cpp.boost
:masd.injection.reference: masd
:masd.injection.reference: masd.variability
:masd.injection.reference: dogen.profiles
:masd.physical.ignore_files_matching_regex: .*/*.py
:masd.variability.profile: dogen.profiles.base.default_profile
:END:
* diagram_data
Represents a all the data associated with a diagram.

** attributes
:PROPERTIES:
:masd.injection.type: std::vector<attribute>
:END:

All attributes associated with the diagram data.

* attribute
Attribute in a Dia diagram.

** name
:PROPERTIES:
:masd.injection.type: std::string
:END:

Name of the attribute.

** values
:PROPERTIES:
:masd.injection.type: std::vector<boost::variant<color,real,integer,font,boolean,point,string,enumeration,rectangle,composite>>
:END:

Values for the attribute.

* composite
:PROPERTIES:
:masd.injection.stereotypes: dogen::untestable
:END:

Attribute value which is made up of other attributes.

** type
:PROPERTIES:
:masd.injection.type: std::string
:END:

Type of the composite node

** value
:PROPERTIES:
:masd.injection.type: std::vector<boost::shared_ptr<attribute>>
:END:

Underlying Dia attributes.

** inner_composite
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<composite>
:END:

Some composites contain an inner composite field.

* color
Represents a color in a diagram.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of an RGB value in hex.

* diagram
Represents a diagram in Dia.

** diagram_data
:PROPERTIES:
:masd.injection.type: diagram_data
:END:

Basic diagram definitions.

** layers
:PROPERTIES:
:masd.injection.type: std::vector<layer>
:END:

Visual layers on the diagram.

* layer
Represents a layer in a Dia diagram.

** name
:PROPERTIES:
:masd.injection.type: std::string
:END:

Name of the layer.

** visible
:PROPERTIES:
:masd.injection.type: bool
:END:

Whether the layer is visible on screen or not.

** active
:PROPERTIES:
:masd.injection.type: bool
:END:

Whether the layer is active or not.

** objects
:PROPERTIES:
:masd.injection.type: std::vector<object>
:END:

Dia objects contained in layer.

* real
Represents a real value.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a real value.

* integer
Represents an integer value.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of an integer value.

* object
Represents a Dia object.

** type
:PROPERTIES:
:masd.injection.type: std::string
:END:

Type of the object.

** version
:PROPERTIES:
:masd.injection.type: int
:END:

Version of the object.

** id
:PROPERTIES:
:masd.injection.type: std::string
:END:

Unique identifier for the object in this diagram.

** connections
:PROPERTIES:
:masd.injection.type: std::vector<connection>
:END:

Connection details for this object.

** child_node
:PROPERTIES:
:masd.injection.type: boost::optional<child_node>
:END:

Parenting information for this object.

** attributes
:PROPERTIES:
:masd.injection.type: std::vector<attribute>
:END:

All attributes associated with the object.

* point
Represents a point in a diagram.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a point with X/Y coordinates.

* boolean
Represents a boolean value.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a boolean value.

* child_node
Represents a child_node in a diagram.

Child nodes are used in Dia to represent the relationship between a
package and the entities it contains. For example, if class O1 is
inside package O0 then class O1 will have a child node element with
a parent pointing to O0.

** parent
:PROPERTIES:
:masd.injection.type: std::string
:END:

Parent for this object.

* string
Represents a string value.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a string value.

* font
Represents a font in a diagram.

** family
:PROPERTIES:
:masd.injection.type: std::string
:END:
** style
:PROPERTIES:
:masd.injection.type: std::string
:END:
** name
:PROPERTIES:
:masd.injection.type: std::string
:END:
* enumeration
Represents a enumeration in a diagram.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a enumeration.

* connection
Connection between entities in a Dia diagram.

** handle
:PROPERTIES:
:masd.injection.type: std::string
:END:

Internal handle for the connection.

** to
:PROPERTIES:
:masd.injection.type: std::string
:END:

Object we're connected to.

** connection_slot
:PROPERTIES:
:masd.injection.type: std::string
:END:

Number of the connection slot we're connected to.

This is known in Dia as a connection but to avoid confusion
between the class and the slot concepts, we renamed it.

* rectangle
Represents a rectangle in a diagram.

** value
:PROPERTIES:
:masd.injection.type: std::string
:END:

Text representation of a rectangle with a pair of X/Y coordinates.

* hydrator
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:

Reads a Dia diagram and instatiates the dia model objects.

* hydration_error
:PROPERTIES:
:masd.injection.stereotypes: masd::exception
:END:

An error occurred while reading a diagram.

* main
:PROPERTIES:
:masd.injection.stereotypes: masd::entry_point, dogen::untypable
:END:
* CMakeLists
:PROPERTIES:
:masd.injection.stereotypes: masd::build::cmakelists, dogen::handcrafted::cmake
:END:
