#+title: dogen.text
#+options: <:nil c:nil todo:nil ^:nil d:nil date:nil author:nil
:PROPERTIES:
:masd.injection.dia.comment: true
:masd.injection.model_modules: dogen.text
:masd.injection.reference: cpp.builtins
:masd.injection.reference: cpp.boost
:masd.injection.reference: cpp.std
:masd.injection.reference: dogen
:masd.injection.reference: dogen.variability
:masd.injection.reference: dogen.tracing
:masd.injection.reference: dogen.logical
:masd.injection.reference: masd
:masd.injection.reference: masd.variability
:masd.injection.reference: dogen.profiles
:masd.injection.input_technical_space: cpp
:masd.variability.profile: dogen.profiles.base.default_profile
:END:
* entities
** entities::model
:PROPERTIES:
:masd.injection.stereotypes: Nameable, MetaNameable, DeterminableOrigin
:END:

Yarn model.

*** references
:PROPERTIES:
:masd.injection.type: std::unordered_map<identification::entities::logical_name, logical::entities::origin_types>
:END:

All other models that this model depends on, mapped to their origin.

*** leaves
:PROPERTIES:
:masd.injection.type: std::unordered_set<identification::entities::logical_name>
:END:

All leaf types in this model.

Leaves are types concrete types which have a parent.

*** elements
:PROPERTIES:
:masd.injection.type: std::list<element_artefacts>
:END:
*** root_module
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<logical::entities::structural::module>
:END:

The module that represents the model.

*** has_generatable_types
:PROPERTIES:
:masd.injection.type: bool
:END:

If true the intermediate model has at least one generable type, false otherwise.

*** input_technical_space
:PROPERTIES:
:masd.injection.type: logical::entities::technical_space
:END:

Technical space which this model used originally.

*** output_technical_space
:PROPERTIES:
:masd.injection.type: logical::entities::technical_space
:END:

Technical space into which to output the model.

*** all_technical_spaces
:PROPERTIES:
:masd.injection.type: std::unordered_set<logical::entities::technical_space>
:END:

Set of all technical concrete spaces involved in generating this model.

Includes the primary technical space (e.g. the output technical space) as well as
all of the secondary technical spaces. Does not include any abstract technical
spaces.

*** orm_properties
:PROPERTIES:
:masd.injection.type: boost::optional<logical::entities::orm::model_properties>
:END:
*** enabled_archetype_for_element
:PROPERTIES:
:masd.injection.type: std::unordered_set<element_archetype>
:END:
*** global_enablement_properties
:PROPERTIES:
:masd.injection.type: global_enablement_properties
:END:
*** extraction_properties
:PROPERTIES:
:masd.injection.type: logical::entities::extraction_properties
:END:
*** managed_directories
:PROPERTIES:
:masd.injection.type: std::list<boost::filesystem::path>
:END:
** entities::formatting_styles
:PROPERTIES:
:masd.injection.stereotypes: masd::enumeration
:END:
*** stock
*** wale
*** stitch
** entities::element_archetype
:PROPERTIES:
:masd.cpp.hash.enabled: true
:END:
*** element
:PROPERTIES:
:masd.injection.type: std::string
:END:
*** archetype
:PROPERTIES:
:masd.injection.type: std::string
:END:
** entities::backend_properties
Properties related to the backend.

*** enabled
:PROPERTIES:
:masd.injection.type: bool
:END:

If true, this backend is enabled.

** entities::global_enablement_properties
*** backend_properties
:PROPERTIES:
:masd.injection.type: std::unordered_map<std::string, backend_properties>
:END:
*** facet_properties
:PROPERTIES:
:masd.injection.type: std::unordered_map<std::string, facet_properties>
:END:
*** archetype_properties
:PROPERTIES:
:masd.injection.type: std::unordered_map<std::string, archetype_properties>
:END:
*** denormalised_archetype_properties
:PROPERTIES:
:masd.injection.type: std::unordered_map<std::string, denormalised_archetype_properties>
:END:
** entities::denormalised_archetype_properties
*** backend_enabled
:PROPERTIES:
:masd.injection.type: bool
:END:
*** facet_enabled
:PROPERTIES:
:masd.injection.type: bool
:END:
*** facet_overwrite
:PROPERTIES:
:masd.injection.type: bool
:END:
*** archetype_enabled
:PROPERTIES:
:masd.injection.type: bool
:END:
*** archetype_overwrite
:PROPERTIES:
:masd.injection.type: boost::optional<bool>
:END:
** entities::facet_properties
*** enabled
:PROPERTIES:
:masd.injection.type: bool
:END:

If true, this facet is enabled.

*** overwrite
:PROPERTIES:
:masd.injection.type: bool
:END:
** entities::archetype_properties
Archetype level properties, applicable to all instances of this archetype.

*** enabled
:PROPERTIES:
:masd.injection.type: bool
:END:

If false, will disable all instances of this archetype.

*** overwrite
:PROPERTIES:
:masd.injection.type: boost::optional<bool>
:END:
** entities::Nameable
:PROPERTIES:
:masd.injection.stereotypes: masd::object_template
:END:
*** name
:PROPERTIES:
:masd.injection.type: identification::entities::logical_name
:END:
** entities::MetaNameable
:PROPERTIES:
:masd.injection.stereotypes: masd::object_template
:END:
*** meta_name
:PROPERTIES:
:masd.injection.type: identification::entities::logical_name
:END:
** entities::DeterminableOrigin
:PROPERTIES:
:masd.injection.stereotypes: masd::object_template
:END:

A unit of logical that can be code generated.

*** origin_sha1_hash
:PROPERTIES:
:masd.injection.type: std::string
:END:

SHA1 key of the original injection model.

** entities::element_artefacts
Maps logical elements with the physical artefacts that will be produced from them.

*** element
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<logical::entities::element>
:END:

Logical element that gives rise to the artefact.

*** artefacts
:PROPERTIES:
:masd.injection.type: std::unordered_map<std::string, boost::shared_ptr<physical::entities::artefact>>
:END:

Physical artefact that will be produced from the logical element.

** entities::model_set
:PROPERTIES:
:masd.injection.stereotypes: Nameable
:END:

Represents a set of related models.

*** models
:PROPERTIES:
:masd.injection.type: std::list<model>
:END:

Models that belong to this set.

* transforms
** transforms::generability_transform
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::model_to_text_chain
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::model_to_text_technical_space_chain
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable::header_only, dogen::forward_declarable
:END:
** transforms::model_to_text_technical_space_chain_registrar
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable, dogen::forward_declarable
:END:
*** transforms_by_technical_space_
:PROPERTIES:
:masd.injection.type: std::unordered_map<logical::entities::technical_space, std::shared_ptr<model_to_text_technical_space_chain>>
:END:
** transforms::local_enablement_transform
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::artefact_properties_transform
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::formatting_transform
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::formatting_configuration
*** style
:PROPERTIES:
:masd.injection.type: entities::formatting_styles
:END:
*** input
:PROPERTIES:
:masd.injection.type: std::string
:END:
** transforms::model_generation_chain
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::global_enablement_transform
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** transforms::context
:PROPERTIES:
:masd.cpp.types.class_forward_declarations.enabled: true
:masd.injection.stereotypes: dogen::typeable, dogen::pretty_printable
:END:
*** physical_meta_model
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<physical::entities::meta_model>
:END:

Meta-model for the physical dimension.

*** output_directory_path
:PROPERTIES:
:masd.injection.type: boost::filesystem::path
:END:

FIXME: to be removed

*** feature_model
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<variability::entities::feature_model>
:END:
*** tracer
:PROPERTIES:
:masd.injection.type: boost::shared_ptr<tracing::tracer>
:END:
*** generation_timestamp
:PROPERTIES:
:masd.injection.type: std::string
:END:

Human readable timestamp of when the generation took place.

** transforms::transformation_error
:PROPERTIES:
:masd.injection.stereotypes: masd::exception
:END:

An error occurred whilst applying a transformation.

** transforms::registrar_error
:PROPERTIES:
:masd.injection.stereotypes: masd::exception
:END:
** transforms::model_to_text_transform
:PROPERTIES:
:masd.cpp.types.class_forward_declarations.enabled: true
:masd.injection.stereotypes: dogen::handcrafted::typeable::header_only
:END:
* formatters
** formatters::formatting_error
:PROPERTIES:
:masd.injection.stereotypes: masd::exception
:END:

An error has occurred while formatting.

** formatters::namespace_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::scoped_namespace_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::boilerplate_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::scoped_boilerplate_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::dependencies_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::header_guard_formatter
:PROPERTIES:
:masd.injection.stereotypes: dogen::handcrafted::typeable
:END:
** formatters::boilerplate_properties
*** preamble
:PROPERTIES:
:masd.injection.type: std::string
:END:
*** postamble
:PROPERTIES:
:masd.injection.type: std::string
:END:
*** dependencies
:PROPERTIES:
:masd.injection.type: std::list<std::string>
:END:
*** header_guard
:PROPERTIES:
:masd.injection.type: std::string
:END:
*** technical_space
:PROPERTIES:
:masd.injection.type: logical::entities::technical_space
:END:
*** generate_preamble
:PROPERTIES:
:masd.injection.type: bool
:END:
*** generate_header_guards
:PROPERTIES:
:masd.injection.type: bool
:END:
* registrar
:PROPERTIES:
:masd.injection.stereotypes: masd::serialization::type_registrar
:END:
* main
:PROPERTIES:
:masd.injection.stereotypes: masd::entry_point, dogen::untypable
:END:
* CMakeLists
:PROPERTIES:
:masd.injection.stereotypes: masd::build::cmakelists, dogen::handcrafted::cmake
:END:
