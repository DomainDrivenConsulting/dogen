<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1277px" preserveAspectRatio="none" style="width:1118px;height:1277px;" version="1.1" viewBox="0 0 1118 1277" width="1118px" zoomAndPan="magnify"><defs><filter height="300%" id="f1g4m14i8pk22e" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><path d="M6,8 L6,1152.9609 L558,1152.9609 L558,18 L548,8 L6,8 " fill="#FBFB77" filter="url(#f1g4m14i8pk22e)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M548,8 L548,18 L558,18 L548,8 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="25.0669"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="427" x="12" y="40.1997">Codec.Dia is a unidirectional transformation model that transforms</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="278" x="12" y="55.3325">a Dia @e diagram into an codec @e model.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="70.4653"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="492" x="12" y="85.5981">By that we mean that it is a model designed to transform a representation of</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="476" x="12" y="100.731">a user model in Dia diagram format to its counterpart in the codec format,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="531" x="12" y="115.8638">taking into account any special masd meta-data which the user may have encoded</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="522" x="12" y="130.9966">into the Dia diagram. Note that the Dia diagram format contains a representation</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="457" x="12" y="146.1294">of UML. We pass that meta-data straight through into the codec model,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="197" x="12" y="161.2622">without any further processing.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="176.395"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="290" x="12" y="191.5278">@section codec_dia_0 Dia diagrams as DAGs</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="206.6606"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="467" x="12" y="221.7935">Dia diagrams are made up of @e objects, identified by IDs. These objects</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="470" x="12" y="236.9263">contain a number of UML model elements, which we are interested in. For</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="58" x="12" y="252.0591">instance:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="267.1919"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="87" x="12" y="282.3247">@li UML class</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="145" x="12" y="297.4575">@li UML generalisation</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="91" x="12" y="312.5903">@li UML notes</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="327.7231"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="444" x="12" y="342.856">and so on. Each of these objects will contribute to am codec element.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="449" x="12" y="357.9888">However, we need to be aware of object containment - e.g. if a class is</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="500" x="12" y="373.1216">contained in a package. This is because the codec element names are scoped</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="491" x="12" y="388.2544">by the packages. So, to make our life easier we created a DAG of Dia objects</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="498" x="12" y="403.3872">that provides us with the information in dependency order. That is, we process</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="519" x="12" y="418.52">dia objects in such a way that when a dependency exists, we know that the object</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="525" x="12" y="433.6528">in which we depend on has already been processed. Please note that to ensure no</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="487" x="12" y="448.7856">cycles we had to ignore some of the UML objects such as UML aggregation -</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="441" x="12" y="463.9185">but fortunately, these objects do not provide sufficient information as</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="491" x="12" y="479.0513">required for dogen transformations, so not much was lost. Instead, one must</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="242" x="12" y="494.1841">manually declare attributes in a class.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="509.3169"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="361" x="12" y="524.4497">See @ref grapher for details on how the the DAG is built.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="539.5825"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="301" x="12" y="554.7153">@section codec_dia_1 Intermediate processing</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="569.8481"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="464" x="12" y="584.981">To make the code easier to read and maintain, we created a numeber of</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="419" x="12" y="600.1138">intermediate stages between a Dia diagram and an codec model:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="615.2466"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="402" x="12" y="630.3794">@li Dia object -&gt; processed object -&gt; profile -&gt; codec element</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="645.5122"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="439" x="12" y="660.645">This may look a bit excessive at first glance, but it was done because</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="443" x="12" y="675.7778">the shape of the Dia objects is a bit too generic for our purposes, and</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="437" x="12" y="690.9106">the resulting processing code was full of loops and look-ups. Instead,</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="454" x="12" y="706.0435">we make the generic Dia object into a very concrete processed object -</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="446" x="12" y="721.1763">still preserving most of the semantics of Dia - and then from those we</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="425" x="12" y="736.3091">build a profile. A profile allows us to quickly scan for UML and masd</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="431" x="12" y="751.4419">type information without getting lost in the intricacies of the generic</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="414" x="12" y="766.5747">Dia structure. With these in hand, the @ref transformer is able to</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="446" x="12" y="781.7075">create the corresponding masd entity, and the transformation code is</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="88" x="12" y="796.8403">not obscured.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="811.9731"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="239" x="12" y="827.106">@section codec_dia_2 Dia meta-data</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="842.2388"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="424" x="12" y="857.3716">There are a couple of conventions on how to model in Dia that one</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="294" x="12" y="872.5044">needs to follow in order to comply with Dogen:</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="887.6372"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="421" x="12" y="902.77">@li any public attribute in a class is automatically converted into a</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="432" x="12" y="917.9028">masd property rather than a member variable. This means that it is</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="342" x="12" y="933.0356">expected that a getter and a setter will be generated.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="948.1685"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="441" x="12" y="963.3013">@li a number of stereotypes were added, as per the definitions in the</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="369" x="12" y="978.4341">MASD UML profile. For details, see the Dogen UML profile.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="993.5669"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="466" x="12" y="1008.6997">@li any type without any stereotype assumes a default stereotype, again</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="162" x="12" y="1023.8325">as per MASD UML profile.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="1038.9653"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="510" x="12" y="1054.0981">@li any UML Note with the marker #DOGEN masd.codec.dia.comment=true will</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="455" x="12" y="1069.231">be used as the documentation of the current package - or the model, if</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="438" x="12" y="1084.3638">place at the top-level. Only one such note is expected per containing</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="12" y="1099.4966">entity.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="1114.6294"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="365" x="12" y="1129.7622">For details on the stereotypes see the MASD UML profile.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="16" y="1144.895"/><!--MD5=[4ee9d126d0901dfa903f88c66be25600]
class building_error--><rect fill="#E8C2F8" filter="url(#f1g4m14i8pk22e)" height="53.9375" id="building_error" style="stroke: #A80036; stroke-width: 1.5;" width="145" x="593.5" y="553.5"/><rect fill="#E8C2F8" height="37.9375" style="stroke: #A80036; stroke-width: 1.5;" width="145" x="593.5" y="553.5"/><ellipse cx="608.5" cy="572.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M611.4688,578.1094 Q610.8906,578.4063 610.25,578.5547 Q609.6094,578.7031 608.9063,578.7031 Q606.4063,578.7031 605.0859,577.0547 Q603.7656,575.4063 603.7656,572.2813 Q603.7656,569.1563 605.0859,567.5 Q606.4063,565.8438 608.9063,565.8438 Q609.6094,565.8438 610.2578,566 Q610.9063,566.1563 611.4688,566.4531 L611.4688,569.1719 Q610.8438,568.5938 610.25,568.3203 Q609.6563,568.0469 609.0313,568.0469 Q607.6875,568.0469 607,569.1172 Q606.3125,570.1875 606.3125,572.2813 Q606.3125,574.375 607,575.4453 Q607.6875,576.5156 609.0313,576.5156 Q609.6563,576.5156 610.25,576.2422 Q610.8438,575.9688 611.4688,575.3906 L611.4688,578.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="117" x="620.5" y="569.6387">«masd::exception»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="86" x="636" y="583.6074">building_error</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="594.5" x2="737.5" y1="591.4375" y2="591.4375"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="594.5" x2="737.5" y1="599.4375" y2="599.4375"/><!--MD5=[2bbca285c5998b88001867d52242bd59]
class visitor--><rect fill="#FFFACD" filter="url(#f1g4m14i8pk22e)" height="66.7422" id="visitor" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="773.5" y="547"/><rect fill="#FFFACD" height="37.9375" style="stroke: #A80036; stroke-width: 1.5;" width="315" x="773.5" y="547"/><ellipse cx="788.5" cy="565.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M791.4688,571.6094 Q790.8906,571.9063 790.25,572.0547 Q789.6094,572.2031 788.9063,572.2031 Q786.4063,572.2031 785.0859,570.5547 Q783.7656,568.9063 783.7656,565.7813 Q783.7656,562.6563 785.0859,561 Q786.4063,559.3438 788.9063,559.3438 Q789.6094,559.3438 790.2578,559.5 Q790.9063,559.6563 791.4688,559.9531 L791.4688,562.6719 Q790.8438,562.0938 790.25,561.8203 Q789.6563,561.5469 789.0313,561.5469 Q787.6875,561.5469 787,562.6172 Q786.3125,563.6875 786.3125,565.7813 Q786.3125,567.875 787,568.9453 Q787.6875,570.0156 789.0313,570.0156 Q789.6563,570.0156 790.25,569.7422 Q790.8438,569.4688 791.4688,568.8906 L791.4688,571.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="287" x="800.5" y="563.1387">«dogen::handcrafted::typeable::header_only»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="925.5" y="577.1074">visitor</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="774.5" x2="1087.5" y1="584.9375" y2="584.9375"/><ellipse cx="784.5" cy="595.9375" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="82" x="793.5" y="599.1479">builder builder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="774.5" x2="1087.5" y1="605.7422" y2="605.7422"/><!--MD5=[240e21b7cc4dfe0b0a0be7b0ae6adbaa]
class builder--><rect fill="#FFFACD" filter="url(#f1g4m14i8pk22e)" height="53.9375" id="builder" style="stroke: #A80036; stroke-width: 1.5;" width="230" x="167" y="1213"/><rect fill="#FFFACD" height="37.9375" style="stroke: #A80036; stroke-width: 1.5;" width="230" x="167" y="1213"/><ellipse cx="182" cy="1231.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M184.9688,1237.6094 Q184.3906,1237.9063 183.75,1238.0547 Q183.1094,1238.2031 182.4063,1238.2031 Q179.9063,1238.2031 178.5859,1236.5547 Q177.2656,1234.9063 177.2656,1231.7813 Q177.2656,1228.6563 178.5859,1227 Q179.9063,1225.3438 182.4063,1225.3438 Q183.1094,1225.3438 183.7578,1225.5 Q184.4063,1225.6563 184.9688,1225.9531 L184.9688,1228.6719 Q184.3438,1228.0938 183.75,1227.8203 Q183.1563,1227.5469 182.5313,1227.5469 Q181.1875,1227.5469 180.5,1228.6172 Q179.8125,1229.6875 179.8125,1231.7813 Q179.8125,1233.875 180.5,1234.9453 Q181.1875,1236.0156 182.5313,1236.0156 Q183.1563,1236.0156 183.75,1235.7422 Q184.3438,1235.4688 184.9688,1234.8906 L184.9688,1237.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="202" x="194" y="1229.1387">«dogen::handcrafted::typeable»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="273.5" y="1243.1074">builder</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="168" x2="396" y1="1250.9375" y2="1250.9375"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="168" x2="396" y1="1258.9375" y2="1258.9375"/><!--MD5=[4520fda4e10d4d791ce48fe025810cd4]
class main--><rect fill="#DDA9F3" filter="url(#f1g4m14i8pk22e)" height="53.9375" id="main" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="432.5" y="1213"/><rect fill="#DDA9F3" height="37.9375" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="432.5" y="1213"/><ellipse cx="447.5" cy="1231.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M450.4688,1237.6094 Q449.8906,1237.9063 449.25,1238.0547 Q448.6094,1238.2031 447.9063,1238.2031 Q445.4063,1238.2031 444.0859,1236.5547 Q442.7656,1234.9063 442.7656,1231.7813 Q442.7656,1228.6563 444.0859,1227 Q445.4063,1225.3438 447.9063,1225.3438 Q448.6094,1225.3438 449.2578,1225.5 Q449.9063,1225.6563 450.4688,1225.9531 L450.4688,1228.6719 Q449.8438,1228.0938 449.25,1227.8203 Q448.6563,1227.5469 448.0313,1227.5469 Q446.6875,1227.5469 446,1228.6172 Q445.3125,1229.6875 445.3125,1231.7813 Q445.3125,1233.875 446,1234.9453 Q446.6875,1236.0156 448.0313,1236.0156 Q448.6563,1236.0156 449.25,1235.7422 Q449.8438,1235.4688 450.4688,1234.8906 L450.4688,1237.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="459.5" y="1229.1387">«masd::entry_point, dogen::untypable»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="567" y="1243.1074">main</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="704.5" y1="1250.9375" y2="1250.9375"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="704.5" y1="1258.9375" y2="1258.9375"/><!--MD5=[ba83386d426114557685538e96aa6f68]
class CMakeLists--><rect fill="#99CB99" filter="url(#f1g4m14i8pk22e)" height="53.9375" id="CMakeLists" style="stroke: #A80036; stroke-width: 1.5;" width="367" x="740.5" y="1213"/><rect fill="#99CB99" height="37.9375" style="stroke: #A80036; stroke-width: 1.5;" width="367" x="740.5" y="1213"/><ellipse cx="755.5" cy="1231.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M758.4688,1237.6094 Q757.8906,1237.9063 757.25,1238.0547 Q756.6094,1238.2031 755.9063,1238.2031 Q753.4063,1238.2031 752.0859,1236.5547 Q750.7656,1234.9063 750.7656,1231.7813 Q750.7656,1228.6563 752.0859,1227 Q753.4063,1225.3438 755.9063,1225.3438 Q756.6094,1225.3438 757.2578,1225.5 Q757.9063,1225.6563 758.4688,1225.9531 L758.4688,1228.6719 Q757.8438,1228.0938 757.25,1227.8203 Q756.6563,1227.5469 756.0313,1227.5469 Q754.6875,1227.5469 754,1228.6172 Q753.3125,1229.6875 753.3125,1231.7813 Q753.3125,1233.875 754,1234.9453 Q754.6875,1236.0156 756.0313,1236.0156 Q756.6563,1236.0156 757.25,1235.7422 Q757.8438,1235.4688 758.4688,1234.8906 L758.4688,1237.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="339" x="767.5" y="1229.1387">«masd::build::cmakelists, dogen::handcrafted::cmake»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="69" x="902.5" y="1243.1074">CMakeLists</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="741.5" x2="1106.5" y1="1250.9375" y2="1250.9375"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="741.5" x2="1106.5" y1="1258.9375" y2="1258.9375"/><!--MD5=[fb7404e38f54ba92acc63ed87e653e45]
link N1 to building_error--><!--MD5=[fa3dfd252825d960897aa30b38d86e40]
link building_error to visitor--><!--MD5=[a9cd35b2678fb3715c76874f8a1cf171]
link N1 to builder--><!--MD5=[74820068b2cded44e5893b351b8fa688]
link builder to main--><!--MD5=[367f0f7b9da0cd9a39366f1aecb3ca6d]
link main to CMakeLists--><!--MD5=[8e2dfdaf88fffb7b58929ee859fa224a]
@startuml
set namespaceSeparator ::
note as N1

Codec.Dia is a unidirectional transformation model that transforms
a Dia @e diagram into an codec @e model.

By that we mean that it is a model designed to transform a representation of
a user model in Dia diagram format to its counterpart in the codec format,
taking into account any special masd meta-data which the user may have encoded
into the Dia diagram. Note that the Dia diagram format contains a representation
of UML. We pass that meta-data straight through into the codec model,
without any further processing.

@section codec_dia_0 Dia diagrams as DAGs

Dia diagrams are made up of @e objects, identified by IDs. These objects
contain a number of UML model elements, which we are interested in. For
instance:

@li UML class
@li UML generalisation
@li UML notes

and so on. Each of these objects will contribute to am codec element.
However, we need to be aware of object containment - e.g. if a class is
contained in a package. This is because the codec element names are scoped
by the packages. So, to make our life easier we created a DAG of Dia objects
that provides us with the information in dependency order. That is, we process
dia objects in such a way that when a dependency exists, we know that the object
in which we depend on has already been processed. Please note that to ensure no
cycles we had to ignore some of the UML objects such as UML aggregation -
but fortunately, these objects do not provide sufficient information as
required for dogen transformations, so not much was lost. Instead, one must
manually declare attributes in a class.

See @ref grapher for details on how the the DAG is built.

@section codec_dia_1 Intermediate processing

To make the code easier to read and maintain, we created a numeber of
intermediate stages between a Dia diagram and an codec model:

@li Dia object -> processed object -> profile -> codec element

This may look a bit excessive at first glance, but it was done because
the shape of the Dia objects is a bit too generic for our purposes, and
the resulting processing code was full of loops and look-ups. Instead,
we make the generic Dia object into a very concrete processed object -
still preserving most of the semantics of Dia - and then from those we
build a profile. A profile allows us to quickly scan for UML and masd
type information without getting lost in the intricacies of the generic
Dia structure. With these in hand, the @ref transformer is able to
create the corresponding masd entity, and the transformation code is
not obscured.

@section codec_dia_2 Dia meta-data

There are a couple of conventions on how to model in Dia that one
needs to follow in order to comply with Dogen:

@li any public attribute in a class is automatically converted into a
masd property rather than a member variable. This means that it is
expected that a getter and a setter will be generated.

@li a number of stereotypes were added, as per the definitions in the
MASD UML profile. For details, see the Dogen UML profile.

@li any type without any stereotype assumes a default stereotype, again
as per MASD UML profile.

@li any UML Note with the marker #DOGEN masd.codec.dia.comment=true will
be used as the documentation of the current package - or the model, if
place at the top-level. Only one such note is expected per containing
entity.

For details on the stereotypes see the MASD UML profile.

end note

class building_error <<masd::exception>> #E8C2F8 {
}

class visitor <<dogen::handcrafted::typeable::header_only>> #FFFACD {
        +{field} builder builder
}

class builder <<dogen::handcrafted::typeable>> #FFFACD {
}

class main <<masd::entry_point, dogen::untypable>> #DDA9F3 {
}

class CMakeLists <<masd::build::cmakelists, dogen::handcrafted::cmake>> #99CB99 {
}

@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_212-8u212-b03-2~deb9u1-b03
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: GB
--></g></svg>