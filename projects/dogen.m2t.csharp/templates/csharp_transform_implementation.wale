
std::string {{class.simple_name}}::static_id() {
    return traits::{{archetype.simple_name}}_archetype();
}

std::string {{class.simple_name}}::id() const {
    return static_id();
}

physical::entities::name
{{class.simple_name}}::physical_name() const {
    using physical::helpers::name_factory;
    static const auto r(name_factory::make(csharp::traits::backend_qn(),
        traits::facet_qn(), {{class.simple_name}}::static_id()));
    return r;
}

const logical::entities::name& {{class.simple_name}}::meta_name() const {
    using {{meta_name_factory}};
    static auto r(meta_name_factory::make_{{meta_element}}_name());
    return r;
}

boost::filesystem::path {{class.simple_name}}::full_path(
    const formattables::locator& l, const logical::entities::name& n) const {
    return l.make_full_path(n, static_id());
}

std::list<std::string> {{class.simple_name}}::
inclusion_dependencies(const logical::entities::element& /*e*/) const {
    std::list<std::string> r;
    return r;
}
