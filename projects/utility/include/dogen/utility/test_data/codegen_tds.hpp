/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda
 *
 * This file is distributed under the Kitanda Proprietary Software
 * Licence. See doc/LICENCE.TXT for details.
 *
 */
#ifndef DOGEN_UTILITY_TEST_DATA_CODEGEN_TDS_HPP
#define DOGEN_UTILITY_TEST_DATA_CODEGEN_TDS_HPP

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma once
#endif

#include <boost/filesystem/path.hpp>

namespace dogen {
namespace utility {
namespace test_data {

/**
 * @brief Manages test data sets for code generated by dogen.
 */
class codegen_tds {
public:
    codegen_tds() = delete;
    codegen_tds(const codegen_tds&) = default;
    ~codegen_tds() = default;
    codegen_tds& operator=(const codegen_tds&) = delete;

public:
    explicit codegen_tds(boost::filesystem::path target);

    codegen_tds(codegen_tds&& rhs)
    : target_(std::move(rhs.target_)),
      name_(std::move(rhs.name_)) { }

public:
    boost::filesystem::path data_set();
    boost::filesystem::path target();
    boost::filesystem::path expected();

    boost::filesystem::path actual();
    boost::filesystem::path actual_src();
    boost::filesystem::path actual_include();

private:
    boost::filesystem::path target_;
    std::string name_;
};

} } }

#endif
