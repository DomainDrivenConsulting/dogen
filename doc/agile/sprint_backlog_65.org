#+title: Sprint Backlog 65
#+options: date:nil toc:nil author:nil num:nil
#+todo: STARTED | COMPLETED CANCELLED POSTPONED
#+tags: { story(s) spike(p) }

* Mission

Implement as many formatters as possible using the new cpp
architecture.

* Stories

** Active

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2015-04-27 Mon 18:50]

| Headline                                                           | Time   |      |      |
|--------------------------------------------------------------------+--------+------+------|
| *Total time*                                                       | *4:45* |      |      |
|--------------------------------------------------------------------+--------+------+------|
| Active                                                             |        | 4:45 |      |
| STARTED Sprint and product backlog grooming                        |        |      | 1:02 |
| COMPLETED Fix borked gcc build                                     |        |      | 0:35 |
| COMPLETED Output new world forward declarations                    |        |      | 2:36 |
| COMPLETED Fix missing new line in enumeration forward declarations |        |      | 0:32 |
#+end:

*** STARTED Sprint and product backlog grooming                       :story:
    CLOCK: [2015-04-27 Mon 14:15]--[2015-04-27 Mon 15:07] =>  0:52
    CLOCK: [2015-04-27 Mon 14:05]--[2015-04-27 Mon 14:15] =>  0:10

Updates to sprint and product backlog.

*** STARTED Updates to the manual and readme files                    :story:

Use downtime to update the manual and / or readme file.

*** COMPLETED Fix borked gcc build                                    :story:
    CLOSED: [2015-04-27 Mon 14:15]
    CLOCK: [2015-04-27 Mon 13:00]--[2015-04-27 Mon 13:35] =>  0:35

The last few builds on travis have failed. Figure out why and fix it.

*** COMPLETED Output new world forward declarations                   :story:
    CLOSED: [2015-04-27 Mon 17:01]
    CLOCK: [2015-04-27 Mon 17:55]--[2015-04-27 Mon 18:06] =>  0:11
    CLOCK: [2015-04-27 Mon 17:02]--[2015-04-27 Mon 17:35] =>  0:33
    CLOCK: [2015-04-27 Mon 15:09]--[2015-04-27 Mon 17:01] =>  1:52

We need to find a way to suppress class header formatter and enable
forward declarations formatter; we want to start using new code from
now on.

We will also have to deal with all the breaks that this generates.

*** COMPLETED Fix missing new line in enumeration forward declarations :story:
    CLOSED: [2015-04-27 Mon 18:50]
    CLOCK: [2015-04-27 Mon 18:48]--[2015-04-27 Mon 18:50] =>  0:02
    CLOCK: [2015-04-27 Mon 18:08]--[2015-04-27 Mon 18:38] =>  0:30

For now we put in a hack in the stitch template not to output
those.

*Tasks*

- fix legacy formatters;
- rebase the world
- fix template.

*** Text of GPL V2 licence is the same as V3                          :story:

We seem to have copied and pasted the licence across.

*** Inclusion provision needs to cater for optional case              :story:

While implementing forward declarations we hit a problem: Exceptions
require includes for forward declarations but no other type requires
this. In order for this to work, we need to refactor inclusion
provision to allow for optional inclusion dependencies. For now we put
in a massive hack that allows empty formatter names to be returned
from provider.

*Tasks*

- add a class to represent the inclusion dependency rather than use a
  pair of a list etc.
- make the return type of the interface optional.
- do the appropriate actions in inclusion dependency factory when
  provider returns null for optional.

*** Consider adding a ownership hierarchy method in registrar         :story:

In a few cases we seem to need the ownership hierarchy for all
formatters. We should move this logic to formatter registrar.

*** Contents change check is done twice                               :story:

We seem to check twice if a file has changed:

: 2015-04-26 12:37:28.451464 [DEBUG] [formatters.filesystem_writer] File contents have not changed, and force write is false so not writing.
: 2015-04-26 12:37:28.451486 [DEBUG] [formatters.filesystem_writer] File contents have not changed, and force write is false so not writing.

This is in stitch but it should be the same for knit.

*** Stitch does not handle directories very well                      :story:

At present we seem to generate log files called =.= when we use stitch
against a directory. This should only happen if we use =.= on the
target parameter, e.g.:

: --target .

Not sure why it is happening when we call stitch from CMake since it
should use the full path to the =cpp= directory.

*** Update dynamic section in manual                                  :story:

We need to talk about the new fields, field templates, etc.

*** Add stitch section in manual                                      :story:

We need to document stitch:

- formal definition of the language and its limitations;
- command line usage of the tool.

*** Add kvp support to =identifier_parser=                            :story:

We have code to split kvps all over the place. We should do this in a
single pace, and use boost spirit or tokenizer. For one such
implementation with spirit see:

[[http://boost-spirit.com/home/2010/02/24/parsing-skippers-and-skipping-parsers/][Parsing Skippers and Skipping Parsers]]

** Deprecated
