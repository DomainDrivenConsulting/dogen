#+title: Release Notes for Sprint 32
#+options: date:nil toc:nil author:nil num:nil
#+todo: ANALYSIS IMPLEMENTATION TESTING | COMPLETED CANCELLED
#+tags: story(s) epic(e) task(t) note(n) spike(p)

* Release Notes

This file contains all stories that were closed during sprint 32.

** Development Stories Implemented

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2013-08-05 Mon 23:24]

| Headline                                          | Time   |      |      |
|---------------------------------------------------+--------+------+------|
| *Total time*                                      | *0:19* |      |      |
|---------------------------------------------------+--------+------+------|
| Development Stories Implemented                   |        | 0:19 |      |
| IMPLEMENTATION Release notes and backlog grooming |        |      | 0:19 |
#+end:

*** IMPLEMENTATION Release notes and backlog grooming                  :task:
    CLOCK: [2013-08-05 Mon 23:05]--[2013-08-05 Mon 23:24] =>  0:19

*** Split C++ model                                                    :epic:

We should move the transformation code outside of the C++ model -
this would make maintenance a lot easier. In fact there are three
concerns here:

- the C++ model, responsible for modeling the C++ types: enumeration,
  namespace, class etc. this could stay as =cpp=.
- the SML to C++ transformer, responsible for taking an SML
  representation of a model and converting it to the C++ equivalent;
  this is =sml_to_cpp=, since its a unidirectional transformation.
  this would take a lot of classes such as locator, includer, etc;
- the =writer= model, responsible for taking a C++ representation and
  writing it to file.

With this we would have much more cohesive code, without any of the
complications we have at the moment.

Also, this will make the [[*Make%20a%20more%20truthful%20C%2B%2B%20model][refactoring of C++]] a lot easier.

** Deprecated Development Stories
