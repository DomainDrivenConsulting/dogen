#+title: Release Notes for Sprint 32
#+options: date:nil toc:nil author:nil num:nil
#+todo: ANALYSIS IMPLEMENTATION TESTING | COMPLETED CANCELLED
#+tags: story(s) epic(e) task(t) note(n) spike(p)

* Release Notes

This file contains all stories that were closed during sprint 32.

** Development Stories Implemented

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2013-08-06 Tue 18:40]

| Headline                                                                   | Time   |      |      |
|----------------------------------------------------------------------------+--------+------+------|
| *Total time*                                                               | *2:21* |      |      |
|----------------------------------------------------------------------------+--------+------+------|
| Development Stories Implemented                                            |        | 2:21 |      |
| IMPLEMENTATION Release notes and backlog grooming                          |        |      | 0:26 |
| IMPLEMENTATION Split transformation code from C++ model into its own model |        |      | 1:55 |
#+end:

*** IMPLEMENTATION Release notes and backlog grooming                  :task:
    CLOCK: [2013-08-05 Mon 23:24]--[2013-08-05 Mon 23:31] =>  0:07
    CLOCK: [2013-08-05 Mon 23:05]--[2013-08-05 Mon 23:24] =>  0:19

*** COMPLETED Split formatting code from C++ model into its own model :story:
    CLOSED: [2013-08-05 Mon 23:27]

The =cpp_formatters= model is responsible for taking a C++
representation and writing it to file.

*** IMPLEMENTATION Split transformation code from C++ model into its own model :story:
    CLOCK: [2013-08-06 Tue 18:14]--[2013-08-06 Tue 18:40] =>  0:26
    CLOCK: [2013-08-06 Tue 17:56]--[2013-08-06 Tue 18:08] =>  0:12
    CLOCK: [2013-08-06 Tue 08:24]--[2013-08-06 Tue 08:37] =>  0:13
    CLOCK: [2013-08-06 Tue 07:46]--[2013-08-06 Tue 08:18] =>  0:32
    CLOCK: [2013-08-05 Mon 23:24]--[2013-08-05 Mon 23:56] =>  0:32

The SML to C++ transformer is responsible for taking an SML
representation of a model and converting it to the C++ equivalent;
this is =sml_to_cpp=, since its a unidirectional transformation. It
would takes a lot of classes such as locator, includer, etc;

*** Create a transformation workflow in C++ transformation model      :story:
*** Create a formatting workflow in C++ formatters model              :story:

** Deprecated Development Stories
