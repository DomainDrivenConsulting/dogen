#+title: Release Notes for Sprint 41
#+options: date:nil toc:nil author:nil num:nil
#+todo: ANALYSIS IMPLEMENTATION TESTING | COMPLETED CANCELLED
#+tags: story(s) epic(e) task(t) note(n) spike(p)

* Release Notes

This file contains all stories that were closed during sprint 41.

** Development Stories Implemented

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2013-12-28 Sat 13:12]

| Headline                                                      | Time    |       |       |
|---------------------------------------------------------------+---------+-------+-------|
| *Total time*                                                  | *32:35* |       |       |
|---------------------------------------------------------------+---------+-------+-------|
| Development Stories Implemented                               |         | 32:35 |       |
| IMPLEMENTATION Release notes and backlog grooming             |         |       |  0:54 |
| COMPLETED Use relationship container for visitors             |         |       |  1:13 |
| COMPLETED Create an =association_indexer= and add tests       |         |       |  8:20 |
| COMPLETED Remove model from extractor                         |         |       |  0:16 |
| COMPLETED Fix boost variant errors with boost 1.54            |         |       |  4:19 |
| COMPLETED Fix doxygen's main page documentation               |         |       |  1:03 |
| COMPLETED Compile code without PFH                            |         |       | 12:47 |
| COMPLETED CDash is not reporting builds                       |         |       |  0:45 |
| COMPLETED Reduce the number of valgrind errors back to normal |         |       |  0:30 |
| COMPLETED Update read me file                                 |         |       |  0:47 |
| IMPLEMENTATION Fix broken builds due to a variety of errors   |         |       |  0:45 |
| IMPLEMENTATION Add om's workflow to engine                    |         |       |  0:56 |
#+end:

*** IMPLEMENTATION Release notes and backlog grooming                  :task:
    CLOCK: [2013-12-26 Thu 22:35]--[2013-12-26 Thu 22:46] =>  0:11
    CLOCK: [2013-12-23 Mon 14:40]--[2013-12-23 Mon 14:45] =>  0:05
    CLOCK: [2013-12-23 Mon 14:32]--[2013-12-23 Mon 14:40] =>  0:08
    CLOCK: [2013-12-23 Mon 14:21]--[2013-12-23 Mon 14:32] =>  0:11
    CLOCK: [2013-12-18 Wed 07:56]--[2013-12-18 Wed 08:11] =>  0:15
    CLOCK: [2013-12-16 Mon 07:55]--[2013-12-16 Mon 07:59] =>  0:04

*** Update manual                                                     :story:

Use compilation downtime to update the manual.

*** COMPLETED Use relationship container for visitors                 :story:
    CLOSED: [2013-12-16 Mon 18:29]
    CLOCK: [2013-12-16 Mon 18:10]--[2013-12-16 Mon 18:29] =>  0:19
    CLOCK: [2013-12-16 Mon 17:50]--[2013-12-16 Mon 18:03] =>  0:13
    CLOCK: [2013-12-16 Mon 07:59]--[2013-12-16 Mon 08:40] =>  0:41

We need to store the two-way relationships related to visitation.

*** COMPLETED Create an =association_indexer= and add tests           :story:
    CLOSED: [2013-12-20 Fri 22:48]
**** COMPLETED Remove unnecessary extractor methods                   :spike:
     CLOSED: [2013-12-16 Mon 23:35]
     CLOCK: [2013-12-16 Mon 23:28]--[2013-12-16 Mon 23:35] =>  0:07

We forgot to remove some methods in extractor that are no longer
necessary:

- properties for concept: we have done concept and property expansion
  now, so all we need to do is to look at local properties.
- extract inheritance graph: no one is using this functionality.

Get rid of these methods to avoid confusing the analysis for
association indexer.

**** COMPLETED Create the class skeleton with tests                    :task:
     CLOSED: [2013-12-17 Tue 00:10]
     CLOCK: [2013-12-16 Mon 23:01]--[2013-12-16 Mon 23:28] =>  0:27
     CLOCK: [2013-12-16 Mon 18:30]--[2013-12-16 Mon 18:45] =>  0:15
     CLOCK: [2013-12-13 Fri 18:07]--[2013-12-13 Fri 18:17] =>  0:10
     CLOCK: [2013-12-13 Fri 08:43]--[2013-12-13 Fri 08:48] =>  0:05

**** COMPLETED Mock models with properties have missing types         :spike:
     CLOSED: [2013-12-17 Tue 11:43]
     CLOCK: [2013-12-17 Tue 11:25]--[2013-12-17 Tue 11:43] =>  0:18
     CLOCK: [2013-12-17 Tue 11:12]--[2013-12-17 Tue 11:25] =>  0:13

It seems we do not always add associated types when we create mock
models that have objects with properties; in a lot of cases, we add
the property without also adding the types the property requires. This
is a problem for the association indexer.

**** COMPLETED Mock models do not perform property expansion correctly :spike:
     CLOSED: [2013-12-17 Tue 19:52]
     CLOCK: [2013-12-17 Tue 19:40]--[2013-12-17 Tue 19:57] =>  0:17
     CLOCK: [2013-12-17 Tue 12:03]--[2013-12-17 Tue 12:07] =>  0:04
     CLOCK: [2013-12-17 Tue 11:55]--[2013-12-17 Tue 12:03] =>  0:08

When the property indexing flag is set, one expects all objects that
model concepts to have the properties copied across to the local
properties container. However, we only add the relationship without
copying.

**** COMPLETED Implement class and add unit tests                      :task:
     CLOSED: [2013-12-19 Thu 23:42]
     CLOCK: [2013-12-19 Thu 22:50]--[2013-12-19 Thu 23:42] =>  0:52
     CLOCK: [2013-12-19 Thu 17:52]--[2013-12-19 Thu 18:38] =>  0:46
     CLOCK: [2013-12-18 Wed 08:28]--[2013-12-18 Wed 08:42] =>  0:14
     CLOCK: [2013-12-18 Wed 08:11]--[2013-12-18 Wed 08:28] =>  0:17
     CLOCK: [2013-12-18 Wed 07:55]--[2013-12-18 Wed 07:56] =>  0:01
     CLOCK: [2013-12-17 Tue 11:44]--[2013-12-17 Tue 11:47] =>  0:03
     CLOCK: [2013-12-17 Tue 10:49]--[2013-12-17 Tue 10:52] =>  0:03
     CLOCK: [2013-12-16 Mon 23:35]--[2013-12-17 Tue 00:10] =>  0:35

Missing tests:

- object with multiple properties of different types, no duplicates
- object with multiple properties of different types, duplicates
- object with operation with single parameter
- object with operation with multiple parameters
- object with operation with return type
- object with different types of nested qualified names

**** COMPLETED Plug into workflow                                      :task:
     CLOSED: [2013-12-19 Thu 23:53]
     CLOCK: [2013-12-19 Thu 23:43]--[2013-12-19 Thu 23:53] =>  0:10

Unexpectedly, nothing to rebaseline. this is because engine specs
compare the code generator output rather than the contents of the SML
model and relationships are not yet expressed in code.

**** COMPLETED Copy across applicable extractor tests                 :spike:
     CLOSED: [2013-12-20 Fri 18:23]
     CLOCK: [2013-12-20 Fri 17:43]--[2013-12-20 Fri 18:23] =>  0:40
     CLOCK: [2013-12-20 Fri 07:38]--[2013-12-20 Fri 08:24] =>  0:46

We appear to have forgotten to copy the extractor tests that make
sense for the association indexer.

**** COMPLETED Start using indexed associations                        :task:
     CLOSED: [2013-12-20 Fri 22:48]
     CLOCK: [2013-12-20 Fri 22:12]--[2013-12-20 Fri 22:47] =>  0:35
     CLOCK: [2013-12-20 Fri 20:58]--[2013-12-20 Fri 22:12] =>  1:14

*** COMPLETED Remove model from extractor                             :spike:
    CLOSED: [2013-12-21 Sat 11:36]
    CLOCK: [2013-12-21 Sat 11:20]--[2013-12-21 Sat 11:36] =>  0:16

*** COMPLETED Make EOS support optional                               :story:
    CLOSED: [2013-12-23 Mon 17:22]

With the release of boost 1.54 We can almost compile dogen with a
vanilla boost. once we make ODB optional, the only blocker would be
EOS. We should make it optional too. This is not so easy because it
would break the tests as the output is expected to contain EOS
stuff. Perhaps we should consider removing it altogether?

Fixed as part of the PFH work.

*** COMPLETED Fix spelling of =rountrip_type=                         :story:
    CLOSED: [2013-12-23 Mon 18:07]

Should be =roundtrip_type=.

*** COMPLETED Fix boost variant errors with boost 1.54                :story:
    CLOSED: [2013-12-25 Wed 11:59]
    CLOCK: [2013-12-24 Tue 11:12]--[2013-12-24 Tue 13:33] =>  2:21
    CLOCK: [2013-12-24 Tue 10:43]--[2013-12-24 Tue 11:12] =>  0:29
    CLOCK: [2013-12-24 Tue 09:14]--[2013-12-24 Tue 10:43] =>  1:29

New understanding: the problem appears to be with boost 1.55;
compiling with g++-4.7 revealed the same errors. The root cause of the
problem appears to be some changes in boost 1.54 as described [[http://lists.boost.org/boost-users/2013/08/79650.php][here]]. It
seems like the easiest thing is to require boost 1.55, but the problem
is a lot of distributions are shipping with 1.54 and there are no debs
for 1.55 so we can't even tell if the changes to build without PFH
have worked.

Previous understanding: When we compile with stable gcc we get errors
in the boost model. They appear to be related to using variants with
multiple primitive types such as int and double. We should try to
change the model to use only one primitive type and see if it compiles
with G++ 4.8.

*** COMPLETED Fix doxygen's main page documentation                   :story:
    CLOSED: [2013-12-26 Thu 22:29]
    CLOCK: [2013-12-26 Thu 22:05]--[2013-12-26 Thu 22:29] =>  0:24
    CLOCK: [2013-12-26 Thu 21:49]--[2013-12-26 Thu 22:04] =>  0:15
    CLOCK: [2013-12-25 Wed 12:32]--[2013-12-25 Wed 12:56] =>  0:24

Our main page documentation its awful at the moment - really old and
meaningless. We should either remove it altogether or replace it with
something meaningful.

*** COMPLETED Compile code without PFH                                :story:
    CLOSED: [2013-12-26 Thu 22:42]

Now that boost and the compilers being distributed have all the
features we need, we no longer require PFH. We should get rid of it,
as it will allow users to build dogen more easily.

**** COMPLETED Port code to boost 1.54                                 :task:
     CLOSED: [2013-12-22 Sun 02:48]
     CLOCK: [2013-12-22 Sun 00:30]--[2013-12-22 Sun 02:46] =>  2:16
     CLOCK: [2013-12-21 Sat 16:49]--[2013-12-21 Sat 18:33] =>  1:44

Mainly deal with move from boost log v1 to v2.

**** COMPLETED Deal with other compilation errors                      :task:
     CLOSED: [2013-12-22 Sun 03:05]
     CLOCK: [2013-12-22 Sun 02:48]--[2013-12-22 Sun 03:04] =>  0:16
     CLOCK: [2013-12-22 Sun 02:46]--[2013-12-22 Sun 02:48] =>  0:02

- class_e in boost model cannot have int and double
- we need a way to disable ODB and EOS. this includes header
  validation.
- we need a way to pick-up local installs of ODB and EOS. this must
  also work so that if there is a boost installed there it would take
  precedence over system install, but system install would be found if
  no other boost is available.
- we need to upgrade turbo to boost 1.54 or even 1.55. ideally we want
  to pick-up any boost after boost log has been added.
- investigate error:

: cp: cannot stat ‘/usr/lib/x86_64-linux-gnu/libpthread.so.1.54.0’: No such file or directory

**** COMPLETED Upgrade turbo to boost 1.55                             :task:
     CLOSED: [2013-12-23 Mon 14:29]

The least disruptive way of doing this change is to upgrade boost in
turbo, get all of the PFHs up-to-date and the build green across the
board, and then start removing any PFH specific things from dogen.

***** COMPLETED Upgrade OSX and Linux except liebnitz
      CLOSED: [2013-12-22 Sun 18:41]
      CLOCK: [2013-12-22 Sun 14:07]--[2013-12-22 Sun 14:24] =>  0:17
      CLOCK: [2013-12-22 Sun 13:47]--[2013-12-22 Sun 14:07] =>  0:20
      CLOCK: [2013-12-22 Sun 13:18]--[2013-12-22 Sun 13:47] =>  0:29
      CLOCK: [2013-12-22 Sun 12:27]--[2013-12-22 Sun 13:18] =>  0:51
      CLOCK: [2013-12-22 Sun 11:10]--[2013-12-22 Sun 12:27] =>  1:17

***** COMPLETED Upgrade Windows
      CLOSED: [2013-12-23 Mon 14:29]
      CLOCK: [2013-12-22 Sun 18:54]--[2013-12-22 Sun 18:57] =>  0:03
      CLOCK: [2013-12-22 Sun 17:35]--[2013-12-22 Sun 18:10] =>  0:35

**** COMPLETED Detect PFH and disable system headers                   :task:
     CLOSED: [2013-12-23 Mon 15:11]
     CLOCK: [2013-12-23 Mon 14:46]--[2013-12-23 Mon 15:11] =>  0:25

If PFH is not found we should use system directories for boost.

**** COMPLETED Create features for ODB and EOS                         :task:
     CLOSED: [2013-12-24 Tue 09:13]
     CLOCK: [2013-12-24 Tue 09:00]--[2013-12-24 Tue 09:14] =>  0:14
     CLOCK: [2013-12-23 Mon 19:17]--[2013-12-23 Mon 19:42] =>  0:25

- detect ODB's presence and enable it/disable it accordingly
- detect EOS presence and enable it/disable it accordingly
- create a find EOS cmake script

**** COMPLETED Split EOS from main serialisation test                  :task:
     CLOSED: [2013-12-26 Thu 22:41]

We need a model just for EOS. We also need a command line switch to
enable it (switched off by default).

***** COMPLETED Create a new config option for EOS and default it to false
      CLOSED: [2013-12-23 Mon 18:15]
      CLOCK: [2013-12-23 Mon 16:16]--[2013-12-23 Mon 18:07] =>  1:51
      CLOCK: [2013-12-23 Mon 15:19]--[2013-12-23 Mon 15:22] =>  0:03
      CLOCK: [2013-12-23 Mon 15:14]--[2013-12-23 Mon 15:19] =>  0:05

***** COMPLETED Regenerate all models without EOS
      CLOSED: [2013-12-23 Mon 19:12]
      CLOCK: [2013-12-23 Mon 18:25]--[2013-12-23 Mon 18:54] =>  0:29

***** COMPLETED Create a model to test EOS
      CLOSED: [2013-12-26 Thu 22:41]
      CLOCK: [2013-12-26 Thu 22:29]--[2013-12-26 Thu 22:41] =>  0:12
      CLOCK: [2013-12-26 Thu 22:04]--[2013-12-26 Thu 22:05] =>  0:01
      CLOCK: [2013-12-26 Thu 21:26]--[2013-12-26 Thu 21:49] =>  0:23
      CLOCK: [2013-12-25 Wed 12:01]--[2013-12-25 Wed 12:30] =>  0:29

- actually we should enable it across the board and see if we are
  still failing on non-linux platforms.

*** COMPLETED CDash is not reporting builds                           :spike:
    CLOSED: [2013-12-27 Fri 23:43]
    CLOCK: [2013-12-27 Fri 22:57]--[2013-12-27 Fri 23:42] =>  0:45

For some reason we didn't get any builds at all on CDash. It appears
this is related to disk space issues. Investigate and resolve this
issue so that we can get nightlies on tonight's run.

- perform a [[http://public.kitware.com/Bug/view.php?id%3D13428][CDash cleanup]]
- delete unnecessary files

*** COMPLETED Reduce the number of valgrind errors back to normal     :spike:
    CLOSED: [2013-12-28 Sat 09:32]
    CLOCK: [2013-12-28 Sat 09:34]--[2013-12-28 Sat 09:45] =>  0:11
    CLOCK: [2013-12-23 Mon 18:50]--[2013-12-23 Mon 19:09] =>  0:19

With the move to boost log v2 the valgrind numbers increased
astronomically. This appears to be linked to the boost log v2 change,
as there were a number of ignores we had setup for log v1.

With the move to boost log v2 the valgrind numbers increased
astronomically. This appears to be linked to the boost log v2 change,
as there were a number of ignores we had setup for log v1.

*** COMPLETED Update read me file                                     :story:
    CLOSED: [2013-12-28 Sat 13:11]
    CLOCK: [2013-12-28 Sat 12:24]--[2013-12-28 Sat 13:11] =>  0:47

The read me is lying on a couple of things, we need to make sure it
reflects the current state of the world.

**** COMPLETED Fix the read me story around binary packages            :task:
     CLOSED: [2013-12-28 Sat 13:11]

We need to tell the truth more clearly around binary packages -
reading the read me its entirely unclear if they are available or not,
or where to get them from.

**** COMPLETED Update read me with compilation instructions            :task:
     CLOSED: [2013-12-28 Sat 13:11]

Packages to install:

: apt-get install libboost1.54-all-dev
: apt-get install cmake

*** IMPLEMENTATION Fix broken builds due to a variety of errors       :spike:
    CLOCK: [2013-12-28 Sat 11:00]--[2013-12-28 Sat 11:27] =>  0:27
    CLOCK: [2013-12-28 Sat 09:12]--[2013-12-28 Sat 09:30] =>  0:18

**** OSX                                                               :task:

- seems like a EOS linking error. According to comments, we should use
  =NO_EXPLICIT_TEMPLATE_INSTANTIATION=.

**** Linux                                                             :task:

- spec file is not named according to the specs or model. Renamed it.

**** Windows

- we do not seem to be detecting the location of boost
  correctly. Added boost includes to system path.

- problems with wide char:

: e:/usr/local/pfh/include/boost-1_55/boost/log/detail/snprintf.hpp:45:9: error: '::swprintf' has not been declared

  followed [[https://groups.google.com/forum/#!topic/boost-list/ngTvtjdO2ng][this article]], and disabled wide char.

*** IMPLEMENTATION Add om's workflow to engine                        :story:

We need to find a way to add the available formatters in om into the
engine workflow, replacing the legacy c++ formatters. With this we can
replace one formatter at a time.

**** COMPLETED Create an om back-end in engine                         :task:
     CLOSED: [2013-12-20 Fri 23:50]
     CLOCK: [2013-12-20 Fri 23:30]--[2013-12-20 Fri 23:50] =>  0:20
     CLOCK: [2013-12-20 Fri 23:26]--[2013-12-20 Fri 23:30] =>  0:04

**** IMPLEMENTATION Integrate om back-end with workflow                :task:
     CLOCK: [2013-12-20 Fri 23:50]--[2013-12-21 Sat 00:22] =>  0:32

*** Check packaging code for PFH dependencies                          :task:

We are manually copying a lot of shared objects from PFH when creating
packages, this should be replaced with appropriate dependencies (at
least for Debian packages).

*** Fix broken clang 3.2 32-bit build                                 :spike:

We are having some really puzzling link errors:

: ../source/projects/sml/src/types/object.cpp:(.text+0x7d): undefined reference to `std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const'

This is probably related to the fact that in ubuntu clang uses the
standard library from g++ 4.8. We are probably mixing and matching 4.7
and 4.8 (as boost in PFH is 4.7).

*** Compile code with clang 3.3                                       :story:

As part of the attempt to get the code to build without the PFH, we
need to ensure that we compile with the latest stable clang.

*** Fix cp error on cmake without PFH                                 :spike:

: cp: cannot stat ‘/usr/lib/i386-linux-gnu/libpthread.so.1.54.0’: No such file or directory

*** Start using PGPASSWORD for database model                         :spike:

As explained in read me:

- setup the environment variable =PGPASSWORD= to match the password
  you have chosen for this user (see [[http://www.postgresql.org/docs/9.1/static/libpq-envars.html][Environment Variables]]).

We need to change the code to match this.

** Deprecated Development Stories
*** CANCELLED Move extractor from C++ model into SML                  :story:
    CLOSED: [2013-12-16 Mon 23:37]

New understanding: this will largely be achieved through the
implementation of the association indexer. We will still have an
extractor in SML to C++ but it will be a simple aggregator of
relationships and will only live until we move over to =om=.

Old Understanding: Extractor and relationships should be moved into
SML. The C++ specific bits are the parts where we directly name types
such as =has_std_string=, etc. These should be generalised, such that
the user could pass in a list of types to the extractor and then we'd
return them with a bool for whether we seen them or not.

We should also remove the references to =forward_decls= directly and
instead have something like "pointer only" dependencies or some such
SML level concept and then interpret this dependency as a forward
declaration at the C++ level.
