#+title: Release Notes for Sprint 40
#+options: date:nil toc:nil author:nil num:nil
#+todo: ANALYSIS IMPLEMENTATION TESTING | COMPLETED CANCELLED
#+tags: story(s) epic(e) task(t) note(n) spike(p)

* Release Notes

This file contains all stories that were closed during sprint 40.

** Development Stories Implemented

#+begin: clocktable :maxlevel 3 :scope subtree
Clock summary at [2013-12-09 Mon 19:06]

| Headline                                                 | Time    |       |      |
|----------------------------------------------------------+---------+-------+------|
| *Total time*                                             | *10:18* |       |      |
|----------------------------------------------------------+---------+-------+------|
| Development Stories Implemented                          |         | 10:18 |      |
| IMPLEMENTATION Release notes and backlog grooming        |         |       | 0:12 |
| IMPLEMENTATION Update manual                             |         |       | 0:19 |
| COMPLETED Add more tests to =concept_indexer=            |         |       | 3:22 |
| COMPLETED Plug =concept_indexer= into workflow           |         |       | 2:14 |
| IMPLEMENTATION Create a =property_indexer= and add tests |         |       | 4:11 |
#+end:

*** IMPLEMENTATION Release notes and backlog grooming                  :task:
    CLOCK: [2013-12-07 Sat 18:40]--[2013-12-07 Sat 18:47] =>  0:07
    CLOCK: [2013-12-03 Tue 08:01]--[2013-12-03 Tue 08:06] =>  0:05

*** IMPLEMENTATION Update manual                                      :story:
    CLOCK: [2013-12-06 Fri 08:25]--[2013-12-06 Fri 08:39] =>  0:14
    CLOCK: [2013-12-06 Fri 08:20]--[2013-12-06 Fri 08:25] =>  0:05

Use compilation downtime to update the manual.

*** COMPLETED Add more tests to =concept_indexer=                     :story:
    CLOSED: [2013-12-05 Thu 08:44]
**** COMPLETED Finish adding unit tests for modeled concepts           :task:
     CLOSED: [2013-12-05 Thu 08:06]
     CLOCK: [2013-12-05 Thu 17:44]--[2013-12-05 Thu 18:10] =>  0:26
     CLOCK: [2013-12-05 Thu 07:56]--[2013-12-05 Thu 08:06] =>  0:10
     CLOCK: [2013-12-04 Wed 18:07]--[2013-12-04 Wed 18:49] =>  0:42
     CLOCK: [2013-12-04 Wed 07:48]--[2013-12-04 Wed 08:12] =>  0:24
     CLOCK: [2013-12-03 Tue 21:09]--[2013-12-03 Tue 21:29] =>  0:20
     CLOCK: [2013-12-03 Tue 08:06]--[2013-12-03 Tue 08:48] =>  0:42

**** COMPLETED Add negative unit tests                                 :task:
     CLOSED: [2013-12-05 Thu 08:44]
     CLOCK: [2013-12-05 Thu 08:06]--[2013-12-05 Thu 08:44] =>  0:38

- concept that refines non-existing concept
- object that models non-existing concept
- object with non-existing parent

*** COMPLETED Concept resolution is not particularly clean            :story:
    CLOSED: [2013-12-05 Thu 23:42]

At present resolver is tasked with converting the hierarchy of
concepts into a container with a set of =qnames= that represent the
concepts the type models. It takes into account both the inheritance
from a concept perspective (e.g. refinement) and the type-related
inheritance (e.g. if our parent already models a concept we do not
have to model it too). However, the code is very hacky and needs to be
cleaned up.

*** COMPLETED Plug =concept_indexer= into workflow                    :story:
    CLOSED: [2013-12-07 Sat 18:42]
**** COMPLETED Minor refactor to workflow                              :task:
     CLOSED: [2013-12-05 Thu 23:26]
     CLOCK: [2013-12-05 Thu 23:20]--[2013-12-05 Thu 23:25] =>  0:05
     CLOCK: [2013-12-05 Thu 23:01]--[2013-12-05 Thu 23:20] =>  0:19
     CLOCK: [2013-12-05 Thu 18:12]--[2013-12-05 Thu 18:35] =>  0:23

- tidy-up method names
- avoid mixed activities

**** COMPLETED Add concept indexing activity                           :task:
     CLOSED: [2013-12-06 Fri 07:49]
     CLOCK: [2013-12-05 Thu 23:25]--[2013-12-05 Thu 23:59] =>  0:34

**** COMPLETED Remove =modeled_concepts= from abstract object          :task:
     CLOSED: [2013-12-06 Fri 12:39]
     CLOCK: [2013-12-06 Fri 08:39]--[2013-12-06 Fri 08:41] =>  0:02
     CLOCK: [2013-12-06 Fri 07:55]--[2013-12-06 Fri 08:20] =>  0:25
     CLOCK: [2013-12-06 Fri 07:43]--[2013-12-06 Fri 07:51] =>  0:08

- deal with the fallout

**** COMPLETED Remove resolver concept indexing                        :task:
     CLOSED: [2013-12-07 Sat 18:42]
     CLOCK: [2013-12-06 Fri 19:50]--[2013-12-06 Fri 20:08] =>  0:18

- activate new activity

*** COMPLETED Populate new concept properties in dia to sml transformer :story:
    CLOSED: [2013-12-07 Sat 18:42]

- populate =is_parent= and =is_child=

*** IMPLEMENTATION Create a =property_indexer= and add tests          :story:
**** COMPLETED Implement indexing of properties
     CLOSED: [2013-12-07 Sat 20:09]
     CLOCK: [2013-12-07 Sat 19:03]--[2013-12-07 Sat 20:09] =>  1:06
     CLOCK: [2013-12-07 Sat 18:48]--[2013-12-07 Sat 19:02] =>  0:14

**** COMPLETED Create a flags class in mock factory                   :spike:
     CLOSED: [2013-12-09 Mon 08:44]
     CLOCK: [2013-12-09 Mon 17:43]--[2013-12-09 Mon 17:48] =>  0:05
     CLOCK: [2013-12-09 Mon 07:59]--[2013-12-09 Mon 08:49] =>  0:50

- fixes borked clang build and makes the use of flags in factory a bit
  more sensible.

**** IMPLEMENTATION Add support for concept indexing in mock factory  :spike:
     CLOCK: [2013-12-09 Mon 18:00]--[2013-12-09 Mon 18:42] =>  0:42

**** IMPLEMENTATION Add unit tests                                     :task:
     CLOCK: [2013-12-07 Sat 20:09]--[2013-12-07 Sat 21:23] =>  1:14

- blocker: we require the model to have been indexed at the concept level in
  order to test the property indexer, so we need to update the mock
  factory.

**** Plug into workflow                                                :task:
**** Replace C++ property handling code with relationships             :task:
*** Create a =relationship_indexer= and add tests                     :story:
**** Implement indexing of associations, keys and visitor              :task:
**** Add unit tests                                                    :task:

**** Plug into workflow                                                :task:
**** Replace original parent/parent functionality with relationships   :task:

- delete leaves, original parent, parent attributes and use
  relationships instead.

**** Replace association, keys and visitor with relationships          :task:
*** Add include file support to main type formatter                   :story:

Inclusion support needs to be moved to the formatters. SML provides
all the required information at the model level in terms of type
dependencies, but only the formatter itself knows what includes it
needs because these are related to the implementation. Even
determining which facets of a type one should include is formatter
dependent. We need to distribute the logic of the includer into each
formatter.

** Deprecated Development Stories
