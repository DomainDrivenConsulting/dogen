diff --git a/diagrams/om.dia b/diagrams/om.dia
index c1d0298..c66f5a9 100644
--- a/diagrams/om.dia
+++ b/diagrams/om.dia
@@ -263,7 +263,7 @@ separator is @e ;.#</dia:string>
         <dia:point val="18,-7"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="16.669999999999998"/>
+        <dia:real val="16.670000000000002"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3.6000000000000001"/>
@@ -422,7 +422,7 @@ A Copyright holder is a pair of name and email address.#</dia:string>
         <dia:point val="147,-38"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="7.1139843749999994"/>
+        <dia:real val="7.1139843750000002"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="2.1999999999999997"/>
@@ -683,7 +683,7 @@ A Copyright holder is a pair of name and email address.#</dia:string>
         <dia:point val="146,-25"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="13.518515625000001"/>
+        <dia:real val="13.518515624999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="2.1999999999999997"/>
@@ -3306,22 +3306,22 @@ For example, one may choose to have a set of modelines for @e emacs , or for
     </dia:object>
     <dia:object type="UML - Note" version="0" id="O29">
       <dia:attribute name="obj_pos">
-        <dia:point val="-5.5,-72.25"/>
+        <dia:point val="-25,-72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-5.55,-72.3;8.54,-70.5"/>
+        <dia:rectangle val="-25.05,-72.05;-10.96,-70.25"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-5.5,-72.25"/>
+        <dia:point val="-25,-72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="13.99"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="1.7000000000000002"/>
+        <dia:real val="1.7"/>
       </dia:attribute>
       <dia:attribute name="line_width">
         <dia:real val="0.10000000000000001"/>
@@ -3344,7 +3344,7 @@ For example, one may choose to have a set of modelines for @e emacs , or for
             <dia:real val="0.80000000000000004"/>
           </dia:attribute>
           <dia:attribute name="pos">
-            <dia:point val="-5.15,-71.005"/>
+            <dia:point val="-24.65,-70.755"/>
           </dia:attribute>
           <dia:attribute name="color">
             <dia:color val="#000000"/>
@@ -3357,17 +3357,17 @@ For example, one may choose to have a set of modelines for @e emacs , or for
     </dia:object>
     <dia:object type="UML - Message" version="0" id="O30">
       <dia:attribute name="obj_pos">
-        <dia:point val="1.495,-70.55"/>
+        <dia:point val="-18.005,-70.3"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="1.42596,-70.619;5.39913,-64.7427"/>
+        <dia:rectangle val="-18.075,-70.37;-10.7188,-64.6508"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="conn_endpoints">
-        <dia:point val="1.495,-70.55"/>
-        <dia:point val="5.035,-65"/>
+        <dia:point val="-18.005,-70.3"/>
+        <dia:point val="-11,-65"/>
       </dia:attribute>
       <dia:attribute name="text_colour">
         <dia:color val="#000000"/>
@@ -3382,11 +3382,11 @@ For example, one may choose to have a set of modelines for @e emacs , or for
         <dia:enum val="0"/>
       </dia:attribute>
       <dia:attribute name="text_pos">
-        <dia:point val="3.2651,-67.2751"/>
+        <dia:point val="-14.5024,-67.1501"/>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O29" connection="6"/>
-        <dia:connection handle="1" to="O25" connection="1"/>
+        <dia:connection handle="1" to="O25" connection="0"/>
       </dia:connections>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O31">
@@ -6991,7 +6991,7 @@ These are expected to use quotes and be on the user path.#</dia:string>
         <dia:point val="44,30"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="24.755000000000003"/>
+        <dia:real val="24.754999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="4.4000000000000004"/>
@@ -7413,7 +7413,7 @@ These are expected to use quotes and be on the user path.#</dia:string>
         <dia:point val="-69,70.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-90.02,69.45;-68.25,84.6"/>
+        <dia:rectangle val="-90.02,69.45;-68.25,83.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -7641,7 +7641,7 @@ These are expected to use quotes and be on the user path.#</dia:string>
         <dia:point val="27.61,33.1"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="26.86,32.35;44.05,34.7"/>
+        <dia:rectangle val="26.86,32.35;44.05,33.95"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -7712,7 +7712,7 @@ These are expected to use quotes and be on the user path.#</dia:string>
         <dia:point val="4.485,51.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-8.61,50.65;5.235,66.6"/>
+        <dia:rectangle val="-8.61,50.65;5.235,65.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -7756,7 +7756,7 @@ These are expected to use quotes and be on the user path.#</dia:string>
         <dia:point val="-9,41"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="27.080000000000002"/>
+        <dia:real val="27.079999999999998"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3.3000000000000003"/>
@@ -7829,5 +7829,265 @@ support.#</dia:string>
         <dia:connection handle="1" to="O61" connection="1"/>
       </dia:connections>
     </dia:object>
+    <dia:object type="UML - Class" version="0" id="O66">
+      <dia:attribute name="obj_pos">
+        <dia:point val="14,-83"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="13.95,-83.05;24.175,-78.55"/>
+      </dia:attribute>
+      <dia:attribute name="elem_corner">
+        <dia:point val="14,-83"/>
+      </dia:attribute>
+      <dia:attribute name="elem_width">
+        <dia:real val="10.125"/>
+      </dia:attribute>
+      <dia:attribute name="elem_height">
+        <dia:real val="4.4000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="name">
+        <dia:string>#Hydrator#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="stereotype">
+        <dia:string>#concept#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="comment">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="abstract">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_attributes">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_operations">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="visible_attributes">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_comments">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_after_char">
+        <dia:int val="40"/>
+      </dia:attribute>
+      <dia:attribute name="comment_line_length">
+        <dia:int val="17"/>
+      </dia:attribute>
+      <dia:attribute name="comment_tagging">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="line_width">
+        <dia:real val="0.10000000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="line_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="fill_color">
+        <dia:color val="#ffffff"/>
+      </dia:attribute>
+      <dia:attribute name="text_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes"/>
+      <dia:attribute name="operations">
+        <dia:composite type="umloperation">
+          <dia:attribute name="name">
+            <dia:string>#Hydrator#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="stereotype">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="inheritance_type">
+            <dia:enum val="2"/>
+          </dia:attribute>
+          <dia:attribute name="query">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="parameters"/>
+        </dia:composite>
+        <dia:composite type="umloperation">
+          <dia:attribute name="name">
+            <dia:string>#hydrate#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="stereotype">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="inheritance_type">
+            <dia:enum val="2"/>
+          </dia:attribute>
+          <dia:attribute name="query">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="parameters">
+            <dia:composite type="umlparameter">
+              <dia:attribute name="name">
+                <dia:string>#s#</dia:string>
+              </dia:attribute>
+              <dia:attribute name="type">
+                <dia:string>#std::ostream&amp;#</dia:string>
+              </dia:attribute>
+              <dia:attribute name="value">
+                <dia:string>##</dia:string>
+              </dia:attribute>
+              <dia:attribute name="comment">
+                <dia:string>##</dia:string>
+              </dia:attribute>
+              <dia:attribute name="kind">
+                <dia:enum val="0"/>
+              </dia:attribute>
+            </dia:composite>
+          </dia:attribute>
+        </dia:composite>
+      </dia:attribute>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O67">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="5.035,-65"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="4.285,-78.65;19.2625,-63.4"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="5.035,-65"/>
+        <dia:point val="5.035,-72.15"/>
+        <dia:point val="19.0625,-72.15"/>
+        <dia:point val="19.0625,-78.6"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O25" connection="1"/>
+        <dia:connection handle="1" to="O66" connection="6"/>
+      </dia:connections>
+    </dia:object>
   </dia:layer>
 </dia:diagram>
diff --git a/doc/agile/release_notes_sprint_35.org b/doc/agile/release_notes_sprint_35.org
index 2d12112..bd88d37 100644
--- a/doc/agile/release_notes_sprint_35.org
+++ b/doc/agile/release_notes_sprint_35.org
@@ -10,17 +10,25 @@ This file contains all stories that were closed during sprint 35.
 ** Development Stories Implemented
 
 #+begin: clocktable :maxlevel 3 :scope subtree
-Clock summary at [2013-09-23 Mon 08:00]
-
-| Headline     | Time   |
-|--------------+--------|
-| *Total time* | *0:00* |
+Clock summary at [2013-09-23 Mon 23:10]
+
+| Headline                                                | Time   |      |      |
+|---------------------------------------------------------+--------+------+------|
+| *Total time*                                            | *1:09* |      |      |
+|---------------------------------------------------------+--------+------+------|
+| Development Stories Implemented                         |        | 1:09 |      |
+| IMPLEMENTATION Release notes and backlog grooming       |        |      | 0:12 |
+| IMPLEMENTATION Create a complete domain formatter in OM |        |      | 0:57 |
 #+end:
 
 *** IMPLEMENTATION Release notes and backlog grooming                  :task:
     CLOCK: [2013-09-23 Mon 07:50]--[2013-09-23 Mon 08:02] =>  0:12
 
-*** Create a complete domain formatter in OM                          :story:
+*** IMPLEMENTATION Create a complete domain formatter in OM           :story:
+    CLOCK: [2013-09-23 Mon 18:20]--[2013-09-23 Mon 18:50] =>  0:30
+    CLOCK: [2013-09-23 Mon 18:12]--[2013-09-23 Mon 18:17] =>  0:05
+    CLOCK: [2013-09-23 Mon 17:56]--[2013-09-23 Mon 18:05] =>  0:09
+    CLOCK: [2013-09-23 Mon 08:02]--[2013-09-23 Mon 08:15] =>  0:13
 
 The OM domain formatter must produce the same code as the C++
 formatter across all types. Add all infrastructure around it such as
diff --git a/projects/om/include/dogen/om/types/hydration_workflow.hpp b/projects/om/include/dogen/om/types/hydration_workflow.hpp
index 0ee0a02..0f948d0 100644
--- a/projects/om/include/dogen/om/types/hydration_workflow.hpp
+++ b/projects/om/include/dogen/om/types/hydration_workflow.hpp
@@ -47,7 +47,7 @@ hydration_workflow(const std::list<boost::filesystem::path>& dirs) {
     Hydrator h;
     for (const auto& f : files) {
         boost::filesystem::ifstream s(f);
-        r.insert(std::make_pair(f.filename().string(), h.hydrate(s)));
+        r.insert(std::make_pair(f.filename().generic_string(), h.hydrate(s)));
     }
 
     return r;
diff --git a/projects/om/spec/comment_formatter_spec.cpp b/projects/om/spec/comment_formatter_spec.cpp
index 247a75c..7d51a19 100644
--- a/projects/om/spec/comment_formatter_spec.cpp
+++ b/projects/om/spec/comment_formatter_spec.cpp
@@ -22,9 +22,7 @@
 #include <boost/test/unit_test.hpp>
 #include "dogen/utility/test/logging.hpp"
 #include "dogen/utility/test/canned_tests.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/comment_formatter.hpp"
 #include "dogen/utility/test/exception_checkers.hpp"
 
 namespace {
diff --git a/projects/om/spec/cpp_domain_header_formatter_spec.cpp b/projects/om/spec/cpp_domain_header_formatter_spec.cpp
index 2e0d906..ea399ad 100644
--- a/projects/om/spec/cpp_domain_header_formatter_spec.cpp
+++ b/projects/om/spec/cpp_domain_header_formatter_spec.cpp
@@ -27,8 +27,8 @@
 #include "dogen/sml/test/mock_model_factory.hpp"
 #include "dogen/sml/types/indexer_interface.hpp"
 #include "dogen/sml/io/model_io.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
+#include "dogen/sml/io/qname_io.hpp"
+#include "dogen/om/types/cpp_domain_header_formatter.hpp"
 #include "dogen/om/test_data/all_td.hpp"
 
 using dogen::sml::test::mock_model_factory;
@@ -64,6 +64,17 @@ class some_type_0 final {
 }
 )");
 
+const std::string value_object_inheritance(R"(namespace some_model_0 {
+
+/**
+ * @brief Some documentation
+ */
+class some_type_0 : public some_type_1 {
+};
+
+}
+)");
+
 class mock_indexer : public dogen::sml::indexer_interface {
 public:
     mock_indexer() = default;
@@ -98,6 +109,10 @@ public:
     }
 };
 
+bool is_type_zero(const dogen::sml::qname& qn) {
+    return mock_model_factory::simple_name(0) == qn.simple_name();
+}
+
 }
 
 using namespace dogen::om;
@@ -151,4 +166,33 @@ BOOST_AUTO_TEST_CASE(value_object_with_no_properties_produces_expected_domain_he
     BOOST_LOG_SEV(lg, debug) << "Disable modeline bottom";
 }
 
+BOOST_AUTO_TEST_CASE(value_object_with_parent_produces_expected_domain_header) {
+    SETUP_TEST_LOG_SOURCE("value_object_with_parent_produces_expected_domain_header");
+    BOOST_LOG_SEV(lg, debug) << "Disable modeline top";
+
+    const auto m(mock_model_factory::object_with_parent_in_the_same_model());
+    BOOST_LOG_SEV(lg, debug) << "input model: " << m;
+    BOOST_CHECK(m.objects().size() == 2);
+
+    boost::shared_ptr<dogen::sml::abstract_object> o;
+    for (const auto& pair : m.objects()) {
+        if (is_type_zero(pair.first)) {
+            o = pair.second;
+            BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
+        }
+    }
+
+    std::ostringstream s;
+    dogen::om::cpp_domain_header_formatter f;
+    mock_indexer mi;
+    f.format(s, *o, dogen::om::licence(), dogen::om::modeline(),
+        std::string()/*marker*/, mi);
+    const auto r(s.str());
+    BOOST_CHECK(r == value_object_inheritance);
+    BOOST_LOG_SEV(lg, debug) << "expected: " << value_object_inheritance;
+    BOOST_LOG_SEV(lg, debug) << "actual: " << r;
+    BOOST_LOG_SEV(lg, debug) << "Disable modeline bottom";
+}
+
+
 BOOST_AUTO_TEST_SUITE_END()
diff --git a/projects/om/spec/cpp_file_boilerplate_formatter_spec.cpp b/projects/om/spec/cpp_file_boilerplate_formatter_spec.cpp
index e3ff3d8..ee0c2fc 100644
--- a/projects/om/spec/cpp_file_boilerplate_formatter_spec.cpp
+++ b/projects/om/spec/cpp_file_boilerplate_formatter_spec.cpp
@@ -24,9 +24,7 @@
 #include "dogen/utility/filesystem/path.hpp"
 #include "dogen/utility/io/unordered_map_io.hpp"
 #include "dogen/utility/test_data/dia_sml.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/cpp_file_boilerplate_formatter.hpp"
 
 namespace {
 
diff --git a/projects/om/spec/cpp_header_guard_formatter_spec.cpp b/projects/om/spec/cpp_header_guard_formatter_spec.cpp
index f20c719..74a330c 100644
--- a/projects/om/spec/cpp_header_guard_formatter_spec.cpp
+++ b/projects/om/spec/cpp_header_guard_formatter_spec.cpp
@@ -24,9 +24,7 @@
 #include "dogen/utility/filesystem/path.hpp"
 #include "dogen/utility/io/unordered_map_io.hpp"
 #include "dogen/utility/test_data/dia_sml.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/cpp_header_guard_formatter.hpp"
 
 namespace {
 
diff --git a/projects/om/spec/cpp_include_formatter_spec.cpp b/projects/om/spec/cpp_include_formatter_spec.cpp
index 363123e..41df11e 100644
--- a/projects/om/spec/cpp_include_formatter_spec.cpp
+++ b/projects/om/spec/cpp_include_formatter_spec.cpp
@@ -24,9 +24,7 @@
 #include "dogen/utility/filesystem/path.hpp"
 #include "dogen/utility/io/unordered_map_io.hpp"
 #include "dogen/utility/test_data/dia_sml.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/cpp_include_formatter.hpp"
 
 namespace {
 
diff --git a/projects/om/spec/equality_spec.cpp b/projects/om/spec/equality_spec.cpp
index b86f41c..ae99bc2 100644
--- a/projects/om/spec/equality_spec.cpp
+++ b/projects/om/spec/equality_spec.cpp
@@ -21,9 +21,30 @@
 #include <boost/test/unit_test.hpp>
 #include "dogen/utility/test/logging.hpp"
 #include "dogen/utility/test/canned_tests.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/licence.hpp"
+#include "dogen/om/io/licence_io.hpp"
+#include "dogen/om/test_data/licence_td.hpp"
+#include "dogen/om/types/modeline.hpp"
+#include "dogen/om/io/modeline_io.hpp"
+#include "dogen/om/test_data/modeline_td.hpp"
+#include "dogen/om/types/modeline_group.hpp"
+#include "dogen/om/io/modeline_group_io.hpp"
+#include "dogen/om/test_data/modeline_group_td.hpp"
+#include "dogen/om/types/cpp_includes.hpp"
+#include "dogen/om/io/cpp_includes_io.hpp"
+#include "dogen/om/test_data/cpp_includes_td.hpp"
+#include "dogen/om/types/editors.hpp"
+#include "dogen/om/io/editors_io.hpp"
+#include "dogen/om/test_data/editors_td.hpp"
+#include "dogen/om/types/modeline_locations.hpp"
+#include "dogen/om/io/modeline_locations_io.hpp"
+#include "dogen/om/test_data/modeline_locations_td.hpp"
+#include "dogen/om/types/modeline_field.hpp"
+#include "dogen/om/io/modeline_field_io.hpp"
+#include "dogen/om/test_data/modeline_field_td.hpp"
+#include "dogen/om/types/comment_styles.hpp"
+#include "dogen/om/io/comment_styles_io.hpp"
+#include "dogen/om/test_data/comment_styles_td.hpp"
 
 namespace {
 
@@ -41,10 +62,14 @@ BOOST_AUTO_TEST_SUITE(equality)
 BOOST_AUTO_TEST_CASE(validate_equality) {
     SETUP_TEST_LOG("validate_equality");
 
-    // test_equality<cpp_file_generator>();
-    // test_equality<cpp_project_generator>();
-    test_equality<modeline_generator>();
     test_equality<licence_generator>();
+    test_equality<modeline_generator>();
+    test_equality<modeline_group_generator>();
+    test_equality<cpp_includes_generator>();
+    test_equality<editors_generator>();
+    test_equality<modeline_locations_generator>();
+    test_equality<modeline_field_generator>();
+    test_equality<comment_styles_generator>();
 }
 
 BOOST_AUTO_TEST_SUITE_END()
diff --git a/projects/om/spec/hashing_spec.cpp b/projects/om/spec/hashing_spec.cpp
index 118576c..5528053 100644
--- a/projects/om/spec/hashing_spec.cpp
+++ b/projects/om/spec/hashing_spec.cpp
@@ -21,10 +21,38 @@
 #include <boost/test/unit_test.hpp>
 #include "dogen/utility/test/logging.hpp"
 #include "dogen/utility/test/canned_tests.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/hash/all_hash.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/licence.hpp"
+#include "dogen/om/types/modeline.hpp"
+#include "dogen/om/types/modeline_group.hpp"
+#include "dogen/om/types/cpp_includes.hpp"
+#include "dogen/om/types/editors.hpp"
+#include "dogen/om/types/modeline_locations.hpp"
+#include "dogen/om/types/modeline_field.hpp"
+#include "dogen/om/types/comment_styles.hpp"
+#include "dogen/om/types/licence.hpp"
+#include "dogen/om/types/modeline.hpp"
+#include "dogen/om/types/modeline_group.hpp"
+#include "dogen/om/types/cpp_includes.hpp"
+#include "dogen/om/types/editors.hpp"
+#include "dogen/om/types/modeline_locations.hpp"
+#include "dogen/om/types/modeline_field.hpp"
+#include "dogen/om/types/comment_styles.hpp"
+#include "dogen/om/types/licence.hpp"
+#include "dogen/om/types/modeline.hpp"
+#include "dogen/om/types/modeline_group.hpp"
+#include "dogen/om/types/cpp_includes.hpp"
+#include "dogen/om/types/editors.hpp"
+#include "dogen/om/types/modeline_locations.hpp"
+#include "dogen/om/types/modeline_field.hpp"
+#include "dogen/om/types/comment_styles.hpp"
+#include "dogen/om/types/licence.hpp"
+#include "dogen/om/types/modeline.hpp"
+#include "dogen/om/types/modeline_group.hpp"
+#include "dogen/om/types/cpp_includes.hpp"
+#include "dogen/om/types/editors.hpp"
+#include "dogen/om/types/modeline_locations.hpp"
+#include "dogen/om/types/modeline_field.hpp"
+#include "dogen/om/types/comment_styles.hpp"
 
 namespace {
 
@@ -42,10 +70,14 @@ BOOST_AUTO_TEST_SUITE(hashing)
 BOOST_AUTO_TEST_CASE(validate_hashing) {
     SETUP_TEST_LOG("validate_hashing");
 
-    // test_hashing<cpp_file_generator>();
-    // test_hashing<cpp_project_generator>();
-    test_hashing<modeline_generator>();
     test_hashing<licence_generator>();
+    test_hashing<modeline_generator>();
+    test_hashing<modeline_group_generator>();
+    test_hashing<cpp_includes_generator>();
+    test_hashing<editors_generator>();
+    test_hashing<modeline_locations_generator>();
+    test_hashing<modeline_field_generator>();
+    test_hashing<comment_styles_generator>();
 }
 
 BOOST_AUTO_TEST_SUITE_END()
diff --git a/projects/om/spec/hydration_workflow_spec.cpp b/projects/om/spec/hydration_workflow_spec.cpp
index a3d2cef..a95c596 100644
--- a/projects/om/spec/hydration_workflow_spec.cpp
+++ b/projects/om/spec/hydration_workflow_spec.cpp
@@ -1,4 +1,4 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
  *
  * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
  *
@@ -18,15 +18,14 @@
  * MA 02110-1301, USA.
  *
  */
+#include <istream>
+#include <sstream>
 #include <boost/test/unit_test.hpp>
 #include "dogen/utility/test/logging.hpp"
-#include "dogen/utility/io/list_io.hpp"
 #include "dogen/utility/filesystem/path.hpp"
 #include "dogen/utility/io/unordered_map_io.hpp"
 #include "dogen/utility/test_data/dia_sml.hpp"
-#include "dogen/om/types/all.hpp"
-#include "dogen/om/io/all_io.hpp"
-#include "dogen/om/test_data/all_td.hpp"
+#include "dogen/om/types/hydration_workflow.hpp"
 
 namespace {
 
@@ -36,6 +35,23 @@ const std::string test_suite("hydration_workflow_spec");
 
 const std::string modeline_groups_dir("modeline_groups");
 
+class mock_hydrator {
+public:
+    typedef std::string value_type;
+
+    mock_hydrator() : counter_(0) { }
+
+    value_type hydrate(std::istream&) const {
+        ++counter_;
+        std::ostringstream s;
+        s << "file_" << counter_;
+        return s.str();
+    }
+
+private:
+    mutable unsigned int counter_;
+};
+
 }
 
 using namespace dogen::om;
@@ -51,23 +67,14 @@ BOOST_AUTO_TEST_CASE(hydrating_modeline_groups_in_data_directory_produces_expect
         data_files_directory() / modeline_groups_dir
     };
 
-    typedef dogen::om::modeline_group_hydrator hydrator;
-    const auto r(dogen::om::hydration_workflow<hydrator>(d));
+    const auto r(dogen::om::hydration_workflow<mock_hydrator>(d));
 
-    BOOST_LOG_SEV(lg, debug) << "groups: " << r;
+    BOOST_LOG_SEV(lg, debug) << "result: " << r;
     BOOST_CHECK(!r.empty());
 
-    for (const auto& groups : r) {
-        BOOST_CHECK(!groups.first.empty());
-        BOOST_CHECK(!groups.second.modelines().empty());
-        for (const auto& modelines : groups.second.modelines()) {
-            BOOST_CHECK(!modelines.first.empty());
-            BOOST_CHECK(!modelines.second.fields().empty());
-
-            // value  may be empty so nothing can be said about it.
-            for (const auto& fields : modelines.second.fields())
-                BOOST_CHECK(!fields.name().empty());
-        }
+    for (const auto& pair : r) {
+        BOOST_CHECK(!pair.first.empty());
+        BOOST_CHECK(!pair.second.empty());
     }
 }
 
diff --git a/projects/om/src/types/cpp_domain_header_formatter.cpp b/projects/om/src/types/cpp_domain_header_formatter.cpp
index 11c479c..329b737 100644
--- a/projects/om/src/types/cpp_domain_header_formatter.cpp
+++ b/projects/om/src/types/cpp_domain_header_formatter.cpp
@@ -155,7 +155,7 @@ open_class(const sml::abstract_object& o) const {
         context_->stream() << " :";
 
         context_->stream() << " public ";
-        context_->stream() << cpp_qualified_name(*o.parent_name());
+        context_->stream() << o.parent_name()->simple_name();
     }
     context_->stream() << " {" << std::endl;
 }
diff --git a/projects/sml_to_cpp/spec/extractor_spec.cpp b/projects/sml_to_cpp/spec/extractor_spec.cpp
index 9c7084f..0c435e5 100644
--- a/projects/sml_to_cpp/spec/extractor_spec.cpp
+++ b/projects/sml_to_cpp/spec/extractor_spec.cpp
@@ -95,7 +95,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_parent_has_one_name_in_rela
     dogen::sml_to_cpp::extractor x(m);
 
     std::array<bool, 2> found({{ false, false }});
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
 
@@ -203,7 +203,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_other_object_property_has_e
 
     dogen::sml_to_cpp::extractor x(m);
     bool found(false);
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
             BOOST_REQUIRE(pair.second->properties().size() == 1);
@@ -255,7 +255,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_pair_property_has_expected_
 
     bool found(false);
     dogen::sml_to_cpp::extractor x(m);
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
             BOOST_REQUIRE(pair.second->properties().size() == 1);
@@ -289,7 +289,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_variant_property_has_expect
 
     bool found(false);
     dogen::sml_to_cpp::extractor x(m);
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found object: " << pair.first;
             BOOST_REQUIRE(pair.second->properties().size() == 1);
@@ -323,7 +323,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_std_string_property_has_exp
 
     bool found(false);
     dogen::sml_to_cpp::extractor x(m);
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found object: " << pair.first;
             BOOST_REQUIRE(pair.second->properties().size() == 1);
@@ -358,7 +358,7 @@ BOOST_AUTO_TEST_CASE(dependency_graph_of_object_with_boost_shared_ptr_property_h
 
     bool found(false);
     dogen::sml_to_cpp::extractor x(m);
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found object: " << pair.first;
             BOOST_REQUIRE(pair.second->properties().size() == 1);
@@ -417,7 +417,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_no_parents_and_one_propert
 
     dogen::sml_to_cpp::extractor x(m);
     std::array<bool, 2> found({{ false, false }});
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
 
@@ -470,7 +470,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_parent_has_two_names_in_re
     dogen::sml_to_cpp::extractor x(m);
 
     std::array<bool, 2> found({{ false, false }});
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found child object: " << pair.first;
 
@@ -498,7 +498,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_parent_has_two_names_in_re
 
             BOOST_CHECK(r.names().size() == 2);
             bool found_0(false), found_1(false);
-            for (const auto n : r.names()) {
+            for (const auto& n : r.names()) {
                 found_0 = found_0 || is_type_zero(n);
                 found_1 = found_1 || is_type_one(n);
             }
@@ -545,7 +545,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_third_degree_children_has_
     dogen::sml_to_cpp::extractor x(m);
 
     std::array<bool, 4> found({{ false, false, false, false }});
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found parent object: " << pair.first;
 
@@ -573,7 +573,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_third_degree_children_has_
 
             BOOST_REQUIRE(r.names().size() == 2);
             bool found_0(false), found_1(false);
-            for (const auto n : r.names()) {
+            for (const auto& n : r.names()) {
                 found_0 = found_0 || is_type_zero(n);
                 found_1 = found_1 || is_type_one(n);
             }
@@ -597,7 +597,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_third_degree_children_has_
 
             BOOST_REQUIRE(r.names().size() == 3);
             bool found_0(false), found_1(false), found_2(false);
-            for (const auto n : r.names()) {
+            for (const auto& n : r.names()) {
                 found_0 = found_0 || is_type_zero(n);
                 found_1 = found_1 || is_type_one(n);
                 found_2 = found_2 || is_type_two(n);
@@ -622,7 +622,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_third_degree_children_has_
 
             BOOST_REQUIRE(r.names().size() == 4);
             bool found_0(false), found_1(false), found_2(false), found_3(false);
-            for (const auto n : r.names()) {
+            for (const auto& n : r.names()) {
                 found_0 = found_0 || is_type_zero(n);
                 found_1 = found_1 || is_type_one(n);
                 found_2 = found_2 || is_type_two(n);
@@ -655,7 +655,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_three_children_has_four_na
     dogen::sml_to_cpp::extractor x(m);
 
     std::array<bool, 4> found({{ false, false, false, false }});
-    for (const auto pair : m.objects()) {
+    for (const auto& pair : m.objects()) {
         if (is_type_zero(pair.first)) {
             BOOST_LOG_SEV(lg, debug) << "found parent object: " << pair.first;
 
@@ -719,7 +719,7 @@ BOOST_AUTO_TEST_CASE(inheritance_graph_of_object_with_three_children_has_four_na
 
             BOOST_REQUIRE(r.names().size() == 4);
             bool found_0(false), found_1(false), found_2(false), found_3(false);
-            for (const auto n : r.names()) {
+            for (const auto& n : r.names()) {
                 found_0 = found_0 || is_type_zero(n);
                 found_1 = found_1 || is_type_one(n);
                 found_2 = found_2 || is_type_two(n);
