diff --git a/diagrams/sml.dia b/diagrams/sml.dia
index 78939c0..c5d4151 100644
--- a/diagrams/sml.dia
+++ b/diagrams/sml.dia
@@ -2373,16 +2373,16 @@ all types in the combined model.#</dia:string>
     </dia:object>
     <dia:object type="UML - Note" version="0" id="O15">
       <dia:attribute name="obj_pos">
-        <dia:point val="-146,-22"/>
+        <dia:point val="-143,-22"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-146.05,-22.05;-113.48,26.15"/>
+        <dia:rectangle val="-143.05,-22.05;-110.48,26.15"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-146,-22"/>
+        <dia:point val="-143,-22"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="32.469999999999999"/>
@@ -2469,7 +2469,7 @@ All of these steps are encompassed in the SML @ref workflow.
             <dia:real val="0.80000000000000004"/>
           </dia:attribute>
           <dia:attribute name="pos">
-            <dia:point val="-145.65,-20.755"/>
+            <dia:point val="-142.65,-20.755"/>
           </dia:attribute>
           <dia:attribute name="color">
             <dia:color val="#000000"/>
@@ -4086,16 +4086,16 @@ for Java, etc.#</dia:string>
         <dia:point val="-72,44"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-72.05,43.95;-56.435,48.45"/>
+        <dia:rectangle val="-72.05,43.95;-60.67,47.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
         <dia:point val="-72,44"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="15.515000000000001"/>
+        <dia:real val="11.279999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="4.4000000000000004"/>
+        <dia:real val="3.6000000000000001"/>
       </dia:attribute>
       <dia:attribute name="name">
         <dia:string>#Extensible#</dia:string>
@@ -4187,29 +4187,6 @@ for Java, etc.#</dia:string>
       <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#meta_data#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::property_tree::ptree#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Meta-data associated with the object, opaque to SML.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
             <dia:string>#extensions#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
@@ -4415,17 +4392,17 @@ for Java, etc.#</dia:string>
     </dia:object>
     <dia:object type="UML - Generalization" version="1" id="O34">
       <dia:attribute name="obj_pos">
-        <dia:point val="-64.2425,48.4"/>
+        <dia:point val="-66.36,47.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-72.6825,48.35;-63.3925,58.05"/>
+        <dia:rectangle val="-72.6825,47.55;-65.51,58.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-64.2425,48.4"/>
-        <dia:point val="-64.2425,54"/>
+        <dia:point val="-66.36,47.6"/>
+        <dia:point val="-66.36,54"/>
         <dia:point val="-72.6325,54"/>
         <dia:point val="-72.6325,58"/>
       </dia:attribute>
@@ -11624,117 +11601,199 @@ etc.#</dia:string>
         <dia:connection handle="1" to="O36" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - LargePackage" version="0" id="O98">
+    <dia:object type="UML - Class" version="0" id="O98">
       <dia:attribute name="obj_pos">
-        <dia:point val="-92,-22"/>
+        <dia:point val="-124,44"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-92.05,-23.05;-27.1636,25.05"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
+        <dia:rectangle val="-124.05,43.95;-107.28,47.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-92,-22"/>
+        <dia:point val="-124,44"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="64.786375408670921"/>
+        <dia:real val="16.669999999999998"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="47"/>
+        <dia:real val="3.6000000000000001"/>
       </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000149011612"/>
+      <dia:attribute name="name">
+        <dia:string>#Containable#</dia:string>
       </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
+      <dia:attribute name="stereotype">
+        <dia:string>#concept#</dia:string>
       </dia:attribute>
-      <dia:attribute name="fill_colour">
-        <dia:color val="#ffffff"/>
+      <dia:attribute name="comment">
+        <dia:string>#The ability to be contained inside a module.#</dia:string>
       </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
+      <dia:attribute name="abstract">
+        <dia:boolean val="false"/>
       </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
+      <dia:attribute name="suppress_attributes">
+        <dia:boolean val="false"/>
       </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#meta_data#</dia:string>
+      <dia:attribute name="suppress_operations">
+        <dia:boolean val="false"/>
       </dia:attribute>
-    </dia:object>
-    <dia:object type="UML - Note" version="0" id="O99">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-89.1303,-19.1667"/>
+      <dia:attribute name="visible_attributes">
+        <dia:boolean val="true"/>
       </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-89.1803,-19.2167;-62.7703,-15.0167"/>
+      <dia:attribute name="visible_operations">
+        <dia:boolean val="true"/>
       </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
+      <dia:attribute name="visible_comments">
+        <dia:boolean val="false"/>
       </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-89.1303,-19.1667"/>
+      <dia:attribute name="wrap_operations">
+        <dia:boolean val="true"/>
       </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="26.310000000000002"/>
+      <dia:attribute name="wrap_after_char">
+        <dia:int val="40"/>
       </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="4.0999999999999996"/>
+      <dia:attribute name="comment_line_length">
+        <dia:int val="17"/>
+      </dia:attribute>
+      <dia:attribute name="comment_tagging">
+        <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="line_width">
         <dia:real val="0.10000000000000001"/>
       </dia:attribute>
-      <dia:attribute name="line_colour">
+      <dia:attribute name="line_color">
         <dia:color val="#000000"/>
       </dia:attribute>
-      <dia:attribute name="fill_colour">
+      <dia:attribute name="fill_color">
         <dia:color val="#ffffff"/>
       </dia:attribute>
-      <dia:attribute name="text">
-        <dia:composite type="text">
-          <dia:attribute name="string">
-            <dia:string>#Meta-data encapsulates the SML aspects of the meta-data processing
-sub-system.
-
-#DOGEN dia.comment = true#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="font">
-            <dia:font family="monospace" style="0" name="Courier"/>
+      <dia:attribute name="text_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes">
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#containing_module#</dia:string>
           </dia:attribute>
-          <dia:attribute name="height">
-            <dia:real val="0.80000000000000004"/>
+          <dia:attribute name="type">
+            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
           </dia:attribute>
-          <dia:attribute name="pos">
-            <dia:point val="-88.7803,-17.9217"/>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="color">
-            <dia:color val="#000000"/>
+          <dia:attribute name="comment">
+            <dia:string>#Name of the module in which we are contained.#</dia:string>
           </dia:attribute>
-          <dia:attribute name="alignment">
+          <dia:attribute name="visibility">
             <dia:enum val="0"/>
           </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
         </dia:composite>
       </dia:attribute>
-      <dia:childnode parent="O98"/>
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Generalization" version="1" id="O99">
+      <dia:attribute name="obj_pos">
+        <dia:point val="-115.665,47.6"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-116.515,47.55;-72.5825,58.05"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="-115.665,47.6"/>
+        <dia:point val="-115.665,54"/>
+        <dia:point val="-72.6325,54"/>
+        <dia:point val="-72.6325,58"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="stereotype">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O98" connection="6"/>
+        <dia:connection handle="1" to="O36" connection="1"/>
+      </dia:connections>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O100">
       <dia:attribute name="obj_pos">
-        <dia:point val="-89.1303,-4.16667"/>
+        <dia:point val="-25,-12"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-89.1803,-4.21667;-63.9403,6.48333"/>
+        <dia:rectangle val="-25.05,-12.05;-20.215,-8.95"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-89.1303,-4.16667"/>
+        <dia:point val="-25,-12"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="25.140000000000001"/>
+        <dia:real val="4.7350000000000003"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="10.6"/>
+        <dia:real val="3"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#reader#</dia:string>
+        <dia:string>#grapher#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
         <dia:string>#service#</dia:string>
@@ -11820,1490 +11879,56 @@ sub-system.
       <dia:attribute name="comment_font_height">
         <dia:real val="0.69999999999999996"/>
       </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#meta_data_#</dia:string>
+      <dia:attribute name="attributes"/>
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Note" version="0" id="O101">
+      <dia:attribute name="obj_pos">
+        <dia:point val="-14,-13"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-14.05,-13.05;-0.73,-9.65"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="elem_corner">
+        <dia:point val="-14,-13"/>
+      </dia:attribute>
+      <dia:attribute name="elem_width">
+        <dia:real val="13.220000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="elem_height">
+        <dia:real val="3.3000000000000003"/>
+      </dia:attribute>
+      <dia:attribute name="line_width">
+        <dia:real val="0.10000000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="fill_colour">
+        <dia:color val="#ffffff"/>
+      </dia:attribute>
+      <dia:attribute name="text">
+        <dia:composite type="text">
+          <dia:attribute name="string">
+            <dia:string>#Produces a graph of dependencies
+based on module containment and
+parenting.#</dia:string>
           </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::property_tree::ptree#</dia:string>
+          <dia:attribute name="font">
+            <dia:font family="monospace" style="0" name="Courier"/>
           </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
+          <dia:attribute name="height">
+            <dia:real val="0.80000000000000004"/>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="1"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations">
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#writer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#md#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#boost::property_tree::ptree&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#add#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#value#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#add#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#kvps#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::list&lt;std::pair&lt;std::string,std::string&gt;&gt;&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#add_if_marker_found#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#marker#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#kvps#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::list&lt;std::pair&lt;std::string,std::string&gt;&gt;&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#add_if_key_not_found#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#value#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O101">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-56.1303,-4.16667"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-56.1803,-4.21667;-31.3253,5.68333"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-56.1303,-4.16667"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="24.755000000000003"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="9.8000000000000007"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#writer#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#service#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#meta_data#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::property_tree::ptree#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations">
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#meta_data_reader#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#meta_data#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const boost::property_tree::ptree&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#has_key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#is_true#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#is_false#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#get#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#is_supported#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#key#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#const std::string&amp;#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#odb_pragma#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::list&lt;std::pair&lt;std::string,std::string&gt;&gt; #</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters"/>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O102">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-67.1303,16.8333"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-67.1803,16.7833;-59.1178,19.8833"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-67.1303,16.8333"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="7.9625000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#read_write_error#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#exception#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#An error occurred whilst reading or writing meta-data.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes"/>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O103">
-      <dia:attribute name="name">
-        <dia:string>#throws on failure &gt;#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="2"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-67.1303,16.8333"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-77.3103,5.68333;-66.9303,17.6333"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-67.1303,16.8333"/>
-        <dia:point val="-67.1303,10.8333"/>
-        <dia:point val="-76.5603,10.8333"/>
-        <dia:point val="-76.5603,6.43333"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O102" connection="0"/>
-        <dia:connection handle="1" to="O100" connection="6"/>
-      </dia:connections>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O104">
-      <dia:attribute name="name">
-        <dia:string>#&lt; throws on failure#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-59.1678,16.8333"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-59.9178,5.63283;-43.5528,17.6333"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-59.1678,16.8333"/>
-        <dia:point val="-59.1678,10.8333"/>
-        <dia:point val="-43.7528,10.8333"/>
-        <dia:point val="-43.7528,5.68283"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O102" connection="2"/>
-        <dia:connection handle="1" to="O101" connection="24"/>
-      </dia:connections>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Note" version="0" id="O105">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-66.1303,-12.1667"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-66.1803,-12.2167;-47.0853,-9.6167"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-66.1303,-12.1667"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="18.995000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="2.5"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_colour">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text">
-        <dia:composite type="text">
-          <dia:attribute name="string">
-            <dia:string>#Helper classes to perform reads and writes in a
-boost::property_tree::ptree.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="font">
-            <dia:font family="monospace" style="0" name="Courier"/>
-          </dia:attribute>
-          <dia:attribute name="height">
-            <dia:real val="0.80000000000000004"/>
-          </dia:attribute>
-          <dia:attribute name="pos">
-            <dia:point val="-65.7803,-10.9217"/>
-          </dia:attribute>
-          <dia:attribute name="color">
-            <dia:color val="#000000"/>
-          </dia:attribute>
-          <dia:attribute name="alignment">
-            <dia:enum val="0"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Message" version="0" id="O106">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-56.6328,-9.66667"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-56.6984,-9.73229;-43.5497,-3.77917"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="conn_endpoints">
-        <dia:point val="-56.6328,-9.66667"/>
-        <dia:point val="-43.7528,-4.16667"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="text">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="type">
-        <dia:enum val="0"/>
-      </dia:attribute>
-      <dia:attribute name="text_pos">
-        <dia:point val="-50.1935,-6.41667"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O105" connection="6"/>
-        <dia:connection handle="1" to="O101" connection="1"/>
-      </dia:connections>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Message" version="0" id="O107">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-56.6328,-9.66667"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-76.7149,-9.72817;-56.5713,-3.76778"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="conn_endpoints">
-        <dia:point val="-56.6328,-9.66667"/>
-        <dia:point val="-76.5603,-4.16667"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="text">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="type">
-        <dia:enum val="0"/>
-      </dia:attribute>
-      <dia:attribute name="text_pos">
-        <dia:point val="-66.5965,-6.41667"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O105" connection="6"/>
-        <dia:connection handle="1" to="O100" connection="1"/>
-      </dia:connections>
-      <dia:childnode parent="O98"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O108">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-124,44"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-124.05,43.95;-107.28,47.65"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-124,44"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="16.669999999999998"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3.6000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#Containable#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#concept#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#The ability to be contained inside a module.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#containing_module#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Name of the module in which we are contained.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O109">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-115.665,47.6"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-116.515,47.55;-72.5825,58.05"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-115.665,47.6"/>
-        <dia:point val="-115.665,54"/>
-        <dia:point val="-72.6325,54"/>
-        <dia:point val="-72.6325,58"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O108" connection="6"/>
-        <dia:connection handle="1" to="O36" connection="1"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O110">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-25,-12"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-25.05,-12.05;-20.215,-8.95"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-25,-12"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="4.7350000000000003"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#grapher#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#service#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes"/>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Note" version="0" id="O111">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-14,-13"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-14.05,-13.05;-0.73,-9.65"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-14,-13"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="13.220000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3.3000000000000003"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_colour">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text">
-        <dia:composite type="text">
-          <dia:attribute name="string">
-            <dia:string>#Produces a graph of dependencies
-based on module containment and
-parenting.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="font">
-            <dia:font family="monospace" style="0" name="Courier"/>
-          </dia:attribute>
-          <dia:attribute name="height">
-            <dia:real val="0.80000000000000004"/>
-          </dia:attribute>
-          <dia:attribute name="pos">
-            <dia:point val="-13.65,-11.755"/>
+          <dia:attribute name="pos">
+            <dia:point val="-13.65,-11.755"/>
           </dia:attribute>
           <dia:attribute name="color">
             <dia:color val="#000000"/>
@@ -13314,7 +11939,7 @@ parenting.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O112">
+    <dia:object type="UML - Message" version="0" id="O102">
       <dia:attribute name="obj_pos">
         <dia:point val="-14,-11.35"/>
       </dia:attribute>
@@ -13344,11 +11969,11 @@ parenting.#</dia:string>
         <dia:point val="-21.1053,-30.4328"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O111" connection="3"/>
-        <dia:connection handle="1" to="O110" connection="4"/>
+        <dia:connection handle="0" to="O101" connection="3"/>
+        <dia:connection handle="1" to="O100" connection="4"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O113">
+    <dia:object type="UML - Association" version="2" id="O103">
       <dia:attribute name="name">
         <dia:string>#creates a graph for &gt;#</dia:string>
       </dia:attribute>
@@ -13415,11 +12040,11 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O122" connection="1"/>
-        <dia:connection handle="1" to="O110" connection="6"/>
+        <dia:connection handle="0" to="O112" connection="1"/>
+        <dia:connection handle="1" to="O100" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O114">
+    <dia:object type="UML - Class" version="0" id="O104">
       <dia:attribute name="obj_pos">
         <dia:point val="3,-13"/>
       </dia:attribute>
@@ -13529,7 +12154,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O115">
+    <dia:object type="UML - Association" version="2" id="O105">
       <dia:attribute name="name">
         <dia:string>#&lt; throws on error#</dia:string>
       </dia:attribute>
@@ -13596,11 +12221,11 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O114" connection="1"/>
-        <dia:connection handle="1" to="O110" connection="1"/>
+        <dia:connection handle="0" to="O104" connection="1"/>
+        <dia:connection handle="1" to="O100" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O116">
+    <dia:object type="UML - Class" version="0" id="O106">
       <dia:attribute name="obj_pos">
         <dia:point val="1,52"/>
       </dia:attribute>
@@ -13776,7 +12401,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O117">
+    <dia:object type="UML - Class" version="0" id="O107">
       <dia:attribute name="obj_pos">
         <dia:point val="3,65"/>
       </dia:attribute>
@@ -13886,7 +12511,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O118">
+    <dia:object type="UML - Association" version="2" id="O108">
       <dia:attribute name="name">
         <dia:string>#persists &gt;#</dia:string>
       </dia:attribute>
@@ -13953,11 +12578,11 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O116" connection="4"/>
+        <dia:connection handle="0" to="O106" connection="4"/>
         <dia:connection handle="1" to="O54" connection="16"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O119">
+    <dia:object type="UML - Association" version="2" id="O109">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -14024,11 +12649,11 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O116" connection="6"/>
-        <dia:connection handle="1" to="O117" connection="1"/>
+        <dia:connection handle="0" to="O106" connection="6"/>
+        <dia:connection handle="1" to="O107" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O120">
+    <dia:object type="UML - Class" version="0" id="O110">
       <dia:attribute name="obj_pos">
         <dia:point val="-24,13"/>
       </dia:attribute>
@@ -14639,7 +13264,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O121">
+    <dia:object type="UML - Association" version="2" id="O111">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -14706,11 +13331,11 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O122" connection="6"/>
-        <dia:connection handle="1" to="O120" connection="1"/>
+        <dia:connection handle="0" to="O112" connection="6"/>
+        <dia:connection handle="1" to="O110" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O122">
+    <dia:object type="UML - Class" version="0" id="O112">
       <dia:attribute name="obj_pos">
         <dia:point val="-23,-1"/>
       </dia:attribute>
@@ -14886,7 +13511,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O123">
+    <dia:object type="UML - Class" version="0" id="O113">
       <dia:attribute name="obj_pos">
         <dia:point val="7,85"/>
       </dia:attribute>
@@ -15066,7 +13691,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O124">
+    <dia:object type="UML - Association" version="2" id="O114">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -15134,10 +13759,10 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O20" connection="6"/>
-        <dia:connection handle="1" to="O123" connection="1"/>
+        <dia:connection handle="1" to="O113" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O125">
+    <dia:object type="UML - Class" version="0" id="O115">
       <dia:attribute name="obj_pos">
         <dia:point val="-62,30"/>
       </dia:attribute>
@@ -15296,7 +13921,7 @@ parenting.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O126">
+    <dia:object type="UML - Association" version="2" id="O116">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -15363,7 +13988,7 @@ parenting.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O125" connection="10"/>
+        <dia:connection handle="0" to="O115" connection="10"/>
         <dia:connection handle="1" to="O55" connection="1"/>
       </dia:connections>
     </dia:object>
diff --git a/doc/agile/sprint_backlog_60.org b/doc/agile/sprint_backlog_60.org
index f5c927e..7f6afb8 100644
--- a/doc/agile/sprint_backlog_60.org
+++ b/doc/agile/sprint_backlog_60.org
@@ -200,6 +200,8 @@ sml instances. Instead we are recreating it in every transformer
 instance. Since the workflow is const, we should be able to pass
 references to it around.
 
+Same problem applies to json hydrator.
+
 *** Create a container of field definitions in field definition       :story:
 
 It would be good if we could just return all field definitions in one
@@ -215,6 +217,9 @@ We could use =std::reference_wrapper= for this.
 Find all places where we are using ptree and use the dynamic object
 instead. This should be mainly in meta-data factories.
 
+The exception is =json_hydrator= since we use property tree to parse
+the JSON.
+
 *** Inject unit test field definitions                                :story:
 
 We need to inject fields like =KEY= etc used by unit tests in the unit
diff --git a/projects/cpp/include/dogen/cpp/types/facet_settings_factory.hpp b/projects/cpp/include/dogen/cpp/types/facet_settings_factory.hpp
index a92f677..510fa30 100644
--- a/projects/cpp/include/dogen/cpp/types/facet_settings_factory.hpp
+++ b/projects/cpp/include/dogen/cpp/types/facet_settings_factory.hpp
@@ -28,6 +28,7 @@
 #include <string>
 #include <unordered_map>
 #include <boost/property_tree/ptree.hpp>
+#include "dogen/dynamic/types/object.hpp"
 #include "dogen/cpp/types/facet_settings.hpp"
 
 namespace dogen {
@@ -45,23 +46,22 @@ public:
 
 private:
     /**
-     * @brief Reads the settings from the meta-data for the supplied
-     * facet id.
+     * @brief Reads the settings from the dynamic object for the
+     * supplied facet id.
      *
      * @pre facet id is not qualified.
      */
     facet_settings read_settings(const facet_settings& default_settings,
-        const std::string& facet_id,
-        const boost::property_tree::ptree& meta_data) const;
+        const std::string& facet_id, const dynamic::object& o) const;
 
 public:
     /**
-     * @brief Builds the facet settings from the meta data.
+     * @brief Builds the facet settings from the dynamic object.
      */
     std::unordered_map<std::string, facet_settings> build(
         const std::unordered_map<std::string, facet_settings>&
         default_facet_settings_by_facet_id,
-        const boost::property_tree::ptree& meta_data) const;
+        const dynamic::object& o) const;
 };
 
 } }
diff --git a/projects/cpp/include/dogen/cpp/types/formatter_settings_factory.hpp b/projects/cpp/include/dogen/cpp/types/formatter_settings_factory.hpp
index c6340ab..6e8aaf0 100644
--- a/projects/cpp/include/dogen/cpp/types/formatter_settings_factory.hpp
+++ b/projects/cpp/include/dogen/cpp/types/formatter_settings_factory.hpp
@@ -27,7 +27,7 @@
 
 #include <string>
 #include <unordered_map>
-#include <boost/property_tree/ptree.hpp>
+#include "dogen/dynamic/types/object.hpp"
 #include "dogen/cpp/types/formatter_settings.hpp"
 
 namespace dogen {
@@ -48,8 +48,7 @@ private:
      * @pre formatter id is not qualified.
      */
     formatter_settings read_settings(const formatter_settings& default_settings,
-        const std::string& formatter_id,
-        const boost::property_tree::ptree& meta_data) const;
+        const std::string& formatter_id, const dynamic::object& o) const;
 
 public:
     /**
@@ -58,7 +57,7 @@ public:
     std::unordered_map<std::string, formatter_settings> build(
         const std::unordered_map<std::string, formatter_settings>&
         default_formatter_settings_by_formatter_id,
-        const boost::property_tree::ptree& meta_data) const;
+        const dynamic::object& o) const;
 };
 
 } }
diff --git a/projects/cpp/src/types/facet_settings_factory.cpp b/projects/cpp/src/types/facet_settings_factory.cpp
index cdb6c7f..f07f851 100644
--- a/projects/cpp/src/types/facet_settings_factory.cpp
+++ b/projects/cpp/src/types/facet_settings_factory.cpp
@@ -19,7 +19,7 @@
  *
  */
 #include "dogen/utility/log/logger.hpp"
-#include "dogen/sml/types/meta_data/reader.hpp"
+#include "dogen/dynamic/types/content_extensions.hpp"
 #include "dogen/cpp/types/traits.hpp"
 #include "dogen/cpp/types/facet_settings_factory.hpp"
 
@@ -45,42 +45,37 @@ namespace dogen {
 namespace cpp {
 
 facet_settings facet_settings_factory::read_settings(
-    const facet_settings& default_settings,
-    const std::string& facet_id,
-    const boost::property_tree::ptree& meta_data) const {
+    const facet_settings& default_settings, const std::string& facet_id,
+    const dynamic::object& o) const {
 
     facet_settings r(default_settings);
-    sml::meta_data::reader reader(meta_data);
+    using namespace dynamic;
+
     const auto enabled_trait(qualify(facet_id, traits::facet::enabled()));
-    if (reader.has_key(enabled_trait)) {
-        const auto value(reader.get(enabled_trait));
-        r.enabled(value == traits::bool_true());
-    }
+    if (has_field(o, enabled_trait))
+        r.enabled(get_boolean_content(o, enabled_trait));
 
     const auto directory_trait(qualify(facet_id, traits::facet::directory()));
-    if (reader.has_key(directory_trait)) {
-        const auto value(reader.get(directory_trait));
-        r.directory(value);
-    }
+    if (has_field(o, directory_trait))
+        r.directory(get_text_content(o, directory_trait));
 
     const auto postfix_trait(qualify(facet_id, traits::facet::postfix()));
-    if (reader.has_key(postfix_trait)) {
-        const auto value(reader.get(postfix_trait));
-        r.postfix(value);
-    }
+    if (has_field(o, postfix_trait))
+        r.postfix(get_text_content(o, postfix_trait));
+
     return r;
 }
 
 std::unordered_map<std::string, facet_settings> facet_settings_factory::build(
     const std::unordered_map<std::string, facet_settings>&
     default_facet_settings_by_facet_id,
-    const boost::property_tree::ptree& meta_data) const {
+    const dynamic::object& o) const {
 
     std::unordered_map<std::string, facet_settings> r;
     for (const auto& pair : default_facet_settings_by_facet_id) {
         const auto& facet_id(pair.first);
         const auto& default_settings(pair.second);
-        const auto s(read_settings(default_settings, facet_id, meta_data));
+        const auto s(read_settings(default_settings, facet_id, o));
         r.insert(std::make_pair(facet_id, s));
     }
     return r;
diff --git a/projects/cpp/src/types/formatter_settings_factory.cpp b/projects/cpp/src/types/formatter_settings_factory.cpp
index 4327a5e..befaeac 100644
--- a/projects/cpp/src/types/formatter_settings_factory.cpp
+++ b/projects/cpp/src/types/formatter_settings_factory.cpp
@@ -19,7 +19,7 @@
  *
  */
 #include "dogen/utility/log/logger.hpp"
-#include "dogen/sml/types/meta_data/reader.hpp"
+#include "dogen/dynamic/types/content_extensions.hpp"
 #include "dogen/cpp/types/traits.hpp"
 #include "dogen/cpp/types/formatter_settings_factory.hpp"
 
@@ -47,23 +47,20 @@ namespace cpp {
 formatter_settings formatter_settings_factory::read_settings(
     const formatter_settings& default_settings,
     const std::string& formatter_id,
-    const boost::property_tree::ptree& meta_data) const {
+    const dynamic::object& o) const {
+    using namespace dynamic;
 
     formatter_settings r(default_settings);
-    sml::meta_data::reader reader(meta_data);
     const auto enabled_trait(qualify(formatter_id,
             traits::formatter::enabled()));
-    if (reader.has_key(enabled_trait)) {
-        const auto value(reader.get(enabled_trait));
-        r.enabled(value == traits::bool_true());
-    }
+    if (has_field(o, enabled_trait))
+        r.enabled(get_boolean_content(o, enabled_trait));
 
     const std::string postfix_trait(
         qualify(formatter_id, traits::formatter::additional_postfix()));
-    if (reader.has_key(postfix_trait)) {
-        const auto value(reader.get(postfix_trait));
-        r.postfix(value);
-    }
+    if (has_field(o, postfix_trait))
+        r.postfix(get_text_content(o, postfix_trait));
+
     return r;
 }
 
@@ -71,13 +68,13 @@ std::unordered_map<std::string, formatter_settings>
 formatter_settings_factory::build(
     const std::unordered_map<std::string, formatter_settings>&
     default_formatter_settings_by_formatter_id,
-    const boost::property_tree::ptree& meta_data) const {
+    const dynamic::object& o) const {
 
     std::unordered_map<std::string, formatter_settings> r;
     for (const auto& pair : default_formatter_settings_by_formatter_id) {
         const auto& formatter_id(pair.first);
         const auto& default_settings(pair.second);
-        const auto s(read_settings(default_settings, formatter_id, meta_data));
+        const auto s(read_settings(default_settings, formatter_id, o));
         r.insert(std::make_pair(formatter_id, s));
     }
     return r;
diff --git a/projects/cpp/src/types/global_settings_factory.cpp b/projects/cpp/src/types/global_settings_factory.cpp
index c890ac5..5b99947 100644
--- a/projects/cpp/src/types/global_settings_factory.cpp
+++ b/projects/cpp/src/types/global_settings_factory.cpp
@@ -34,7 +34,7 @@ global_settings_factory::create_facet_settings(
     default_facet_settings_by_facet_id, const sml::module& model_module) const {
     facet_settings_factory f;
     return f.build(default_facet_settings_by_facet_id,
-        model_module.meta_data());
+        model_module.extensions());
 }
 
 std::unordered_map<std::string, formatter_settings>
@@ -44,7 +44,7 @@ global_settings_factory::create_formatter_settings(
     const sml::module& model_module) const {
     formatter_settings_factory f;
     return f.build(default_formatter_settings_by_formatter_id,
-        model_module.meta_data());
+        model_module.extensions());
 }
 
 cpp_settings global_settings_factory::
diff --git a/projects/dia_to_sml/include/dogen/dia_to_sml/types/transformer.hpp b/projects/dia_to_sml/include/dogen/dia_to_sml/types/transformer.hpp
index 9078c0d..78b6b0a 100644
--- a/projects/dia_to_sml/include/dogen/dia_to_sml/types/transformer.hpp
+++ b/projects/dia_to_sml/include/dogen/dia_to_sml/types/transformer.hpp
@@ -28,7 +28,8 @@
 #include <string>
 #include <memory>
 #include "dogen/dia/types/object.hpp"
-#include "dogen/sml/types/meta_data/writer.hpp"
+#include "dogen/dynamic/types/workflow.hpp"
+#include "dogen/dynamic/types/scope_types.hpp"
 #include "dogen/sml/types/nested_qname.hpp"
 #include "dogen/sml/types/object.hpp"
 #include "dogen/dia_to_sml/types/processed_object.hpp"
@@ -36,7 +37,6 @@
 #include "dogen/dia_to_sml/types/identifier_parser.hpp"
 #include "dogen/dia_to_sml/types/context.hpp"
 #include "dogen/dia_to_sml/types/profile.hpp"
-#include "dogen/dynamic/types/workflow.hpp"
 
 namespace dogen {
 namespace dia_to_sml {
@@ -175,9 +175,6 @@ private:
         e.documentation(o.comment().documentation());
 
         const auto& kvps(o.comment().key_value_pairs());
-        sml::meta_data::writer writer(e.meta_data());
-        writer.add(kvps);
-
         const auto scope(dynamic::scope_types::entity);
         e.extensions(dynamic_workflow_->execute(scope, kvps));
     }
diff --git a/projects/dia_to_sml/spec/transformer_spec.cpp b/projects/dia_to_sml/spec/transformer_spec.cpp
index 18dcd38..9f5bf49 100644
--- a/projects/dia_to_sml/spec/transformer_spec.cpp
+++ b/projects/dia_to_sml/spec/transformer_spec.cpp
@@ -1293,7 +1293,7 @@ BOOST_AUTO_TEST_CASE(uml_note_with_marker_transforms_into_model_comments) {
     BOOST_CHECK(m.name().simple_name() == model_name);
     BOOST_CHECK(!m.documentation().empty());
     BOOST_CHECK(m.members().empty());
-    BOOST_CHECK(m.meta_data().size() == 1);
+    BOOST_CHECK(m.extensions().fields().size() == 1);
 }
 
 BOOST_AUTO_TEST_CASE(uml_note_with_text_but_no_marker_does_nothing) {
@@ -1311,7 +1311,7 @@ BOOST_AUTO_TEST_CASE(uml_note_with_text_but_no_marker_does_nothing) {
     BOOST_CHECK(m.name().simple_name() == model_name);
     BOOST_CHECK(m.documentation().empty());
     BOOST_CHECK(m.members().empty());
-    BOOST_CHECK(m.meta_data().empty());
+    BOOST_CHECK(m.extensions().fields().empty());
 }
 
 BOOST_AUTO_TEST_CASE(empty_uml_note_does_nothing) {
@@ -1328,7 +1328,7 @@ BOOST_AUTO_TEST_CASE(empty_uml_note_does_nothing) {
     BOOST_CHECK(m.name().simple_name() == model_name);
     BOOST_CHECK(m.documentation().empty());
     BOOST_CHECK(m.members().empty());
-    BOOST_CHECK(m.meta_data().empty());
+    BOOST_CHECK(m.extensions().fields().empty());
 }
 
 BOOST_AUTO_TEST_CASE(uml_note_with_marker_inside_package_transforms_into_package_comments) {
@@ -1342,7 +1342,7 @@ BOOST_AUTO_TEST_CASE(uml_note_with_marker_inside_package_transforms_into_package
 
     BOOST_LOG_SEV(lg, debug) << "context: " << c;
     BOOST_CHECK(c.model().documentation().empty());
-    BOOST_CHECK(c.model().meta_data().empty());
+    BOOST_CHECK(c.model().extensions().fields().empty());
 
     BOOST_REQUIRE(c.model().modules().size() == 2);
     std::string model_member, module_name;
@@ -1355,11 +1355,11 @@ BOOST_AUTO_TEST_CASE(uml_note_with_marker_inside_package_transforms_into_package
             BOOST_CHECK(m.documentation().empty());
             BOOST_CHECK(m.members().size() == 1);
             model_member = m.members().front().simple_name();
-            BOOST_CHECK(m.meta_data().empty());
+            BOOST_CHECK(m.extensions().fields().empty());
         } else {
             module_name = m.name().simple_name();
             BOOST_CHECK(!m.documentation().empty());
-            BOOST_CHECK(!m.meta_data().empty());
+            BOOST_CHECK(!m.extensions().fields().empty());
             BOOST_CHECK(m.members().empty());
         }
     }
@@ -1377,7 +1377,7 @@ BOOST_AUTO_TEST_CASE(uml_note_with_text_but_no_marker_inside_package_does_nothin
 
     BOOST_LOG_SEV(lg, debug) << "context: " << c;
     BOOST_CHECK(c.model().documentation().empty());
-    BOOST_CHECK(c.model().meta_data().empty());
+    BOOST_CHECK(c.model().extensions().fields().empty());
     BOOST_REQUIRE(c.model().modules().size() == 2);
 
     std::string model_member, module_name;
@@ -1389,11 +1389,11 @@ BOOST_AUTO_TEST_CASE(uml_note_with_text_but_no_marker_inside_package_does_nothin
             BOOST_CHECK(m.documentation().empty());
             BOOST_CHECK(m.members().size() == 1);
             model_member = m.members().front().simple_name();
-            BOOST_CHECK(m.meta_data().empty());
+            BOOST_CHECK(m.extensions().fields().empty());
         } else {
             module_name = m.name().simple_name();
             BOOST_CHECK(m.documentation().empty());
-            BOOST_CHECK(m.meta_data().empty());
+            BOOST_CHECK(m.extensions().fields().empty());
             BOOST_CHECK(m.members().empty());
         }
     }
@@ -1412,7 +1412,7 @@ BOOST_AUTO_TEST_CASE(empty_uml_note_inside_package_does_nothing) {
 
     BOOST_LOG_SEV(lg, debug) << "context: " << c;
     BOOST_CHECK(c.model().documentation().empty());
-    BOOST_CHECK(c.model().meta_data().empty());
+    BOOST_CHECK(c.model().extensions().fields().empty());
     BOOST_REQUIRE(c.model().modules().size() == 2);
     std::string model_member, module_name;
     for (const auto& pair : c.model().modules()) {
@@ -1423,11 +1423,11 @@ BOOST_AUTO_TEST_CASE(empty_uml_note_inside_package_does_nothing) {
             BOOST_CHECK(m.documentation().empty());
             BOOST_CHECK(m.members().size() == 1);
             model_member = m.members().front().simple_name();
-            BOOST_CHECK(m.meta_data().empty());
+            BOOST_CHECK(m.extensions().fields().empty());
         } else {
             module_name = m.name().simple_name();
             BOOST_CHECK(m.documentation().empty());
-            BOOST_CHECK(m.meta_data().empty());
+            BOOST_CHECK(m.extensions().fields().empty());
         }
     }
     BOOST_CHECK(model_member == module_name);
diff --git a/projects/dia_to_sml/src/types/transformer.cpp b/projects/dia_to_sml/src/types/transformer.cpp
index a8a8926..454eabf 100644
--- a/projects/dia_to_sml/src/types/transformer.cpp
+++ b/projects/dia_to_sml/src/types/transformer.cpp
@@ -27,7 +27,6 @@
 #include "dogen/dynamic/types/content_extensions.hpp"
 #include "dogen/sml/types/module.hpp"
 #include "dogen/sml/types/object.hpp"
-#include "dogen/sml/types/meta_data/reader.hpp"
 #include "dogen/dia/types/composite.hpp"
 #include "dogen/dia/types/attribute.hpp"
 #include "dogen/dia_to_sml/types/field_definitions.hpp"
@@ -194,9 +193,6 @@ sml::property transformer::to_property(const processed_property& p) const {
     r.documentation(p.comment().documentation());
 
     const auto& kvps(p.comment().key_value_pairs());
-    sml::meta_data::writer writer(r.meta_data());
-    writer.add(kvps);
-
     const auto scope(dynamic::scope_types::property);
     r.extensions(dynamic_workflow_->execute(scope, kvps));
 
@@ -471,8 +467,6 @@ void transformer::from_note(const processed_object& o) {
     const sml::model& model(context_.model());
     if (o.child_node_id().empty()) {
         auto& module(module_for_qname(model.name()));
-        sml::meta_data::writer writer(module.meta_data());
-        writer.add(kvps);
         module.documentation(documentation);
 
         const auto scope(dynamic::scope_types::root_module);
@@ -482,8 +476,6 @@ void transformer::from_note(const processed_object& o) {
     }
 
     sml::module& module(module_for_id(o.child_node_id()));
-    sml::meta_data::writer writer(module.meta_data());
-    writer.add(kvps);
     module.documentation(documentation);
 
     const auto scope(dynamic::scope_types::any_module);
diff --git a/projects/sml/include/dogen/sml/types/all.hpp b/projects/sml/include/dogen/sml/types/all.hpp
index 3897714..99e2a88 100644
--- a/projects/sml/include/dogen/sml/types/all.hpp
+++ b/projects/sml/include/dogen/sml/types/all.hpp
@@ -37,9 +37,6 @@
 #include "dogen/sml/types/json_hydrator.hpp"
 #include "dogen/sml/types/merger.hpp"
 #include "dogen/sml/types/merging_error.hpp"
-#include "dogen/sml/types/meta_data/read_write_error.hpp"
-#include "dogen/sml/types/meta_data/reader.hpp"
-#include "dogen/sml/types/meta_data/writer.hpp"
 #include "dogen/sml/types/model.hpp"
 #include "dogen/sml/types/module.hpp"
 #include "dogen/sml/types/module_types.hpp"
diff --git a/projects/sml/include/dogen/sml/types/concept.hpp b/projects/sml/include/dogen/sml/types/concept.hpp
index 68395b6..f353da9 100644
--- a/projects/sml/include/dogen/sml/types/concept.hpp
+++ b/projects/sml/include/dogen/sml/types/concept.hpp
@@ -27,7 +27,6 @@
 
 #include <algorithm>
 #include <boost/optional.hpp>
-#include <boost/property_tree/ptree.hpp>
 #include <list>
 #include <string>
 #include <unordered_map>
@@ -63,7 +62,6 @@ public:
         const std::list<dogen::sml::property>& local_properties,
         const std::unordered_map<dogen::sml::qname, std::list<dogen::sml::property> >& inherited_properties,
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
@@ -136,16 +134,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -243,7 +231,6 @@ private:
     std::list<dogen::sml::property> local_properties_;
     std::unordered_map<dogen::sml::qname, std::list<dogen::sml::property> > inherited_properties_;
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     dogen::sml::qname name_;
     dogen::sml::generation_types generation_type_;
diff --git a/projects/sml/include/dogen/sml/types/enumeration.hpp b/projects/sml/include/dogen/sml/types/enumeration.hpp
index 67bbb34..1a79bfa 100644
--- a/projects/sml/include/dogen/sml/types/enumeration.hpp
+++ b/projects/sml/include/dogen/sml/types/enumeration.hpp
@@ -50,7 +50,6 @@ public:
 public:
     enumeration(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
diff --git a/projects/sml/include/dogen/sml/types/json_hydrator.hpp b/projects/sml/include/dogen/sml/types/json_hydrator.hpp
index a6d2a65..8030ca7 100644
--- a/projects/sml/include/dogen/sml/types/json_hydrator.hpp
+++ b/projects/sml/include/dogen/sml/types/json_hydrator.hpp
@@ -27,6 +27,9 @@
 
 #include <iosfwd>
 #include <boost/property_tree/ptree.hpp>
+#include "dogen/dynamic/types/object.hpp"
+#include "dogen/dynamic/types/workflow.hpp"
+#include "dogen/dynamic/types/scope_types.hpp"
 #include "dogen/sml/types/type.hpp"
 #include "dogen/sml/types/model.hpp"
 
@@ -38,11 +41,13 @@ namespace sml {
  */
 class json_hydrator {
 public:
-    json_hydrator() = default;
     json_hydrator(const json_hydrator&) = default;
     json_hydrator(json_hydrator&&) = default;
     ~json_hydrator() noexcept = default;
 
+public:
+    json_hydrator();
+
 private:
     /**
      * @brief Returns the generation type for the model, depending on
@@ -70,11 +75,12 @@ private:
         qname& qn) const;
 
     /**
-     * @brief Reads all the meta-data from the source property tree,
-     * and copies it to the destination.
+     * @brief Creates the dynamic extensions by reading meta-data from
+     * the property tree.
      */
-    void copy_meta_data(const boost::property_tree::ptree& source,
-        boost::property_tree::ptree& destination) const;
+    dynamic::object
+    create_dynamic_extensions(const boost::property_tree::ptree& pt,
+        const dynamic::scope_types st) const;
 
     /**
      * @brief Reads an SML element from the property tree.
@@ -98,6 +104,9 @@ public:
      * @brief Hydrates the model from the JSON stream.
      */
     model hydrate(std::istream& s) const;
+
+private:
+    const dynamic::workflow dynamic_workflow_;
 };
 
 } }
diff --git a/projects/sml/include/dogen/sml/types/meta_data/read_write_error.hpp b/projects/sml/include/dogen/sml/types/meta_data/read_write_error.hpp
deleted file mode 100644
index 21cba08..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/read_write_error.hpp
+++ /dev/null
@@ -1,55 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_READ_WRITE_ERROR_HPP
-#define DOGEN_SML_TYPES_META_DATA_READ_WRITE_ERROR_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/exception/info.hpp>
-#include <string>
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-/**
- * @brief An error occurred whilst reading or writing meta-data.
- */
-class read_write_error : public virtual std::exception, public virtual boost::exception {
-public:
-    read_write_error() = default;
-    ~read_write_error() noexcept = default;
-
-public:
-    read_write_error(const std::string& message) : message_(message) { }
-
-public:
-    const char* what() const noexcept { return(message_.c_str()); }
-
-private:
-    const std::string message_;
-};
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/meta_data/read_write_error_fwd.hpp b/projects/sml/include/dogen/sml/types/meta_data/read_write_error_fwd.hpp
deleted file mode 100644
index fa6472d..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/read_write_error_fwd.hpp
+++ /dev/null
@@ -1,39 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_READ_WRITE_ERROR_FWD_HPP
-#define DOGEN_SML_TYPES_META_DATA_READ_WRITE_ERROR_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/exception/info.hpp>
-#include <string>
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-class read_write_error;
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/meta_data/reader.hpp b/projects/sml/include/dogen/sml/types/meta_data/reader.hpp
deleted file mode 100644
index 7852b6f..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/reader.hpp
+++ /dev/null
@@ -1,88 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_READER_HPP
-#define DOGEN_SML_TYPES_META_DATA_READER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <list>
-#include <boost/property_tree/ptree.hpp>
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-class reader {
-public:
-    reader() = delete;
-    ~reader() noexcept = default;
-    reader(const reader&) = default;
-    reader(reader&&) = default;
-
-public:
-    reader(const boost::property_tree::ptree& meta_data);
-
-public:
-    /**
-     * @brief Returns true if the key exists, false otherwise.
-     */
-    bool has_key(const std::string& key) const;
-
-    /**
-     * @brief Returns true if the key exists and its value is set to
-     * boolean true.
-     */
-    bool is_true(const std::string& key) const;
-
-    /**
-     * @brief Returns the negation of @e is_true.
-     */
-    bool is_false(const std::string& key) const;
-
-    /**
-     * @brief Returns the value associated with the key, if it exists.
-     */
-    std::string get(const std::string& key) const;
-
-    /**
-     * @brief Returns true if the key exists and its value is set to
-     * supported.
-     */
-    bool is_supported(const std::string& key) const;
-
-public:
-    /**
-     * @brief Returns the odb pragmas.
-     *
-     * @deprecated this method is only needed for the transition to
-     * OM.
-     */
-    std::list<std::pair<std::string,std::string> > odb_pragma() const;
-
-private:
-    const boost::property_tree::ptree& meta_data_;
-};
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/meta_data/reader_fwd.hpp b/projects/sml/include/dogen/sml/types/meta_data/reader_fwd.hpp
deleted file mode 100644
index 7ef4c23..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/reader_fwd.hpp
+++ /dev/null
@@ -1,36 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_READER_FWD_HPP
-#define DOGEN_SML_TYPES_META_DATA_READER_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-class reader;
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/meta_data/writer.hpp b/projects/sml/include/dogen/sml/types/meta_data/writer.hpp
deleted file mode 100644
index 381c94a..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/writer.hpp
+++ /dev/null
@@ -1,88 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_WRITER_HPP
-#define DOGEN_SML_TYPES_META_DATA_WRITER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-#include <list>
-#include <boost/property_tree/ptree.hpp>
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-/**
- * @brief Given one or more key-value pairs, adds them to the
- * meta-data container.
- */
-class writer {
-public:
-    writer() = delete;
-    ~writer() noexcept = default;
-    writer(const writer&) = default;
-    writer(writer&&) = default;
-
-public:
-    writer(boost::property_tree::ptree& meta_data);
-
-private:
-    /**
-     * @brief Returns true if the supplied key should have a container
-     * value.
-     */
-    bool is_container(const std::string& key) const;
-
-    /**
-     * @brief Returns true if the key exists, false otherwise.
-     */
-    bool has_key(const std::string& key) const;
-
-public:
-    /**
-     * @brief Adds the key-value pair.
-     *
-     * If the key implies a container, generates the appropriate
-     * structure.
-     */
-    void add(const std::string& key, const std::string& value);
-
-    /**
-     * @brief Adds all key-value pairs.
-     */
-    void add(const std::list<std::pair<std::string, std::string> >& kvps);
-
-    /**
-     * @brief Adds only if @e key is not in the simple meta_data
-     * container.
-     *
-     * @return true if added, false otherwise.
-     */
-    bool add_if_key_not_found(const std::string& key, const std::string& value);
-
-private:
-    boost::property_tree::ptree& meta_data_;
-};
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/meta_data/writer_fwd.hpp b/projects/sml/include/dogen/sml/types/meta_data/writer_fwd.hpp
deleted file mode 100644
index bc7ea93..0000000
--- a/projects/sml/include/dogen/sml/types/meta_data/writer_fwd.hpp
+++ /dev/null
@@ -1,36 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_META_DATA_WRITER_FWD_HPP
-#define DOGEN_SML_TYPES_META_DATA_WRITER_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-class writer;
-
-} } }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/model.hpp b/projects/sml/include/dogen/sml/types/model.hpp
index 3407188..f1b7358 100644
--- a/projects/sml/include/dogen/sml/types/model.hpp
+++ b/projects/sml/include/dogen/sml/types/model.hpp
@@ -27,7 +27,6 @@
 
 #include <algorithm>
 #include <boost/optional.hpp>
-#include <boost/property_tree/ptree.hpp>
 #include <string>
 #include <unordered_map>
 #include <unordered_set>
@@ -85,7 +84,6 @@ public:
 public:
     model(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
@@ -123,16 +121,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -271,7 +259,6 @@ public:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     dogen::sml::qname name_;
     dogen::sml::generation_types generation_type_;
diff --git a/projects/sml/include/dogen/sml/types/module.hpp b/projects/sml/include/dogen/sml/types/module.hpp
index 7dbf40e..7631650 100644
--- a/projects/sml/include/dogen/sml/types/module.hpp
+++ b/projects/sml/include/dogen/sml/types/module.hpp
@@ -27,7 +27,6 @@
 
 #include <algorithm>
 #include <boost/optional.hpp>
-#include <boost/property_tree/ptree.hpp>
 #include <list>
 #include <string>
 #include "dogen/dynamic/types/object.hpp"
@@ -59,7 +58,6 @@ public:
 public:
     module(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
@@ -91,16 +89,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -177,7 +165,6 @@ public:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     dogen::sml::qname name_;
     dogen::sml::generation_types generation_type_;
diff --git a/projects/sml/include/dogen/sml/types/object.hpp b/projects/sml/include/dogen/sml/types/object.hpp
index b18f363..b00bc93 100644
--- a/projects/sml/include/dogen/sml/types/object.hpp
+++ b/projects/sml/include/dogen/sml/types/object.hpp
@@ -58,7 +58,6 @@ public:
 public:
     object(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
diff --git a/projects/sml/include/dogen/sml/types/operation.hpp b/projects/sml/include/dogen/sml/types/operation.hpp
index 245e025..0c816cb 100644
--- a/projects/sml/include/dogen/sml/types/operation.hpp
+++ b/projects/sml/include/dogen/sml/types/operation.hpp
@@ -27,7 +27,6 @@
 
 #include <algorithm>
 #include <boost/optional.hpp>
-#include <boost/property_tree/ptree.hpp>
 #include <list>
 #include <string>
 #include "dogen/dynamic/types/object.hpp"
@@ -53,7 +52,6 @@ public:
 public:
     operation(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const std::string& name,
         const std::list<dogen::sml::parameter>& parameters,
@@ -82,16 +80,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -143,7 +131,6 @@ public:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     std::string name_;
     std::list<dogen::sml::parameter> parameters_;
diff --git a/projects/sml/include/dogen/sml/types/parameter.hpp b/projects/sml/include/dogen/sml/types/parameter.hpp
index 4449063..b7eee8d 100644
--- a/projects/sml/include/dogen/sml/types/parameter.hpp
+++ b/projects/sml/include/dogen/sml/types/parameter.hpp
@@ -26,7 +26,6 @@
 #endif
 
 #include <algorithm>
-#include <boost/property_tree/ptree.hpp>
 #include <string>
 #include "dogen/dynamic/types/object.hpp"
 #include "dogen/sml/serialization/parameter_fwd_ser.hpp"
@@ -42,15 +41,12 @@ class parameter final {
 public:
     parameter() = default;
     parameter(const parameter&) = default;
+    parameter(parameter&&) = default;
     ~parameter() = default;
 
 public:
-    parameter(parameter&& rhs);
-
-public:
     parameter(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const std::string& name,
         const dogen::sml::nested_qname& type);
@@ -78,16 +74,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -129,7 +115,6 @@ public:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     std::string name_;
     dogen::sml::nested_qname type_;
diff --git a/projects/sml/include/dogen/sml/types/primitive.hpp b/projects/sml/include/dogen/sml/types/primitive.hpp
index 24bde65..f0bfc99 100644
--- a/projects/sml/include/dogen/sml/types/primitive.hpp
+++ b/projects/sml/include/dogen/sml/types/primitive.hpp
@@ -47,7 +47,6 @@ public:
 public:
     primitive(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
diff --git a/projects/sml/include/dogen/sml/types/property.hpp b/projects/sml/include/dogen/sml/types/property.hpp
index 438a63a..176a375 100644
--- a/projects/sml/include/dogen/sml/types/property.hpp
+++ b/projects/sml/include/dogen/sml/types/property.hpp
@@ -26,7 +26,6 @@
 #endif
 
 #include <algorithm>
-#include <boost/property_tree/ptree.hpp>
 #include <string>
 #include "dogen/dynamic/types/object.hpp"
 #include "dogen/sml/serialization/property_fwd_ser.hpp"
@@ -41,18 +40,15 @@ namespace sml {
 class property final {
 public:
     property(const property&) = default;
+    property(property&&) = default;
     ~property() = default;
 
 public:
     property();
 
 public:
-    property(property&& rhs);
-
-public:
     property(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const std::string& name,
         const dogen::sml::nested_qname& type,
@@ -83,16 +79,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -165,7 +151,6 @@ public:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     std::string name_;
     dogen::sml::nested_qname type_;
diff --git a/projects/sml/include/dogen/sml/types/type.hpp b/projects/sml/include/dogen/sml/types/type.hpp
index a513c98..b6ce466 100644
--- a/projects/sml/include/dogen/sml/types/type.hpp
+++ b/projects/sml/include/dogen/sml/types/type.hpp
@@ -27,7 +27,6 @@
 
 #include <algorithm>
 #include <boost/optional.hpp>
-#include <boost/property_tree/ptree.hpp>
 #include <iosfwd>
 #include <string>
 #include "dogen/dynamic/types/object.hpp"
@@ -58,7 +57,6 @@ public:
 public:
     type(
         const std::string& documentation,
-        const boost::property_tree::ptree& meta_data,
         const dogen::dynamic::object& extensions,
         const dogen::sml::qname& name,
         const dogen::sml::generation_types& generation_type,
@@ -97,16 +95,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Meta-data associated with the object, opaque to SML.
-     */
-    /**@{*/
-    const boost::property_tree::ptree& meta_data() const;
-    boost::property_tree::ptree& meta_data();
-    void meta_data(const boost::property_tree::ptree& v);
-    void meta_data(const boost::property_tree::ptree&& v);
-    /**@}*/
-
-    /**
      * @brief Dynamic extensions for this element.
      */
     /**@{*/
@@ -163,7 +151,6 @@ protected:
 
 private:
     std::string documentation_;
-    boost::property_tree::ptree meta_data_;
     dogen::dynamic::object extensions_;
     dogen::sml::qname name_;
     dogen::sml::generation_types generation_type_;
diff --git a/projects/sml/spec/json_hydrator_spec.cpp b/projects/sml/spec/json_hydrator_spec.cpp
index 48ea585..67229e9 100644
--- a/projects/sml/spec/json_hydrator_spec.cpp
+++ b/projects/sml/spec/json_hydrator_spec.cpp
@@ -218,7 +218,7 @@ BOOST_AUTO_TEST_CASE(tagged_model_hydrates_into_expected_model) {
     BOOST_CHECK(m.name().module_path().empty());
     BOOST_CHECK(m.name().external_module_path().empty());
     BOOST_CHECK(m.documentation() == documentation);
-    BOOST_CHECK(m.meta_data().size() == 2);
+    BOOST_CHECK(m.extensions().fields().size() == 2);
 
     {
         auto i(m.meta_data().find(dogen::sml::tags::odb_pragma));
diff --git a/projects/sml/src/hash/concept_hash.cpp b/projects/sml/src/hash/concept_hash.cpp
index 83572ff..f389641 100644
--- a/projects/sml/src/hash/concept_hash.cpp
+++ b/projects/sml/src/hash/concept_hash.cpp
@@ -52,17 +52,6 @@ inline std::size_t hash_std_unordered_map_dogen_sml_qname_std_list_dogen_sml_pro
     return seed;
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
     std::size_t seed(0);
 
@@ -101,7 +90,6 @@ std::size_t concept_hasher::hash(const concept&v) {
     combine(seed, hash_std_list_dogen_sml_property(v.local_properties()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_std_list_dogen_sml_property_(v.inherited_properties()));
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.generation_type());
diff --git a/projects/sml/src/hash/model_hash.cpp b/projects/sml/src/hash/model_hash.cpp
index 1f1e7f0..2d2d8f7 100644
--- a/projects/sml/src/hash/model_hash.cpp
+++ b/projects/sml/src/hash/model_hash.cpp
@@ -38,17 +38,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
     std::size_t seed(0);
 
@@ -130,7 +119,6 @@ std::size_t model_hasher::hash(const model&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.generation_type());
diff --git a/projects/sml/src/hash/module_hash.cpp b/projects/sml/src/hash/module_hash.cpp
index 895f314..a0719b0 100644
--- a/projects/sml/src/hash/module_hash.cpp
+++ b/projects/sml/src/hash/module_hash.cpp
@@ -34,17 +34,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
     std::size_t seed(0);
 
@@ -72,7 +61,6 @@ std::size_t module_hasher::hash(const module&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.generation_type());
diff --git a/projects/sml/src/hash/operation_hash.cpp b/projects/sml/src/hash/operation_hash.cpp
index 1ca913a..e32b4f0 100644
--- a/projects/sml/src/hash/operation_hash.cpp
+++ b/projects/sml/src/hash/operation_hash.cpp
@@ -32,17 +32,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 inline std::size_t hash_std_list_dogen_sml_parameter(const std::list<dogen::sml::parameter>& v){
     std::size_t seed(0);
     for (const auto i : v) {
@@ -70,7 +59,6 @@ std::size_t operation_hasher::hash(const operation&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, hash_std_list_dogen_sml_parameter(v.parameters()));
diff --git a/projects/sml/src/hash/parameter_hash.cpp b/projects/sml/src/hash/parameter_hash.cpp
index 4f6baff..70ecbea 100644
--- a/projects/sml/src/hash/parameter_hash.cpp
+++ b/projects/sml/src/hash/parameter_hash.cpp
@@ -31,17 +31,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 }
 
 namespace dogen {
@@ -51,7 +40,6 @@ std::size_t parameter_hasher::hash(const parameter&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.type());
diff --git a/projects/sml/src/hash/property_hash.cpp b/projects/sml/src/hash/property_hash.cpp
index e621c85..2c71ddb 100644
--- a/projects/sml/src/hash/property_hash.cpp
+++ b/projects/sml/src/hash/property_hash.cpp
@@ -31,17 +31,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 }
 
 namespace dogen {
@@ -51,7 +40,6 @@ std::size_t property_hasher::hash(const property&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.type());
diff --git a/projects/sml/src/hash/type_hash.cpp b/projects/sml/src/hash/type_hash.cpp
index ed4c9b8..e6f5d65 100644
--- a/projects/sml/src/hash/type_hash.cpp
+++ b/projects/sml/src/hash/type_hash.cpp
@@ -33,17 +33,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_boost_property_tree_ptree(const boost::property_tree::ptree& v) {
-    std::size_t seed(0);
-    for (const auto& node : v) {
-        combine(seed, node.first);
-        combine(seed, node.second.data());
-        combine(seed, hash_boost_property_tree_ptree(node.second));
-    }
-
-    return seed;
-}
-
 inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
     std::size_t seed(0);
 
@@ -63,7 +52,6 @@ std::size_t type_hasher::hash(const type&v) {
     std::size_t seed(0);
 
     combine(seed, v.documentation());
-    combine(seed, hash_boost_property_tree_ptree(v.meta_data()));
     combine(seed, v.extensions());
     combine(seed, v.name());
     combine(seed, v.generation_type());
diff --git a/projects/sml/src/io/concept_io.cpp b/projects/sml/src/io/concept_io.cpp
index 8c75ee7..610b1af 100644
--- a/projects/sml/src/io/concept_io.cpp
+++ b/projects/sml/src/io/concept_io.cpp
@@ -20,9 +20,7 @@
  */
 #include <boost/algorithm/string.hpp>
 #include <boost/io/ios_state.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/concept_io.hpp"
 #include "dogen/sml/io/generation_types_io.hpp"
@@ -72,23 +70,6 @@ inline std::string tidy_up_string(std::string s) {
 }
 
 namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
-namespace boost {
 
 inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
     s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
@@ -147,7 +128,6 @@ std::ostream& operator<<(std::ostream& s, const concept& v) {
       << "\"local_properties\": " << v.local_properties() << ", "
       << "\"inherited_properties\": " << v.inherited_properties() << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << v.name() << ", "
       << "\"generation_type\": " << v.generation_type() << ", "
diff --git a/projects/sml/src/io/model_io.cpp b/projects/sml/src/io/model_io.cpp
index df5e9a0..818b955 100644
--- a/projects/sml/src/io/model_io.cpp
+++ b/projects/sml/src/io/model_io.cpp
@@ -20,9 +20,7 @@
  */
 #include <boost/algorithm/string.hpp>
 #include <boost/io/ios_state.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/concept_io.hpp"
 #include "dogen/sml/io/enumeration_io.hpp"
@@ -43,23 +41,6 @@ inline std::string tidy_up_string(std::string s) {
 }
 
 namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
-namespace boost {
 
 inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
     s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
@@ -209,7 +190,6 @@ std::ostream& operator<<(std::ostream& s, const model& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::model\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << v.name() << ", "
       << "\"generation_type\": " << v.generation_type() << ", "
diff --git a/projects/sml/src/io/module_io.cpp b/projects/sml/src/io/module_io.cpp
index f5a6e40..506e888 100644
--- a/projects/sml/src/io/module_io.cpp
+++ b/projects/sml/src/io/module_io.cpp
@@ -19,9 +19,7 @@
  *
  */
 #include <boost/algorithm/string.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/generation_types_io.hpp"
 #include "dogen/sml/io/module_io.hpp"
@@ -38,23 +36,6 @@ inline std::string tidy_up_string(std::string s) {
 }
 
 namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
-namespace boost {
 
 inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
     s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
@@ -90,7 +71,6 @@ std::ostream& operator<<(std::ostream& s, const module& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::module\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << v.name() << ", "
       << "\"generation_type\": " << v.generation_type() << ", "
diff --git a/projects/sml/src/io/operation_io.cpp b/projects/sml/src/io/operation_io.cpp
index 16c4400..c30556b 100644
--- a/projects/sml/src/io/operation_io.cpp
+++ b/projects/sml/src/io/operation_io.cpp
@@ -19,9 +19,7 @@
  *
  */
 #include <boost/algorithm/string.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/nested_qname_io.hpp"
 #include "dogen/sml/io/operation_io.hpp"
@@ -35,23 +33,6 @@ inline std::string tidy_up_string(std::string s) {
     return s;
 }
 
-namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
 namespace std {
 
 inline std::ostream& operator<<(std::ostream& s, const std::list<dogen::sml::parameter>& v) {
@@ -88,7 +69,6 @@ std::ostream& operator<<(std::ostream& s, const operation& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::operation\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << "\"" << tidy_up_string(v.name()) << "\"" << ", "
       << "\"parameters\": " << v.parameters() << ", "
diff --git a/projects/sml/src/io/parameter_io.cpp b/projects/sml/src/io/parameter_io.cpp
index 6d028f4..65ad48d 100644
--- a/projects/sml/src/io/parameter_io.cpp
+++ b/projects/sml/src/io/parameter_io.cpp
@@ -19,9 +19,7 @@
  *
  */
 #include <boost/algorithm/string.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/nested_qname_io.hpp"
 #include "dogen/sml/io/parameter_io.hpp"
@@ -34,23 +32,6 @@ inline std::string tidy_up_string(std::string s) {
     return s;
 }
 
-namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
 namespace dogen {
 namespace sml {
 
@@ -58,7 +39,6 @@ std::ostream& operator<<(std::ostream& s, const parameter& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::parameter\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << "\"" << tidy_up_string(v.name()) << "\"" << ", "
       << "\"type\": " << v.type()
diff --git a/projects/sml/src/io/property_io.cpp b/projects/sml/src/io/property_io.cpp
index cd9d366..4a4282b 100644
--- a/projects/sml/src/io/property_io.cpp
+++ b/projects/sml/src/io/property_io.cpp
@@ -20,9 +20,7 @@
  */
 #include <boost/algorithm/string.hpp>
 #include <boost/io/ios_state.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/nested_qname_io.hpp"
 #include "dogen/sml/io/property_io.hpp"
@@ -35,23 +33,6 @@ inline std::string tidy_up_string(std::string s) {
     return s;
 }
 
-namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
 namespace dogen {
 namespace sml {
 
@@ -65,7 +46,6 @@ std::ostream& operator<<(std::ostream& s, const property& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::property\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"meta_data\": " << v.meta_data() << ", "
       << "\"extensions\": " << v.extensions() << ", "
       << "\"name\": " << "\"" << tidy_up_string(v.name()) << "\"" << ", "
       << "\"type\": " << v.type() << ", "
diff --git a/projects/sml/src/io/type_io.cpp b/projects/sml/src/io/type_io.cpp
index cc41dec..e478be0 100644
--- a/projects/sml/src/io/type_io.cpp
+++ b/projects/sml/src/io/type_io.cpp
@@ -19,9 +19,7 @@
  *
  */
 #include <boost/algorithm/string.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/generation_types_io.hpp"
 #include "dogen/sml/io/origin_types_io.hpp"
diff --git a/projects/sml/src/serialization/concept_ser.cpp b/projects/sml/src/serialization/concept_ser.cpp
index 40f1452..d3d1aab 100644
--- a/projects/sml/src/serialization/concept_ser.cpp
+++ b/projects/sml/src/serialization/concept_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/list.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/optional.hpp>
@@ -53,7 +51,6 @@ void save(Archive& ar,
     ar << make_nvp("local_properties", v.local_properties_);
     ar << make_nvp("inherited_properties", v.inherited_properties_);
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("generation_type", v.generation_type_);
@@ -73,7 +70,6 @@ void load(Archive& ar,
     ar >> make_nvp("local_properties", v.local_properties_);
     ar >> make_nvp("inherited_properties", v.inherited_properties_);
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("generation_type", v.generation_type_);
diff --git a/projects/sml/src/serialization/model_ser.cpp b/projects/sml/src/serialization/model_ser.cpp
index 1fe9442..fd3057e 100644
--- a/projects/sml/src/serialization/model_ser.cpp
+++ b/projects/sml/src/serialization/model_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/optional.hpp>
 #include <boost/serialization/string.hpp>
@@ -53,7 +51,6 @@ void save(Archive& ar,
     const dogen::sml::model& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("generation_type", v.generation_type_);
@@ -74,7 +71,6 @@ void load(Archive& ar,
     dogen::sml::model& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("generation_type", v.generation_type_);
diff --git a/projects/sml/src/serialization/module_ser.cpp b/projects/sml/src/serialization/module_ser.cpp
index 3af3b6e..abfd74a 100644
--- a/projects/sml/src/serialization/module_ser.cpp
+++ b/projects/sml/src/serialization/module_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/list.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/optional.hpp>
@@ -48,7 +46,6 @@ void save(Archive& ar,
     const dogen::sml::module& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("generation_type", v.generation_type_);
@@ -63,7 +60,6 @@ void load(Archive& ar,
     dogen::sml::module& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("generation_type", v.generation_type_);
diff --git a/projects/sml/src/serialization/operation_ser.cpp b/projects/sml/src/serialization/operation_ser.cpp
index 1e973ec..d69ed3c 100644
--- a/projects/sml/src/serialization/operation_ser.cpp
+++ b/projects/sml/src/serialization/operation_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/list.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/optional.hpp>
@@ -46,7 +44,6 @@ void save(Archive& ar,
     const dogen::sml::operation& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("parameters", v.parameters_);
@@ -58,7 +55,6 @@ void load(Archive& ar,
     dogen::sml::operation& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("parameters", v.parameters_);
diff --git a/projects/sml/src/serialization/parameter_ser.cpp b/projects/sml/src/serialization/parameter_ser.cpp
index e4cacff..72a5e5b 100644
--- a/projects/sml/src/serialization/parameter_ser.cpp
+++ b/projects/sml/src/serialization/parameter_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/string.hpp>
 #include "dogen/dynamic/serialization/object_ser.hpp"
@@ -43,7 +41,6 @@ void save(Archive& ar,
     const dogen::sml::parameter& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("type", v.type_);
@@ -54,7 +51,6 @@ void load(Archive& ar,
     dogen::sml::parameter& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("type", v.type_);
diff --git a/projects/sml/src/serialization/property_ser.cpp b/projects/sml/src/serialization/property_ser.cpp
index 449e199..22b2596 100644
--- a/projects/sml/src/serialization/property_ser.cpp
+++ b/projects/sml/src/serialization/property_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/string.hpp>
 #include "dogen/dynamic/serialization/object_ser.hpp"
@@ -43,7 +41,6 @@ void save(Archive& ar,
     const dogen::sml::property& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("type", v.type_);
@@ -57,7 +54,6 @@ void load(Archive& ar,
     dogen::sml::property& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("type", v.type_);
diff --git a/projects/sml/src/serialization/type_ser.cpp b/projects/sml/src/serialization/type_ser.cpp
index d9981bc..407468a 100644
--- a/projects/sml/src/serialization/type_ser.cpp
+++ b/projects/sml/src/serialization/type_ser.cpp
@@ -26,8 +26,6 @@
 #include <boost/archive/text_oarchive.hpp>
 #include <boost/archive/xml_iarchive.hpp>
 #include <boost/archive/xml_oarchive.hpp>
-#include <boost/property_tree/json_parser.hpp>
-#include <boost/property_tree/ptree_serialization.hpp>
 #include <boost/serialization/nvp.hpp>
 #include <boost/serialization/optional.hpp>
 #include <boost/serialization/string.hpp>
@@ -53,7 +51,6 @@ void save(Archive& ar,
     const dogen::sml::type& v,
     const unsigned int /*version*/) {
     ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("meta_data", v.meta_data_);
     ar << make_nvp("extensions", v.extensions_);
     ar << make_nvp("name", v.name_);
     ar << make_nvp("generation_type", v.generation_type_);
@@ -66,7 +63,6 @@ void load(Archive& ar,
     dogen::sml::type& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("meta_data", v.meta_data_);
     ar >> make_nvp("extensions", v.extensions_);
     ar >> make_nvp("name", v.name_);
     ar >> make_nvp("generation_type", v.generation_type_);
diff --git a/projects/sml/src/test_data/concept_td.cpp b/projects/sml/src/test_data/concept_td.cpp
index 1ad0169..663c02f 100644
--- a/projects/sml/src/test_data/concept_td.cpp
+++ b/projects/sml/src/test_data/concept_td.cpp
@@ -61,16 +61,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -131,16 +121,15 @@ populate(const unsigned int position, result_type& v) {
     v.local_properties(create_std_list_dogen_sml_property(position + 1));
     v.inherited_properties(create_std_unordered_map_dogen_sml_qname_std_list_dogen_sml_property_(position + 2));
     v.documentation(create_std_string(position + 3));
-    v.meta_data(create_boost_property_tree_ptree(position + 4));
-    v.extensions(create_dogen_dynamic_object(position + 5));
-    v.name(create_dogen_sml_qname(position + 6));
-    v.generation_type(create_dogen_sml_generation_types(position + 7));
-    v.origin_type(create_dogen_sml_origin_types(position + 8));
-    v.containing_module(create_boost_optional_dogen_sml_qname(position + 9));
-    v.operations(create_std_list_dogen_sml_operation(position + 10));
-    v.refines(create_std_list_dogen_sml_qname(position + 11));
-    v.is_parent(create_bool(position + 12));
-    v.is_child(create_bool(position + 13));
+    v.extensions(create_dogen_dynamic_object(position + 4));
+    v.name(create_dogen_sml_qname(position + 5));
+    v.generation_type(create_dogen_sml_generation_types(position + 6));
+    v.origin_type(create_dogen_sml_origin_types(position + 7));
+    v.containing_module(create_boost_optional_dogen_sml_qname(position + 8));
+    v.operations(create_std_list_dogen_sml_operation(position + 9));
+    v.refines(create_std_list_dogen_sml_qname(position + 10));
+    v.is_parent(create_bool(position + 11));
+    v.is_child(create_bool(position + 12));
 }
 
 concept_generator::result_type
diff --git a/projects/sml/src/test_data/model_td.cpp b/projects/sml/src/test_data/model_td.cpp
index 550f81c..c2fa27d 100644
--- a/projects/sml/src/test_data/model_td.cpp
+++ b/projects/sml/src/test_data/model_td.cpp
@@ -38,16 +38,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -170,20 +160,19 @@ model_generator::model_generator() : position_(0) { }
 void model_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_dogen_sml_qname(position + 3));
-    v.generation_type(create_dogen_sml_generation_types(position + 4));
-    v.origin_type(create_dogen_sml_origin_types(position + 5));
-    v.containing_module(create_boost_optional_dogen_sml_qname(position + 6));
-    v.references(create_std_unordered_map_dogen_sml_qname_dogen_sml_origin_types(position + 7));
-    v.leaves(create_std_unordered_set_dogen_sml_qname(position + 8));
-    v.modules(create_std_unordered_map_dogen_sml_qname_dogen_sml_module(position + 9));
-    v.concepts(create_std_unordered_map_dogen_sml_qname_dogen_sml_concept(position + 10));
-    v.primitives(create_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(position + 11));
-    v.enumerations(create_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(position + 12));
-    v.objects(create_std_unordered_map_dogen_sml_qname_dogen_sml_object(position + 13));
-    v.is_target(create_bool(position + 14));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_dogen_sml_qname(position + 2));
+    v.generation_type(create_dogen_sml_generation_types(position + 3));
+    v.origin_type(create_dogen_sml_origin_types(position + 4));
+    v.containing_module(create_boost_optional_dogen_sml_qname(position + 5));
+    v.references(create_std_unordered_map_dogen_sml_qname_dogen_sml_origin_types(position + 6));
+    v.leaves(create_std_unordered_set_dogen_sml_qname(position + 7));
+    v.modules(create_std_unordered_map_dogen_sml_qname_dogen_sml_module(position + 8));
+    v.concepts(create_std_unordered_map_dogen_sml_qname_dogen_sml_concept(position + 9));
+    v.primitives(create_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(position + 10));
+    v.enumerations(create_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(position + 11));
+    v.objects(create_std_unordered_map_dogen_sml_qname_dogen_sml_object(position + 12));
+    v.is_target(create_bool(position + 13));
 }
 
 model_generator::result_type
diff --git a/projects/sml/src/test_data/module_td.cpp b/projects/sml/src/test_data/module_td.cpp
index 6acec98..5b9c62a 100644
--- a/projects/sml/src/test_data/module_td.cpp
+++ b/projects/sml/src/test_data/module_td.cpp
@@ -34,16 +34,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -94,14 +84,13 @@ module_generator::module_generator() : position_(0) { }
 void module_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_dogen_sml_qname(position + 3));
-    v.generation_type(create_dogen_sml_generation_types(position + 4));
-    v.origin_type(create_dogen_sml_origin_types(position + 5));
-    v.containing_module(create_boost_optional_dogen_sml_qname(position + 6));
-    v.members(create_std_list_dogen_sml_qname(position + 7));
-    v.type(create_dogen_sml_module_types(position + 8));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_dogen_sml_qname(position + 2));
+    v.generation_type(create_dogen_sml_generation_types(position + 3));
+    v.origin_type(create_dogen_sml_origin_types(position + 4));
+    v.containing_module(create_boost_optional_dogen_sml_qname(position + 5));
+    v.members(create_std_list_dogen_sml_qname(position + 6));
+    v.type(create_dogen_sml_module_types(position + 7));
 }
 
 module_generator::result_type
diff --git a/projects/sml/src/test_data/operation_td.cpp b/projects/sml/src/test_data/operation_td.cpp
index 2ef766b..c4a2a5a 100644
--- a/projects/sml/src/test_data/operation_td.cpp
+++ b/projects/sml/src/test_data/operation_td.cpp
@@ -32,16 +32,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -82,11 +72,10 @@ operation_generator::operation_generator() : position_(0) { }
 void operation_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_std_string(position + 3));
-    v.parameters(create_std_list_dogen_sml_parameter(position + 4));
-    v.type(create_boost_optional_dogen_sml_nested_qname(position + 5));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_std_string(position + 2));
+    v.parameters(create_std_list_dogen_sml_parameter(position + 3));
+    v.type(create_boost_optional_dogen_sml_nested_qname(position + 4));
 }
 
 operation_generator::result_type
diff --git a/projects/sml/src/test_data/parameter_td.cpp b/projects/sml/src/test_data/parameter_td.cpp
index 1571a24..5f1f862 100644
--- a/projects/sml/src/test_data/parameter_td.cpp
+++ b/projects/sml/src/test_data/parameter_td.cpp
@@ -31,16 +31,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -61,10 +51,9 @@ parameter_generator::parameter_generator() : position_(0) { }
 void parameter_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_std_string(position + 3));
-    v.type(create_dogen_sml_nested_qname(position + 4));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_std_string(position + 2));
+    v.type(create_dogen_sml_nested_qname(position + 3));
 }
 
 parameter_generator::result_type
diff --git a/projects/sml/src/test_data/property_td.cpp b/projects/sml/src/test_data/property_td.cpp
index f6b6e93..fbfdd20 100644
--- a/projects/sml/src/test_data/property_td.cpp
+++ b/projects/sml/src/test_data/property_td.cpp
@@ -31,16 +31,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -65,13 +55,12 @@ property_generator::property_generator() : position_(0) { }
 void property_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_std_string(position + 3));
-    v.type(create_dogen_sml_nested_qname(position + 4));
-    v.default_value(create_std_string(position + 5));
-    v.is_immutable(create_bool(position + 6));
-    v.is_fluent(create_bool(position + 7));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_std_string(position + 2));
+    v.type(create_dogen_sml_nested_qname(position + 3));
+    v.default_value(create_std_string(position + 4));
+    v.is_immutable(create_bool(position + 5));
+    v.is_fluent(create_bool(position + 6));
 }
 
 property_generator::result_type
diff --git a/projects/sml/src/test_data/type_td.cpp b/projects/sml/src/test_data/type_td.cpp
index 8afbb05..dc74dfa 100644
--- a/projects/sml/src/test_data/type_td.cpp
+++ b/projects/sml/src/test_data/type_td.cpp
@@ -36,16 +36,6 @@ std::string create_std_string(const unsigned int position) {
     return s.str();
 }
 
-boost::property_tree::ptree
-create_boost_property_tree_ptree(const unsigned int position) {
-    using boost::property_tree::ptree;
-    ptree c;
-    c.put("key_2", position);
-    ptree r;
-    r.push_back(ptree::value_type("key_1", c));
-    return r;
-}
-
 dogen::dynamic::object
 create_dogen_dynamic_object(const unsigned int position) {
     return dogen::dynamic::object_generator::create(position);
@@ -82,12 +72,11 @@ namespace sml {
 void type_generator::
 populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
-    v.meta_data(create_boost_property_tree_ptree(position + 1));
-    v.extensions(create_dogen_dynamic_object(position + 2));
-    v.name(create_dogen_sml_qname(position + 3));
-    v.generation_type(create_dogen_sml_generation_types(position + 4));
-    v.origin_type(create_dogen_sml_origin_types(position + 5));
-    v.containing_module(create_boost_optional_dogen_sml_qname(position + 6));
+    v.extensions(create_dogen_dynamic_object(position + 1));
+    v.name(create_dogen_sml_qname(position + 2));
+    v.generation_type(create_dogen_sml_generation_types(position + 3));
+    v.origin_type(create_dogen_sml_origin_types(position + 4));
+    v.containing_module(create_boost_optional_dogen_sml_qname(position + 5));
 }
 
 type_generator::result_type*
diff --git a/projects/sml/src/types/concept.cpp b/projects/sml/src/types/concept.cpp
index c290b8f..9f8da7b 100644
--- a/projects/sml/src/types/concept.cpp
+++ b/projects/sml/src/types/concept.cpp
@@ -34,7 +34,6 @@ concept::concept(concept&& rhs)
       local_properties_(std::move(rhs.local_properties_)),
       inherited_properties_(std::move(rhs.inherited_properties_)),
       documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
       extensions_(std::move(rhs.extensions_)),
       name_(std::move(rhs.name_)),
       generation_type_(std::move(rhs.generation_type_)),
@@ -50,7 +49,6 @@ concept::concept(
     const std::list<dogen::sml::property>& local_properties,
     const std::unordered_map<dogen::sml::qname, std::list<dogen::sml::property> >& inherited_properties,
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
@@ -64,7 +62,6 @@ concept::concept(
       local_properties_(local_properties),
       inherited_properties_(inherited_properties),
       documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       generation_type_(generation_type),
@@ -81,7 +78,6 @@ void concept::swap(concept& other) noexcept {
     swap(local_properties_, other.local_properties_);
     swap(inherited_properties_, other.inherited_properties_);
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(generation_type_, other.generation_type_);
@@ -98,7 +94,6 @@ bool concept::operator==(const concept& rhs) const {
         local_properties_ == rhs.local_properties_ &&
         inherited_properties_ == rhs.inherited_properties_ &&
         documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         generation_type_ == rhs.generation_type_ &&
@@ -180,22 +175,6 @@ void concept::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& concept::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& concept::meta_data() {
-    return meta_data_;
-}
-
-void concept::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void concept::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& concept::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/enumeration.cpp b/projects/sml/src/types/enumeration.cpp
index a2348c0..372907a 100644
--- a/projects/sml/src/types/enumeration.cpp
+++ b/projects/sml/src/types/enumeration.cpp
@@ -43,7 +43,6 @@ namespace sml {
 
 enumeration::enumeration(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
@@ -52,7 +51,6 @@ enumeration::enumeration(
     const dogen::sml::qname& underlying_type,
     const std::vector<dogen::sml::enumerator>& enumerators)
     : dogen::sml::type(documentation,
-      meta_data,
       extensions,
       name,
       generation_type,
diff --git a/projects/sml/src/types/json_hydrator.cpp b/projects/sml/src/types/json_hydrator.cpp
index cc83d41..356bac7 100644
--- a/projects/sml/src/types/json_hydrator.cpp
+++ b/projects/sml/src/types/json_hydrator.cpp
@@ -27,7 +27,6 @@
 #include "dogen/sml/types/primitive.hpp"
 #include "dogen/sml/types/hydration_error.hpp"
 #include "dogen/sml/types/string_converter.hpp"
-#include "dogen/sml/types/meta_data/writer.hpp"
 #include "dogen/sml/types/json_hydrator.hpp"
 
 using namespace dogen::utility::log;
@@ -73,6 +72,8 @@ const std::string missing_module("Could not find module: ");
 namespace dogen {
 namespace sml {
 
+json_hydrator::json_hydrator() : dynamic_workflow_() { }
+
 boost::optional<qname> containing_module(model& m, const qname& qn) {
     if (qn.model_name().empty() || qn.simple_name() == m.name().model_name()) {
         BOOST_LOG_SEV(lg, debug) << "Type has no containing module: "
@@ -166,18 +167,21 @@ void json_hydrator::read_module_path(const boost::property_tree::ptree& pt,
     }
 }
 
-void json_hydrator::copy_meta_data(const boost::property_tree::ptree& source,
-    boost::property_tree::ptree& destination) const {
-    const auto i(source.find(meta_data_key));
-    if (i == source.not_found())
-        return;
+dynamic::object json_hydrator::
+create_dynamic_extensions(const boost::property_tree::ptree& pt,
+    const dynamic::scope_types st) const {
+    const auto i(pt.find(meta_data_key));
+    if (i == pt.not_found())
+        return dynamic::object();
 
-    meta_data::writer writer(destination);
+    dynamic::object r;
+    std::list<std::pair<std::string, std::string> > kvps;
     for (auto j(i->second.begin()); j != i->second.end(); ++j) {
         const auto field_name(j->first);
         const auto field_value(j->second.get_value<std::string>());
-        writer.add(field_name, field_value);
+        kvps.push_back(std::make_pair(field_name, field_value));
     }
+    return dynamic_workflow_.execute(st, kvps);
 }
 
 void json_hydrator::
@@ -198,7 +202,7 @@ read_element(const boost::property_tree::ptree& pt, model& m) const {
 
             if (documentation)
                 t.documentation(*documentation);
-            copy_meta_data(pt, t.meta_data());
+            create_dynamic_extensions(pt, dynamic::scope_types::entity);
         });
 
     const auto meta_type_value(pt.get<std::string>(meta_type_key));
@@ -246,7 +250,7 @@ model json_hydrator::read_stream(std::istream& s, const bool is_target) const {
     ptree pt;
     read_json(s, pt);
 
-    copy_meta_data(pt, r.meta_data());
+    create_dynamic_extensions(pt, dynamic::scope_types::root_module);
     r.name().model_name(pt.get<std::string>(model_name_key));
     read_module_path(pt, r, r.name());
 
diff --git a/projects/sml/src/types/merger.cpp b/projects/sml/src/types/merger.cpp
index e58b258..e9da4bd 100644
--- a/projects/sml/src/types/merger.cpp
+++ b/projects/sml/src/types/merger.cpp
@@ -136,7 +136,7 @@ void merger::add_target(const model& target) {
     merged_model_.leaves(target.leaves());
     merged_model_.modules(target.modules());
     merged_model_.references(target.references());
-    merged_model_.meta_data(target.meta_data());
+    merged_model_.extensions(target.extensions());
 
     BOOST_LOG_SEV(lg, debug) << "added target model: " << n;
 }
diff --git a/projects/sml/src/types/meta_data/reader.cpp b/projects/sml/src/types/meta_data/reader.cpp
deleted file mode 100644
index fb136e2..0000000
--- a/projects/sml/src/types/meta_data/reader.cpp
+++ /dev/null
@@ -1,78 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/types/tags.hpp"
-#include "dogen/sml/types/meta_data/reader.hpp"
-
-namespace {
-
-const std::string empty;
-
-}
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-reader::reader(const boost::property_tree::ptree& meta_data)
-    : meta_data_(meta_data) { }
-
-bool reader::has_key(const std::string& key) const {
-    const auto node(meta_data_.get_optional<std::string>(key));
-    return node;
-}
-
-bool reader::is_true(const std::string& key) const {
-    const auto value(get(key));
-    return value == tags::bool_true;
-}
-
-bool reader::is_false(const std::string& key) const {
-    return !is_true(key);
-}
-
-std::string reader::get(const std::string& key) const {
-    const auto v(meta_data_.get_optional<std::string>(key));
-    if (v)
-        return *v;
-
-    return empty;
-}
-
-bool reader::is_supported(const std::string& key) const {
-    const auto value(get(key));
-    return value == tags::status_supported;
-}
-
-std::list<std::pair<std::string,std::string> > reader::odb_pragma() const {
-    std::list<std::pair<std::string, std::string> > r;
-
-    using boost::property_tree::ptree;
-    const auto child(meta_data_.get_child_optional(tags::odb_pragma));
-    if (!child)
-        return r;
-
-    for (auto i(child->begin()); i != child->end(); ++i)
-        r.push_back(std::make_pair(tags::odb_pragma, i->second.data()));
-
-    return r;
-}
-
-} } }
diff --git a/projects/sml/src/types/meta_data/writer.cpp b/projects/sml/src/types/meta_data/writer.cpp
deleted file mode 100644
index 1156f16..0000000
--- a/projects/sml/src/types/meta_data/writer.cpp
+++ /dev/null
@@ -1,68 +0,0 @@
-#include <boost/throw_exception.hpp>
-#include <boost/lexical_cast.hpp>
-#include "dogen/utility/log/logger.hpp"
-#include "dogen/sml/types/meta_data/read_write_error.hpp"
-#include "dogen/sml/types/tags.hpp"
-#include "dogen/sml/types/meta_data/writer.hpp"
-
-using namespace dogen::utility::log;
-
-namespace {
-
-auto lg(logger_factory("sml.meta_data.writer"));
-const std::string duplicated_key(
-    "Attempt to use a simple tag key which has already been used: ");
-
-}
-
-namespace dogen {
-namespace sml {
-namespace meta_data {
-
-writer::writer(boost::property_tree::ptree& meta_data)
-    : meta_data_(meta_data) { }
-
-bool writer::is_container(const std::string& key) const {
-    return key == tags::odb_pragma;
-}
-
-bool writer::has_key(const std::string& key) const {
-    const auto node(meta_data_.get_optional<std::string>(key));
-    return node;
-}
-
-void writer::add(const std::string& key, const std::string& value) {
-    using boost::property_tree::ptree;
-    if (is_container(key)) {
-        const auto node(meta_data_.get_child_optional(key));
-        unsigned int i(0);
-        if (node)
-            i = node->size();
-
-        const std::string nk(key + "." + boost::lexical_cast<std::string>(i));
-        meta_data_.put_child(nk, ptree(value));
-        return;
-    }
-
-    if (has_key(key)) {
-        BOOST_LOG_SEV(lg, error) << duplicated_key << key;
-        BOOST_THROW_EXCEPTION(read_write_error(duplicated_key + key));
-    }
-    meta_data_.put(key, value);
-}
-
-void writer::add(const std::list<std::pair<std::string, std::string> >& kvps) {
-    for (const auto& pair : kvps)
-        add(pair.first, pair.second);
-}
-
-bool writer::
-add_if_key_not_found(const std::string& key, const std::string& value) {
-    if (has_key(key))
-        return false;
-
-    add(key, value);
-    return true;
-}
-
-} } }
diff --git a/projects/sml/src/types/model.cpp b/projects/sml/src/types/model.cpp
index 818ac88..eb85f26 100644
--- a/projects/sml/src/types/model.cpp
+++ b/projects/sml/src/types/model.cpp
@@ -30,7 +30,6 @@ model::model()
 
 model::model(model&& rhs)
     : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
       extensions_(std::move(rhs.extensions_)),
       name_(std::move(rhs.name_)),
       generation_type_(std::move(rhs.generation_type_)),
@@ -47,7 +46,6 @@ model::model(model&& rhs)
 
 model::model(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
@@ -62,7 +60,6 @@ model::model(
     const std::unordered_map<dogen::sml::qname, dogen::sml::object>& objects,
     const bool is_target)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       generation_type_(generation_type),
@@ -80,7 +77,6 @@ model::model(
 void model::swap(model& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(generation_type_, other.generation_type_);
@@ -98,7 +94,6 @@ void model::swap(model& other) noexcept {
 
 bool model::operator==(const model& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         generation_type_ == rhs.generation_type_ &&
@@ -136,22 +131,6 @@ void model::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& model::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& model::meta_data() {
-    return meta_data_;
-}
-
-void model::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void model::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& model::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/module.cpp b/projects/sml/src/types/module.cpp
index 917fd52..cf83416 100644
--- a/projects/sml/src/types/module.cpp
+++ b/projects/sml/src/types/module.cpp
@@ -30,7 +30,6 @@ module::module()
 
 module::module(module&& rhs)
     : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
       extensions_(std::move(rhs.extensions_)),
       name_(std::move(rhs.name_)),
       generation_type_(std::move(rhs.generation_type_)),
@@ -41,7 +40,6 @@ module::module(module&& rhs)
 
 module::module(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
@@ -50,7 +48,6 @@ module::module(
     const std::list<dogen::sml::qname>& members,
     const dogen::sml::module_types& type)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       generation_type_(generation_type),
@@ -62,7 +59,6 @@ module::module(
 void module::swap(module& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(generation_type_, other.generation_type_);
@@ -74,7 +70,6 @@ void module::swap(module& other) noexcept {
 
 bool module::operator==(const module& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         generation_type_ == rhs.generation_type_ &&
@@ -106,22 +101,6 @@ void module::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& module::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& module::meta_data() {
-    return meta_data_;
-}
-
-void module::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void module::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& module::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/object.cpp b/projects/sml/src/types/object.cpp
index fa5681f..3428c1a 100644
--- a/projects/sml/src/types/object.cpp
+++ b/projects/sml/src/types/object.cpp
@@ -125,7 +125,6 @@ object::object()
 
 object::object(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
@@ -150,7 +149,6 @@ object::object(
     const bool is_aggregate_root,
     const std::list<dogen::sml::property>& identity)
     : dogen::sml::type(documentation,
-      meta_data,
       extensions,
       name,
       generation_type,
diff --git a/projects/sml/src/types/operation.cpp b/projects/sml/src/types/operation.cpp
index 729f687..0d10a87 100644
--- a/projects/sml/src/types/operation.cpp
+++ b/projects/sml/src/types/operation.cpp
@@ -25,7 +25,6 @@ namespace sml {
 
 operation::operation(operation&& rhs)
     : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
       extensions_(std::move(rhs.extensions_)),
       name_(std::move(rhs.name_)),
       parameters_(std::move(rhs.parameters_)),
@@ -33,13 +32,11 @@ operation::operation(operation&& rhs)
 
 operation::operation(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const std::string& name,
     const std::list<dogen::sml::parameter>& parameters,
     const boost::optional<dogen::sml::nested_qname>& type)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       parameters_(parameters),
@@ -48,7 +45,6 @@ operation::operation(
 void operation::swap(operation& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(parameters_, other.parameters_);
@@ -57,7 +53,6 @@ void operation::swap(operation& other) noexcept {
 
 bool operation::operator==(const operation& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         parameters_ == rhs.parameters_ &&
@@ -86,22 +81,6 @@ void operation::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& operation::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& operation::meta_data() {
-    return meta_data_;
-}
-
-void operation::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void operation::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& operation::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/parameter.cpp b/projects/sml/src/types/parameter.cpp
index 788458c..69d6982 100644
--- a/projects/sml/src/types/parameter.cpp
+++ b/projects/sml/src/types/parameter.cpp
@@ -23,21 +23,12 @@
 namespace dogen {
 namespace sml {
 
-parameter::parameter(parameter&& rhs)
-    : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
-      extensions_(std::move(rhs.extensions_)),
-      name_(std::move(rhs.name_)),
-      type_(std::move(rhs.type_)) { }
-
 parameter::parameter(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const std::string& name,
     const dogen::sml::nested_qname& type)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       type_(type) { }
@@ -45,7 +36,6 @@ parameter::parameter(
 void parameter::swap(parameter& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(type_, other.type_);
@@ -53,7 +43,6 @@ void parameter::swap(parameter& other) noexcept {
 
 bool parameter::operator==(const parameter& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         type_ == rhs.type_;
@@ -81,22 +70,6 @@ void parameter::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& parameter::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& parameter::meta_data() {
-    return meta_data_;
-}
-
-void parameter::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void parameter::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& parameter::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/primitive.cpp b/projects/sml/src/types/primitive.cpp
index 8d63217..d94dc6b 100644
--- a/projects/sml/src/types/primitive.cpp
+++ b/projects/sml/src/types/primitive.cpp
@@ -27,14 +27,12 @@ namespace sml {
 
 primitive::primitive(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
     const dogen::sml::origin_types& origin_type,
     const boost::optional<dogen::sml::qname>& containing_module)
     : dogen::sml::type(documentation,
-      meta_data,
       extensions,
       name,
       generation_type,
diff --git a/projects/sml/src/types/property.cpp b/projects/sml/src/types/property.cpp
index a99d2d8..ef949e3 100644
--- a/projects/sml/src/types/property.cpp
+++ b/projects/sml/src/types/property.cpp
@@ -27,19 +27,8 @@ property::property()
     : is_immutable_(static_cast<bool>(0)),
       is_fluent_(static_cast<bool>(0)) { }
 
-property::property(property&& rhs)
-    : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
-      extensions_(std::move(rhs.extensions_)),
-      name_(std::move(rhs.name_)),
-      type_(std::move(rhs.type_)),
-      default_value_(std::move(rhs.default_value_)),
-      is_immutable_(std::move(rhs.is_immutable_)),
-      is_fluent_(std::move(rhs.is_fluent_)) { }
-
 property::property(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const std::string& name,
     const dogen::sml::nested_qname& type,
@@ -47,7 +36,6 @@ property::property(
     const bool is_immutable,
     const bool is_fluent)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       type_(type),
@@ -58,7 +46,6 @@ property::property(
 void property::swap(property& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(type_, other.type_);
@@ -69,7 +56,6 @@ void property::swap(property& other) noexcept {
 
 bool property::operator==(const property& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         type_ == rhs.type_ &&
@@ -100,22 +86,6 @@ void property::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& property::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& property::meta_data() {
-    return meta_data_;
-}
-
-void property::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void property::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& property::extensions() const {
     return extensions_;
 }
diff --git a/projects/sml/src/types/type.cpp b/projects/sml/src/types/type.cpp
index 208013a..b1bd697 100644
--- a/projects/sml/src/types/type.cpp
+++ b/projects/sml/src/types/type.cpp
@@ -19,9 +19,7 @@
  *
  */
 #include <boost/algorithm/string.hpp>
-#include <boost/property_tree/json_parser.hpp>
 #include <ostream>
-#include <sstream>
 #include "dogen/dynamic/io/object_io.hpp"
 #include "dogen/sml/io/generation_types_io.hpp"
 #include "dogen/sml/io/origin_types_io.hpp"
@@ -37,23 +35,6 @@ inline std::string tidy_up_string(std::string s) {
 }
 
 namespace boost {
-namespace property_tree {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::property_tree::ptree& v) {
-    std::ostringstream ss;
-    boost::property_tree::write_json(ss, v);
-
-    std::string content(ss.str());
-    boost::replace_all(content, "\r\n", "");
-    boost::replace_all(content, "\n", "");
-
-    s << content;
-    return s;
-}
-
-} }
-
-namespace boost {
 
 inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
     s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
@@ -77,7 +58,6 @@ type::type()
 
 type::type(type&& rhs)
     : documentation_(std::move(rhs.documentation_)),
-      meta_data_(std::move(rhs.meta_data_)),
       extensions_(std::move(rhs.extensions_)),
       name_(std::move(rhs.name_)),
       generation_type_(std::move(rhs.generation_type_)),
@@ -86,14 +66,12 @@ type::type(type&& rhs)
 
 type::type(
     const std::string& documentation,
-    const boost::property_tree::ptree& meta_data,
     const dogen::dynamic::object& extensions,
     const dogen::sml::qname& name,
     const dogen::sml::generation_types& generation_type,
     const dogen::sml::origin_types& origin_type,
     const boost::optional<dogen::sml::qname>& containing_module)
     : documentation_(documentation),
-      meta_data_(meta_data),
       extensions_(extensions),
       name_(name),
       generation_type_(generation_type),
@@ -104,7 +82,6 @@ void type::to_stream(std::ostream& s) const {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::type\"" << ", "
       << "\"documentation\": " << "\"" << tidy_up_string(documentation_) << "\"" << ", "
-      << "\"meta_data\": " << meta_data_ << ", "
       << "\"extensions\": " << extensions_ << ", "
       << "\"name\": " << name_ << ", "
       << "\"generation_type\": " << generation_type_ << ", "
@@ -116,7 +93,6 @@ void type::to_stream(std::ostream& s) const {
 void type::swap(type& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
-    swap(meta_data_, other.meta_data_);
     swap(extensions_, other.extensions_);
     swap(name_, other.name_);
     swap(generation_type_, other.generation_type_);
@@ -126,7 +102,6 @@ void type::swap(type& other) noexcept {
 
 bool type::compare(const type& rhs) const {
     return documentation_ == rhs.documentation_ &&
-        meta_data_ == rhs.meta_data_ &&
         extensions_ == rhs.extensions_ &&
         name_ == rhs.name_ &&
         generation_type_ == rhs.generation_type_ &&
@@ -150,22 +125,6 @@ void type::documentation(const std::string&& v) {
     documentation_ = std::move(v);
 }
 
-const boost::property_tree::ptree& type::meta_data() const {
-    return meta_data_;
-}
-
-boost::property_tree::ptree& type::meta_data() {
-    return meta_data_;
-}
-
-void type::meta_data(const boost::property_tree::ptree& v) {
-    meta_data_ = v;
-}
-
-void type::meta_data(const boost::property_tree::ptree&& v) {
-    meta_data_ = std::move(v);
-}
-
 const dogen::dynamic::object& type::extensions() const {
     return extensions_;
 }
