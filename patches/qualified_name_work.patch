diff --git a/projects/yarn/include/dogen/yarn/types/workflow.hpp b/projects/yarn/include/dogen/yarn/types/workflow.hpp
index be6455e..ec0c686 100644
--- a/projects/yarn/include/dogen/yarn/types/workflow.hpp
+++ b/projects/yarn/include/dogen/yarn/types/workflow.hpp
@@ -29,6 +29,7 @@
 #include "dogen/dynamic/types/repository.hpp"
 #include "dogen/yarn/types/input_descriptor.hpp"
 #include "dogen/yarn/types/intermediate_model.hpp"
+#include "dogen/yarn/types/model.hpp"
 
 namespace dogen {
 namespace yarn {
@@ -48,8 +49,15 @@ private:
     intermediate_model assemble_intermediate_models_activity(
         const std::list<intermediate_model>& m) const;
 
+    /**
+     * @brief Transforms the intermediate model to the final
+     * representation.
+     */
+    model transform_intermediate_model_activity(
+        const intermediate_model& m) const;
+
 public:
-    intermediate_model execute(const dynamic::repository& rp,
+    model execute(const dynamic::repository& rp,
         const std::list<input_descriptor>& id) const;
 };
 
diff --git a/projects/yarn/src/types/workflow.cpp b/projects/yarn/src/types/workflow.cpp
index d9718d1..7048087 100644
--- a/projects/yarn/src/types/workflow.cpp
+++ b/projects/yarn/src/types/workflow.cpp
@@ -20,6 +20,7 @@
  */
 #include "dogen/yarn/types/frontend_workflow.hpp"
 #include "dogen/yarn/types/assembler.hpp"
+#include "dogen/yarn/types/transformer.hpp"
 #include "dogen/yarn/types/workflow.hpp"
 
 namespace dogen {
@@ -38,10 +39,17 @@ intermediate_model workflow::assemble_intermediate_models_activity(
     return a.assemble(m);
 }
 
-intermediate_model workflow::execute(const dynamic::repository& rp,
+model workflow::transform_intermediate_model_activity(
+    const intermediate_model& m) const {
+    transformer t;
+    return t.transform(m);
+}
+
+model workflow::execute(const dynamic::repository& rp,
     const std::list<input_descriptor>& id) const {
-    const auto pm(obtain_intermediate_models_activity(rp, id));
-    return assemble_intermediate_models_activity(pm);
+    const auto im(obtain_intermediate_models_activity(rp, id));
+    const auto m(assemble_intermediate_models_activity(im));
+    return transform_intermediate_model_activity(m);
 }
 
 } }
