diff --git a/diagrams/sml.dia b/diagrams/sml.dia
index c13f648..bbedd5a 100644
--- a/diagrams/sml.dia
+++ b/diagrams/sml.dia
@@ -65,19 +65,19 @@
   <dia:layer name="Background" visible="true" active="true">
     <dia:object type="UML - Class" version="0" id="O0">
       <dia:attribute name="obj_pos">
-        <dia:point val="24,60"/>
+        <dia:point val="24,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="23.95,59.95;46.495,72.45"/>
+        <dia:rectangle val="23.95,51.95;46.495,61.25"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="24,60"/>
+        <dia:point val="24,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="22.445"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="12.4"/>
+        <dia:real val="9.2000000000000011"/>
       </dia:attribute>
       <dia:attribute name="name">
         <dia:string>#model#</dia:string>
@@ -197,98 +197,6 @@ name folders in the file-system.
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#pods#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,pod&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pods contained in the model.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#primitives#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,primitive&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Primitives contained in the model.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#enumerations#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,enumeration&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Enumerations contained in the model.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#exceptions#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,value_object&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Exceptions contained in the model.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
             <dia:string>#external_module_path#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
@@ -389,16 +297,16 @@ Leaves are types concrete types which have a parent.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#services#</dia:string>
+            <dia:string>#modules#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,service&gt;#</dia:string>
+            <dia:string>#std::unordered_map&lt;qname,module&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Services contained in the model.#</dia:string>
+            <dia:string>#Modules contained in the model.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -412,16 +320,16 @@ Leaves are types concrete types which have a parent.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#modules#</dia:string>
+            <dia:string>#concepts#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,module&gt;#</dia:string>
+            <dia:string>#std::unordered_map&lt;qname,concept&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Modules contained in the model.#</dia:string>
+            <dia:string>#All the concepts available in this model.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -435,16 +343,16 @@ Leaves are types concrete types which have a parent.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#concepts#</dia:string>
+            <dia:string>#types#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,concept&gt;#</dia:string>
+            <dia:string>#std::unordered_map&lt;qname,boost::shared_ptr&lt;type&gt;&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#All the concepts available in this model.#</dia:string>
+            <dia:string>#All types contained in this model.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -465,13 +373,13 @@ Leaves are types concrete types which have a parent.#</dia:string>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O1">
       <dia:attribute name="obj_pos">
-        <dia:point val="-65,28"/>
+        <dia:point val="-61,29"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-65.05,27.95;-47.125,34.05"/>
+        <dia:rectangle val="-61.05,28.95;-43.125,35.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-65,28"/>
+        <dia:point val="-61,29"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="17.824999999999999"/>
@@ -693,33 +601,28 @@ This is only needed because we don't have a type base class.#</dia:string>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O2">
       <dia:attribute name="obj_pos">
-        <dia:point val="-38,29"/>
+        <dia:point val="-48,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-38.05,28.95;-5.11,49.45"/>
+        <dia:rectangle val="-48.05,71.95;-15.11,78.85"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-38,29"/>
+        <dia:point val="-48,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="32.839999999999996"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="20.400000000000006"/>
+        <dia:real val="6.8000000000000007"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#pod#</dia:string>
+        <dia:string>#property#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>#entity, aggregate root#</dia:string>
+        <dia:string>##</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Represents a plain C++ object with basic associated behaviours.
-
-The name pod is misleading because its actually not used in the strict sense of POD as defined here:
-
- &lt;a href="http://en.wikipedia.org/wiki/Plain_old_data_structure"&gt;Plain old data structure&lt;/a&gt;. 
-#</dia:string>
+        <dia:string>#Memberof a pod that provides a mechanism to read and write values of a type.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -740,7 +643,7 @@ The name pod is misleading because its actually not used in the strict sense of
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
+        <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="wrap_after_char">
         <dia:int val="40"/>
@@ -805,15 +708,15 @@ The name pod is misleading because its actually not used in the strict sense of
             <dia:string>#name#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#qname#</dia:string>
+            <dia:string>#std::string#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Qualified name for the type.
+            <dia:string>#Name of the property.
 
-#DOGEN IDENTITY_ATTRIBUTE=true#</dia:string>
+Must only contain characters that can be used for identifiers in the target backend.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -827,16 +730,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#properties#</dia:string>
+            <dia:string>#type_name#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::list&lt;property&gt;#</dia:string>
+            <dia:string>#nested_qname#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#All the properties this pod owns.#</dia:string>
+            <dia:string>#Type name for the property.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -850,16 +753,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#parent_name#</dia:string>
+            <dia:string>#default_value#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>#std::string#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Qualified name for the pod's parent, if the pod has one.#</dia:string>
+            <dia:string>#Default value of the property.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -873,16 +776,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#original_parent_name#</dia:string>
+            <dia:string>#documentation#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>#std::string#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Qualified name for the root of the inheritance hierarchy, if the pod is part of one.#</dia:string>
+            <dia:string>#Doxygen documentation for the type.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -896,16 +799,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#leaves#</dia:string>
+            <dia:string>#is_identity_attribute#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::list&lt;qname&gt;#</dia:string>
+            <dia:string>#bool#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#All concrete types which are indirectly or directly derived from this type.#</dia:string>
+            <dia:string>#If true, the attribute is part of the object's identity attribute set.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -919,16 +822,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#generation_type#</dia:string>
+            <dia:string>#implementation_specific_parameters#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#generation_types#</dia:string>
+            <dia:string>#std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#What to do with this pod in terms of code generation#</dia:string>
+            <dia:string>#Parameters associated with the property which are opaque to SML.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -940,18 +843,129 @@ The name pod is misleading because its actually not used in the strict sense of
             <dia:boolean val="false"/>
           </dia:attribute>
         </dia:composite>
+      </dia:attribute>
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Class" version="0" id="O3">
+      <dia:attribute name="obj_pos">
+        <dia:point val="-63,6"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-63.05,5.95;-56.675,18.45"/>
+      </dia:attribute>
+      <dia:attribute name="elem_corner">
+        <dia:point val="-63,6"/>
+      </dia:attribute>
+      <dia:attribute name="elem_width">
+        <dia:real val="6.2750000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="elem_height">
+        <dia:real val="12.4"/>
+      </dia:attribute>
+      <dia:attribute name="name">
+        <dia:string>#meta_types#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="stereotype">
+        <dia:string>#enumeration#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="comment">
+        <dia:string>#Type of type.#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="abstract">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_attributes">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_operations">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="visible_attributes">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_comments">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_after_char">
+        <dia:int val="40"/>
+      </dia:attribute>
+      <dia:attribute name="comment_line_length">
+        <dia:int val="17"/>
+      </dia:attribute>
+      <dia:attribute name="comment_tagging">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="line_width">
+        <dia:real val="0.10000000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="line_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="fill_color">
+        <dia:color val="#ffffff"/>
+      </dia:attribute>
+      <dia:attribute name="text_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_parent#</dia:string>
+            <dia:string>#enumeration#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#True if this class is the parent of one or more classes, false otherwise.#</dia:string>
+            <dia:string>#Type is an enumeration#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -965,16 +979,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#category_type#</dia:string>
+            <dia:string>#pod#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#category_types#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Category of this type - whether its system or user defined.#</dia:string>
+            <dia:string>#Type is a pod#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -988,16 +1002,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#pod_type#</dia:string>
+            <dia:string>#primitive#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#pod_types#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#What kind of pod is this.#</dia:string>
+            <dia:string>#Type is a primitive#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1011,39 +1025,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#documentation#</dia:string>
+            <dia:string>#exception#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Doxygen documentation for the type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#number_of_type_arguments#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#unsigned int#</dia:string>
-          </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#How many type arguments does this type have#</dia:string>
+            <dia:string>#Type is an exception#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1057,41 +1048,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#implementation_specific_parameters#</dia:string>
+            <dia:string>#string_table#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Parameters associated with the pod which are opaque to SML.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_visitable#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, a visitor is to be generated for this type and its descendants.
-
-Only applicable if is_parent is true.#</dia:string>
+            <dia:string>#Type is a string table.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1105,63 +1071,17 @@ Only applicable if is_parent is true.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_immutable#</dia:string>
+            <dia:string>#module#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#If true, do not generate setters for the type's properties.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_versioned#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, add a version property to the type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_keyed#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#If true, add key support for the type.#</dia:string>
-          </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
           </dia:attribute>
@@ -1174,19 +1094,16 @@ Only applicable if is_parent is true.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_comparable#</dia:string>
+            <dia:string>#service#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, generates the less than operator.
-
-A type is only comparable if all of its properties are primitives or strings,
-or other comparable model types.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1200,16 +1117,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_fluent#</dia:string>
+            <dia:string>#entity#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, generate fluent setters.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1223,16 +1140,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_aggregate_root#</dia:string>
+            <dia:string>#value#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, this pod is a root of an aggregate.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1246,16 +1163,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#versioned_key#</dia:string>
+            <dia:string>#factory#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If the pod is a versioned keyed entity, its versioned key.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1269,16 +1186,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#unversioned_key#</dia:string>
+            <dia:string>#repository#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If the pod is an unversioned keyed entity, its unversioned key.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1292,16 +1209,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#modeled_concepts#</dia:string>
+            <dia:string>#concept#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::list&lt;qname&gt;#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#List of concepts this pod models.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1320,30 +1237,101 @@ or other comparable model types.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O3">
+    <dia:object type="UML - Association" version="2" id="O4">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="-52.0875,29"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-59.9125,18.35;-51.3375,29.8"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="-52.0875,29"/>
+        <dia:point val="-52.0875,24"/>
+        <dia:point val="-59.8625,24"/>
+        <dia:point val="-59.8625,18.4"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O1" connection="1"/>
+        <dia:connection handle="1" to="O3" connection="6"/>
+      </dia:connections>
+    </dia:object>
+    <dia:object type="UML - Class" version="0" id="O5">
       <dia:attribute name="obj_pos">
-        <dia:point val="-80,60"/>
+        <dia:point val="85.872,29.5203"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-80.05,59.95;-47.11,66.85"/>
+        <dia:rectangle val="85.822,29.4703;92.8595,32.5703"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-80,60"/>
+        <dia:point val="85.872,29.5203"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="32.839999999999996"/>
+        <dia:real val="6.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="6.8000000000000007"/>
+        <dia:real val="3"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#property#</dia:string>
+        <dia:string>#merging_error#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
+        <dia:string>#exception#</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Memberof a pod that provides a mechanism to read and write values of a type.#</dia:string>
+        <dia:string>#A fatal error has occurred while merging.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -1364,7 +1352,7 @@ or other comparable model types.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="wrap_operations">
-        <dia:boolean val="false"/>
+        <dia:boolean val="true"/>
       </dia:attribute>
       <dia:attribute name="wrap_after_char">
         <dia:int val="40"/>
@@ -1391,19 +1379,19 @@ or other comparable model types.#</dia:string>
         <dia:font family="monospace" style="0" name="Courier"/>
       </dia:attribute>
       <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
       </dia:attribute>
       <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
       </dia:attribute>
       <dia:attribute name="classname_font">
         <dia:font family="sans" style="80" name="Helvetica-Bold"/>
       </dia:attribute>
       <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
       </dia:attribute>
       <dia:attribute name="comment_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
       </dia:attribute>
       <dia:attribute name="normal_font_height">
         <dia:real val="0.80000000000000004"/>
@@ -1423,320 +1411,37 @@ or other comparable model types.#</dia:string>
       <dia:attribute name="comment_font_height">
         <dia:real val="0.69999999999999996"/>
       </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#name#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Name of the property.
-
-Must only contain characters that can be used for identifiers in the target backend.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#type_name#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#nested_qname#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type name for the property.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#default_value#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Default value of the property.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#documentation#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Doxygen documentation for the type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_identity_attribute#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#If true, the attribute is part of the object's identity attribute set.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#implementation_specific_parameters#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Parameters associated with the property which are opaque to SML.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
+      <dia:attribute name="attributes"/>
       <dia:attribute name="operations"/>
       <dia:attribute name="template">
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O4">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-38,49.4"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-47.21,48.65;-37.25,60.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-38,49.4"/>
-        <dia:point val="-38,54"/>
-        <dia:point val="-47.16,54"/>
-        <dia:point val="-47.16,60"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="5"/>
-        <dia:connection handle="1" to="O3" connection="2"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O5">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="2"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-5.16,49.4"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-5.21,49.35;24.75,60.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-5.16,49.4"/>
-        <dia:point val="-5.16,54"/>
-        <dia:point val="24,54"/>
-        <dia:point val="24,60"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="7"/>
-        <dia:connection handle="1" to="O0" connection="0"/>
-      </dia:connections>
-    </dia:object>
     <dia:object type="UML - Class" version="0" id="O6">
       <dia:attribute name="obj_pos">
-        <dia:point val="-75.9286,3.71429"/>
+        <dia:point val="-16,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-75.9786,3.66429;-69.6036,16.1643"/>
+        <dia:rectangle val="-16.05,51.95;-2.36,56.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-75.9286,3.71429"/>
+        <dia:point val="-16,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="6.2750000000000004"/>
+        <dia:real val="13.59"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="12.4"/>
+        <dia:real val="4.4000000000000004"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#meta_types#</dia:string>
+        <dia:string>#nested_qname#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
+        <dia:string>##</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Type of type.#</dia:string>
+        <dia:string>#A composite qname.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -1783,1128 +1488,52 @@ Must only contain characters that can be used for identifiers in the target back
       <dia:attribute name="normal_font">
         <dia:font family="monospace" style="0" name="Courier"/>
       </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#enumeration#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is an enumeration#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#primitive#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a primitive#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#exception#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is an exception#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#string_table#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a string table.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#module#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#service#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#entity#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#value#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#factory#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#repository#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#concept#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O7">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-65,28"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-72.8411,16.0643;-64.25,28.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-65,28"/>
-        <dia:point val="-65,23"/>
-        <dia:point val="-72.7911,23"/>
-        <dia:point val="-72.7911,16.1143"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O1" connection="0"/>
-        <dia:connection handle="1" to="O6" connection="6"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O8">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-35,11"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-35.05,10.95;-27.575,16.25"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-35,11"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="7.375"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="5.2000000000000011"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#category_types#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#Categories of types.
-
-Broadly speaking there are two categories of types: user defined
-types and system defined types. However, as we need to distinguish
-between the system defined types, we have created separate
-categories for them.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#user_defined#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type was created by the user#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#versioned_key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#System defined versioned key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#unversioned_key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#System defined unversioned key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O9">
-      <dia:attribute name="obj_pos">
-        <dia:point val="85.872,29.5203"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="85.822,29.4703;92.8595,32.5703"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="85.872,29.5203"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="6.9375"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#merging_error#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#exception#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#A fatal error has occurred while merging.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes"/>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O10">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-21.58,29"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-31.3625,16.15;-20.83,29.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-21.58,29"/>
-        <dia:point val="-21.58,23"/>
-        <dia:point val="-31.3125,23"/>
-        <dia:point val="-31.3125,16.2"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="1"/>
-        <dia:connection handle="1" to="O8" connection="6"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O11">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-76,45"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-76.05,44.95;-62.36,49.45"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-76,45"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="13.59"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="4.4000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#nested_qname#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#A composite qname.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#type#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#qname#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Top-level, containing type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#children#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::list&lt;nested_qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Child types.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string># If true, the top-level type is a pointer. If false, its a stack variable.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O12">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-20,11"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-20.05,10.95;-10.98,18.65"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-20,11"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="8.9700000000000006"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="7.6000000000000005"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#pod_types#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#Types of pods.
-
-We need to classify pods with regards to distinguishing properties
-which make code generation different.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#sequence_container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a sequence container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#associative_container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is an associative container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#smart_pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a smart pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="0" name="Helvetica"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="0" name="Helvetica"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#entity#</dia:string>
+            <dia:string>#type#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>##</dia:string>
+            <dia:string>#qname#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Pod is a domain entity#</dia:string>
+            <dia:string>#Top-level, containing type.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -2918,16 +1547,16 @@ which make code generation different.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#value#</dia:string>
+            <dia:string>#children#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>##</dia:string>
+            <dia:string>#std::list&lt;nested_qname&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Pod is a domain value#</dia:string>
+            <dia:string>#Child types.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -2941,16 +1570,16 @@ which make code generation different.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#service#</dia:string>
+            <dia:string>#is_pointer#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>##</dia:string>
+            <dia:string>#bool#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Pod is a service#</dia:string>
+            <dia:string># If true, the top-level type is a pointer. If false, its a stack variable.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -2969,86 +1598,15 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O13">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-5.16,29"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-15.565,18.55;-4.41,29.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-5.16,29"/>
-        <dia:point val="-5.16,23"/>
-        <dia:point val="-15.515,23"/>
-        <dia:point val="-15.515,18.6"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="2"/>
-        <dia:connection handle="1" to="O12" connection="6"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O14">
+    <dia:object type="UML - Class" version="0" id="O7">
       <dia:attribute name="obj_pos">
-        <dia:point val="57,84"/>
+        <dia:point val="55,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="56.95,83.95;74.875,88.45"/>
+        <dia:rectangle val="54.95,71.95;72.875,76.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="57,84"/>
+        <dia:point val="55,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="17.824999999999999"/>
@@ -3220,7 +1778,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O15">
+    <dia:object type="UML - Association" version="2" id="O8">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -3258,19 +1816,19 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="46.445,72.4"/>
+        <dia:point val="46.445,61.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="45.695,71.65;66.1125,84.8"/>
+        <dia:rectangle val="45.695,60.45;64.1125,72.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="46.445,72.4"/>
-        <dia:point val="46.445,79"/>
-        <dia:point val="65.9125,79"/>
-        <dia:point val="65.9125,84"/>
+        <dia:point val="46.445,61.2"/>
+        <dia:point val="46.445,66"/>
+        <dia:point val="63.9125,66"/>
+        <dia:point val="63.9125,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -3288,10 +1846,10 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="7"/>
-        <dia:connection handle="1" to="O14" connection="1"/>
+        <dia:connection handle="1" to="O7" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O16">
+    <dia:object type="UML - Association" version="2" id="O9">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -3329,19 +1887,19 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-80,60"/>
+        <dia:point val="-15.16,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-80.75,49.35;-69.005,60.8"/>
+        <dia:rectangle val="-15.91,56.35;-9.005,72.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-80,60"/>
-        <dia:point val="-80,54"/>
-        <dia:point val="-69.205,54"/>
-        <dia:point val="-69.205,49.4"/>
+        <dia:point val="-15.16,72"/>
+        <dia:point val="-15.16,66"/>
+        <dia:point val="-9.205,66"/>
+        <dia:point val="-9.205,56.4"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -3358,19 +1916,19 @@ which make code generation different.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O3" connection="0"/>
-        <dia:connection handle="1" to="O11" connection="6"/>
+        <dia:connection handle="0" to="O2" connection="2"/>
+        <dia:connection handle="1" to="O6" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O17">
+    <dia:object type="UML - Class" version="0" id="O10">
       <dia:attribute name="obj_pos">
-        <dia:point val="-32,60"/>
+        <dia:point val="-95,35"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-32.05,59.95;-23.615,65.25"/>
+        <dia:rectangle val="-95.05,34.95;-86.615,40.25"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-32,60"/>
+        <dia:point val="-95,35"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="8.3349999999999991"/>
@@ -3542,7 +2100,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O18">
+    <dia:object type="UML - Class" version="0" id="O11">
       <dia:attribute name="obj_pos">
         <dia:point val="11,-6"/>
       </dia:attribute>
@@ -3878,7 +2436,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O19">
+    <dia:object type="UML - Class" version="0" id="O12">
       <dia:attribute name="obj_pos">
         <dia:point val="47,29"/>
       </dia:attribute>
@@ -4349,7 +2907,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O20">
+    <dia:object type="UML - Association" version="2" id="O13">
       <dia:attribute name="name">
         <dia:string>#&lt; merges one or more#</dia:string>
       </dia:attribute>
@@ -4387,18 +2945,18 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="46.445,60"/>
+        <dia:point val="46.445,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="46.395,39.65;61.86,60.8"/>
+        <dia:rectangle val="46.395,39.65;61.86,52.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="46.445,60"/>
-        <dia:point val="46.445,54"/>
-        <dia:point val="61.11,54"/>
+        <dia:point val="46.445,52"/>
+        <dia:point val="46.445,47"/>
+        <dia:point val="61.11,47"/>
         <dia:point val="61.11,40.4"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
@@ -4417,10 +2975,10 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="2"/>
-        <dia:connection handle="1" to="O19" connection="6"/>
+        <dia:connection handle="1" to="O12" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O21">
+    <dia:object type="UML - Class" version="0" id="O14">
       <dia:attribute name="obj_pos">
         <dia:point val="71,-6"/>
       </dia:attribute>
@@ -4691,7 +3249,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O22">
+    <dia:object type="UML - Class" version="0" id="O15">
       <dia:attribute name="obj_pos">
         <dia:point val="47,-6"/>
       </dia:attribute>
@@ -4880,7 +3438,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O23">
+    <dia:object type="UML - Note" version="0" id="O16">
       <dia:attribute name="obj_pos">
         <dia:point val="46,16"/>
       </dia:attribute>
@@ -4932,7 +3490,7 @@ and all of the supported types within those models.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O24">
+    <dia:object type="UML - Message" version="0" id="O17">
       <dia:attribute name="obj_pos">
         <dia:point val="56.2675,16"/>
       </dia:attribute>
@@ -4962,22 +3520,22 @@ and all of the supported types within those models.#</dia:string>
         <dia:point val="45.4763,13.9999"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O23" connection="1"/>
-        <dia:connection handle="1" to="O29" connection="2"/>
+        <dia:connection handle="0" to="O16" connection="1"/>
+        <dia:connection handle="1" to="O22" connection="2"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O25">
+    <dia:object type="UML - Message" version="0" id="O18">
       <dia:attribute name="obj_pos">
-        <dia:point val="84.385,46"/>
+        <dia:point val="81.385,49"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="74.9688,40.0326;84.4537,46.0687"/>
+        <dia:rectangle val="74.8658,40.1263;81.4548,49.0698"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="conn_endpoints">
-        <dia:point val="84.385,46"/>
+        <dia:point val="81.385,49"/>
         <dia:point val="75.22,40.4"/>
       </dia:attribute>
       <dia:attribute name="text_colour">
@@ -4993,25 +3551,25 @@ and all of the supported types within those models.#</dia:string>
         <dia:enum val="0"/>
       </dia:attribute>
       <dia:attribute name="text_pos">
-        <dia:point val="79.8025,43.6999"/>
+        <dia:point val="78.3025,45.1999"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O26" connection="1"/>
-        <dia:connection handle="1" to="O19" connection="7"/>
+        <dia:connection handle="0" to="O19" connection="1"/>
+        <dia:connection handle="1" to="O12" connection="7"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O26">
+    <dia:object type="UML - Note" version="0" id="O19">
       <dia:attribute name="obj_pos">
-        <dia:point val="72,46"/>
+        <dia:point val="69,49"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="71.95,45.95;96.82,50.15"/>
+        <dia:rectangle val="68.95,48.95;93.82,53.15"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="72,46"/>
+        <dia:point val="69,49"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="24.77"/>
@@ -5043,7 +3601,7 @@ all types in the combined model.#</dia:string>
             <dia:real val="0.80000000000000004"/>
           </dia:attribute>
           <dia:attribute name="pos">
-            <dia:point val="72.35,47.245"/>
+            <dia:point val="69.35,50.245"/>
           </dia:attribute>
           <dia:attribute name="color">
             <dia:color val="#000000"/>
@@ -5054,7 +3612,7 @@ all types in the combined model.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O27">
+    <dia:object type="UML - Association" version="2" id="O20">
       <dia:attribute name="name">
         <dia:string>#throws on failure &gt;#</dia:string>
       </dia:attribute>
@@ -5121,11 +3679,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O19" connection="2"/>
-        <dia:connection handle="1" to="O9" connection="1"/>
+        <dia:connection handle="0" to="O12" connection="2"/>
+        <dia:connection handle="1" to="O5" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O28">
+    <dia:object type="UML - Class" version="0" id="O21">
       <dia:attribute name="obj_pos">
         <dia:point val="-16,-6"/>
       </dia:attribute>
@@ -5380,7 +3938,7 @@ all types in the combined model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O29">
+    <dia:object type="UML - Class" version="0" id="O22">
       <dia:attribute name="obj_pos">
         <dia:point val="3,11"/>
       </dia:attribute>
@@ -5747,7 +4305,7 @@ all types in the combined model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O30">
+    <dia:object type="UML - Association" version="2" id="O23">
       <dia:attribute name="name">
         <dia:string>#merges models using &gt;#</dia:string>
       </dia:attribute>
@@ -5814,11 +4372,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="7"/>
-        <dia:connection handle="1" to="O19" connection="30"/>
+        <dia:connection handle="0" to="O22" connection="7"/>
+        <dia:connection handle="1" to="O12" connection="30"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O31">
+    <dia:object type="UML - Association" version="2" id="O24">
       <dia:attribute name="name">
         <dia:string>#injects system types for &gt;#</dia:string>
       </dia:attribute>
@@ -5885,11 +4443,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="0"/>
-        <dia:connection handle="1" to="O28" connection="6"/>
+        <dia:connection handle="0" to="O22" connection="0"/>
+        <dia:connection handle="1" to="O21" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O32">
+    <dia:object type="UML - Association" version="2" id="O25">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -5927,19 +4485,19 @@ all types in the combined model.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-69.205,45"/>
+        <dia:point val="-9.205,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-69.955,33.95;-55.8875,45.8"/>
+        <dia:rectangle val="-43.225,34.95;-8.455,52.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-69.205,45"/>
-        <dia:point val="-69.205,40"/>
-        <dia:point val="-56.0875,40"/>
-        <dia:point val="-56.0875,34"/>
+        <dia:point val="-9.205,52"/>
+        <dia:point val="-9.205,39"/>
+        <dia:point val="-43.175,39"/>
+        <dia:point val="-43.175,35"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -5956,11 +4514,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O11" connection="1"/>
-        <dia:connection handle="1" to="O1" connection="6"/>
+        <dia:connection handle="0" to="O6" connection="1"/>
+        <dia:connection handle="1" to="O1" connection="7"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O33">
+    <dia:object type="UML - Note" version="0" id="O26">
       <dia:attribute name="obj_pos">
         <dia:point val="-79,-11"/>
       </dia:attribute>
@@ -6018,7 +4576,7 @@ but with a focus only on data structures and domain driven constructs.
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O34">
+    <dia:object type="UML - Class" version="0" id="O27">
       <dia:attribute name="obj_pos">
         <dia:point val="-32,-6"/>
       </dia:attribute>
@@ -6128,7 +4686,7 @@ but with a focus only on data structures and domain driven constructs.
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O35">
+    <dia:object type="UML - Association" version="2" id="O28">
       <dia:attribute name="name">
         <dia:string>#&lt; throws on failure#</dia:string>
       </dia:attribute>
@@ -6195,11 +4753,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O28" connection="1"/>
-        <dia:connection handle="1" to="O34" connection="1"/>
+        <dia:connection handle="0" to="O21" connection="1"/>
+        <dia:connection handle="1" to="O27" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O36">
+    <dia:object type="UML - Association" version="2" id="O29">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6237,19 +4795,19 @@ but with a focus only on data structures and domain driven constructs.
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-21.58,49.4"/>
+        <dia:point val="-99.205,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-27.8825,48.65;-20.83,60.8"/>
+        <dia:rectangle val="-99.955,40.15;-90.6325,52.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-21.58,49.4"/>
-        <dia:point val="-21.58,54"/>
-        <dia:point val="-27.8325,54"/>
-        <dia:point val="-27.8325,60"/>
+        <dia:point val="-99.205,52"/>
+        <dia:point val="-99.205,45"/>
+        <dia:point val="-90.8325,45"/>
+        <dia:point val="-90.8325,40.2"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6266,11 +4824,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O2" connection="6"/>
-        <dia:connection handle="1" to="O17" connection="1"/>
+        <dia:connection handle="0" to="O55" connection="1"/>
+        <dia:connection handle="1" to="O10" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O37">
+    <dia:object type="UML - Association" version="2" id="O30">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6308,19 +4866,19 @@ but with a focus only on data structures and domain driven constructs.
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-38,29"/>
+        <dia:point val="-46.44,51.9497"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-47.225,22.25;-37.25,29.8"/>
+        <dia:rectangle val="-61.05,34.95;-45.69,52.7497"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-38,29"/>
-        <dia:point val="-38,23"/>
-        <dia:point val="-47.175,23"/>
-        <dia:point val="-47.175,28"/>
+        <dia:point val="-46.44,51.9497"/>
+        <dia:point val="-46.44,45"/>
+        <dia:point val="-61,45"/>
+        <dia:point val="-61,35"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6337,11 +4895,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O2" connection="0"/>
-        <dia:connection handle="1" to="O1" connection="2"/>
+        <dia:connection handle="0" to="O52" connection="10"/>
+        <dia:connection handle="1" to="O1" connection="5"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O38">
+    <dia:object type="UML - Association" version="2" id="O31">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6408,11 +4966,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O18" connection="6"/>
+        <dia:connection handle="0" to="O22" connection="2"/>
+        <dia:connection handle="1" to="O11" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O39">
+    <dia:object type="UML - Association" version="2" id="O32">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6479,11 +5037,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O22" connection="6"/>
+        <dia:connection handle="0" to="O22" connection="2"/>
+        <dia:connection handle="1" to="O15" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O40">
+    <dia:object type="UML - Association" version="2" id="O33">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6550,19 +5108,19 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O21" connection="6"/>
+        <dia:connection handle="0" to="O22" connection="2"/>
+        <dia:connection handle="1" to="O14" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O41">
+    <dia:object type="UML - Class" version="0" id="O34">
       <dia:attribute name="obj_pos">
-        <dia:point val="79,136"/>
+        <dia:point val="77,125"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="78.95,135.95;85.6725,141.25"/>
+        <dia:rectangle val="76.95,124.95;83.6725,130.25"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="79,136"/>
+        <dia:point val="77,125"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="6.6225000000000005"/>
@@ -6734,15 +5292,15 @@ but with a focus only on data structures and domain driven constructs.
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O42">
+    <dia:object type="UML - Class" version="0" id="O35">
       <dia:attribute name="obj_pos">
-        <dia:point val="3,84"/>
+        <dia:point val="3,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="2.95,83.95;13.56,87.65"/>
+        <dia:rectangle val="2.95,71.95;13.56,75.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="3,84"/>
+        <dia:point val="3,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -6870,15 +5428,15 @@ Aggregates a group of logically related types into a unit.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O43">
+    <dia:object type="UML - Class" version="0" id="O36">
       <dia:attribute name="obj_pos">
-        <dia:point val="122,122"/>
+        <dia:point val="119,111"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="121.95,121.95;137.95,125.65"/>
+        <dia:rectangle val="118.95,110.95;134.95,114.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="122,122"/>
+        <dia:point val="119,111"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="15.9"/>
@@ -7038,15 +5596,15 @@ requirements of the underlying typed element.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O44">
+    <dia:object type="UML - Class" version="0" id="O37">
       <dia:attribute name="obj_pos">
-        <dia:point val="67,122"/>
+        <dia:point val="67,111"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="66.95,121.95;77.56,125.65"/>
+        <dia:rectangle val="66.95,110.95;77.56,114.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="67,122"/>
+        <dia:point val="67,111"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -7176,21 +5734,21 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O45">
+    <dia:object type="UML - Generalization" version="1" id="O38">
       <dia:attribute name="obj_pos">
-        <dia:point val="88.9125,110.4"/>
+        <dia:point val="85.9125,99.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="72.205,110.35;89.7625,122.05"/>
+        <dia:rectangle val="72.205,99.35;86.7625,111.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="88.9125,110.4"/>
-        <dia:point val="88.9125,117"/>
-        <dia:point val="72.255,117"/>
-        <dia:point val="72.255,122"/>
+        <dia:point val="85.9125,99.4"/>
+        <dia:point val="85.9125,106"/>
+        <dia:point val="72.255,106"/>
+        <dia:point val="72.255,111"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7213,11 +5771,11 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O83" connection="6"/>
-        <dia:connection handle="1" to="O44" connection="1"/>
+        <dia:connection handle="0" to="O76" connection="6"/>
+        <dia:connection handle="1" to="O37" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O46">
+    <dia:object type="UML - Association" version="2" id="O39">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -7255,19 +5813,19 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="72.255,125.6"/>
+        <dia:point val="72.255,114.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="71.505,124.85;82.5113,136.8"/>
+        <dia:rectangle val="71.505,113.85;80.5113,125.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="72.255,125.6"/>
-        <dia:point val="72.255,131"/>
-        <dia:point val="82.3113,131"/>
-        <dia:point val="82.3113,136"/>
+        <dia:point val="72.255,114.6"/>
+        <dia:point val="72.255,120"/>
+        <dia:point val="80.3113,120"/>
+        <dia:point val="80.3113,125"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7284,19 +5842,19 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O44" connection="6"/>
-        <dia:connection handle="1" to="O41" connection="1"/>
+        <dia:connection handle="0" to="O37" connection="6"/>
+        <dia:connection handle="1" to="O34" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O47">
+    <dia:object type="UML - Class" version="0" id="O40">
       <dia:attribute name="obj_pos">
-        <dia:point val="87,122"/>
+        <dia:point val="85,111"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="86.95,121.95;97.56,125.05"/>
+        <dia:rectangle val="84.95,110.95;95.56,114.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="87,122"/>
+        <dia:point val="85,111"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -7398,21 +5956,21 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O48">
+    <dia:object type="UML - Generalization" version="1" id="O41">
       <dia:attribute name="obj_pos">
-        <dia:point val="88.9125,110.4"/>
+        <dia:point val="85.9125,99.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="88.0625,110.35;92.305,122.05"/>
+        <dia:rectangle val="85.0625,99.35;90.305,111.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="88.9125,110.4"/>
-        <dia:point val="88.9125,117"/>
-        <dia:point val="92.255,117"/>
-        <dia:point val="92.255,122"/>
+        <dia:point val="85.9125,99.4"/>
+        <dia:point val="85.9125,106"/>
+        <dia:point val="90.255,106"/>
+        <dia:point val="90.255,111"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7435,19 +5993,19 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O83" connection="6"/>
-        <dia:connection handle="1" to="O47" connection="1"/>
+        <dia:connection handle="0" to="O76" connection="6"/>
+        <dia:connection handle="1" to="O40" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O49">
+    <dia:object type="UML - Class" version="0" id="O42">
       <dia:attribute name="obj_pos">
-        <dia:point val="103,122"/>
+        <dia:point val="101,111"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="102.95,121.95;113.56,125.05"/>
+        <dia:rectangle val="100.95,110.95;111.56,114.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="103,122"/>
+        <dia:point val="101,111"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -7554,21 +6112,21 @@ underlying storage (for example, a relational database).#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O50">
+    <dia:object type="UML - Generalization" version="1" id="O43">
       <dia:attribute name="obj_pos">
-        <dia:point val="88.9125,110.4"/>
+        <dia:point val="85.9125,99.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="88.0625,110.35;108.305,122.05"/>
+        <dia:rectangle val="85.0625,99.35;106.305,111.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="88.9125,110.4"/>
-        <dia:point val="88.9125,117"/>
-        <dia:point val="108.255,117"/>
-        <dia:point val="108.255,122"/>
+        <dia:point val="85.9125,99.4"/>
+        <dia:point val="85.9125,106"/>
+        <dia:point val="106.255,106"/>
+        <dia:point val="106.255,111"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7591,19 +6149,19 @@ underlying storage (for example, a relational database).#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O83" connection="6"/>
-        <dia:connection handle="1" to="O49" connection="1"/>
+        <dia:connection handle="0" to="O76" connection="6"/>
+        <dia:connection handle="1" to="O42" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O51">
+    <dia:object type="UML - Class" version="0" id="O44">
       <dia:attribute name="obj_pos">
-        <dia:point val="23,84"/>
+        <dia:point val="22,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="22.95,83.95;33.56,87.65"/>
+        <dia:rectangle val="21.95,71.95;32.56,75.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="23,84"/>
+        <dia:point val="22,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -7729,19 +6287,19 @@ underlying storage (for example, a relational database).#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O52">
+    <dia:object type="UML - Message" version="0" id="O45">
       <dia:attribute name="obj_pos">
-        <dia:point val="31,31.65"/>
+        <dia:point val="6.45,29.65"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="25.4374,31.5961;31.0539,32.5749"/>
+        <dia:rectangle val="6.3977,29.5977;16.0688,30.5749"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="conn_endpoints">
-        <dia:point val="31,31.65"/>
-        <dia:point val="25.52,32.1"/>
+        <dia:point val="6.45,29.65"/>
+        <dia:point val="16,30.1"/>
       </dia:attribute>
       <dia:attribute name="text_colour">
         <dia:color val="#000000"/>
@@ -7756,25 +6314,25 @@ underlying storage (for example, a relational database).#</dia:string>
         <dia:enum val="0"/>
       </dia:attribute>
       <dia:attribute name="text_pos">
-        <dia:point val="28.26,32.3749"/>
+        <dia:point val="11.225,30.3749"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O53" connection="3"/>
-        <dia:connection handle="1" to="O55" connection="9"/>
+        <dia:connection handle="0" to="O46" connection="4"/>
+        <dia:connection handle="1" to="O48" connection="3"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O53">
+    <dia:object type="UML - Note" version="0" id="O46">
       <dia:attribute name="obj_pos">
-        <dia:point val="31,30"/>
+        <dia:point val="-6,28"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="30.95,29.95;43.5,33.35"/>
+        <dia:rectangle val="-6.05,27.95;6.5,31.35"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="31,30"/>
+        <dia:point val="-6,28"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="12.450000000000001"/>
@@ -7805,7 +6363,7 @@ all types in the merged model.#</dia:string>
             <dia:real val="0.80000000000000004"/>
           </dia:attribute>
           <dia:attribute name="pos">
-            <dia:point val="31.35,31.245"/>
+            <dia:point val="-5.65,29.245"/>
           </dia:attribute>
           <dia:attribute name="color">
             <dia:color val="#000000"/>
@@ -7816,7 +6374,7 @@ all types in the merged model.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O54">
+    <dia:object type="UML - Association" version="2" id="O47">
       <dia:attribute name="name">
         <dia:string>#resolves all types using &gt;#</dia:string>
       </dia:attribute>
@@ -7857,7 +6415,7 @@ all types in the merged model.#</dia:string>
         <dia:point val="3,18.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="2.25,17.85;15.46,29.8"/>
+        <dia:rectangle val="2.25,17.85;26.46,29.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -7865,8 +6423,8 @@ all types in the merged model.#</dia:string>
       <dia:attribute name="orth_points">
         <dia:point val="3,18.6"/>
         <dia:point val="3,24.15"/>
-        <dia:point val="15.26,24.15"/>
-        <dia:point val="15.26,29"/>
+        <dia:point val="26.26,24.15"/>
+        <dia:point val="26.26,29"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7883,19 +6441,19 @@ all types in the merged model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="5"/>
-        <dia:connection handle="1" to="O55" connection="1"/>
+        <dia:connection handle="0" to="O22" connection="5"/>
+        <dia:connection handle="1" to="O48" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O55">
+    <dia:object type="UML - Class" version="0" id="O48">
       <dia:attribute name="obj_pos">
-        <dia:point val="5,29"/>
+        <dia:point val="16,29"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="4.95,28.95;25.57,34.25"/>
+        <dia:rectangle val="15.95,28.95;36.57,34.25"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="5,29"/>
+        <dia:point val="16,29"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="20.52"/>
@@ -8142,9 +6700,9 @@ all types in the merged model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O56">
+    <dia:object type="UML - Association" version="2" id="O49">
       <dia:attribute name="name">
-        <dia:string>#resolves types in &gt;#</dia:string>
+        <dia:string>#&lt; resolves types in#</dia:string>
       </dia:attribute>
       <dia:attribute name="direction">
         <dia:enum val="1"/>
@@ -8180,19 +6738,19 @@ all types in the merged model.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="25.52,34.2"/>
+        <dia:point val="36.52,34.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="24.77,33.45;35.4225,60.8"/>
+        <dia:rectangle val="23.95,33.45;37.27,52.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="25.52,34.2"/>
-        <dia:point val="25.52,54"/>
-        <dia:point val="35.2225,54"/>
-        <dia:point val="35.2225,60"/>
+        <dia:point val="36.52,34.2"/>
+        <dia:point val="36.52,44"/>
+        <dia:point val="24,44"/>
+        <dia:point val="24,52"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -8209,19 +6767,19 @@ all types in the merged model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O55" connection="7"/>
-        <dia:connection handle="1" to="O0" connection="1"/>
+        <dia:connection handle="0" to="O48" connection="7"/>
+        <dia:connection handle="1" to="O0" connection="0"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O57">
+    <dia:object type="UML - Class" version="0" id="O50">
       <dia:attribute name="obj_pos">
-        <dia:point val="10,45"/>
+        <dia:point val="3,44"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="9.95,44.95;17.8125,48.05"/>
+        <dia:rectangle val="2.95,43.95;10.8125,47.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="10,45"/>
+        <dia:point val="3,44"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="7.7625000000000002"/>
@@ -8323,9 +6881,9 @@ all types in the merged model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O58">
+    <dia:object type="UML - Association" version="2" id="O51">
       <dia:attribute name="name">
-        <dia:string>#throws on failure &gt;#</dia:string>
+        <dia:string>#&lt; throws on failure#</dia:string>
       </dia:attribute>
       <dia:attribute name="direction">
         <dia:enum val="1"/>
@@ -8361,19 +6919,19 @@ all types in the merged model.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="5,34.2"/>
+        <dia:point val="16,34.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="4.25,33.45;14.0812,45.8"/>
+        <dia:rectangle val="6.83125,33.45;16.75,44.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="5,34.2"/>
-        <dia:point val="5,38.9531"/>
-        <dia:point val="13.8812,38.9531"/>
-        <dia:point val="13.8812,45"/>
+        <dia:point val="16,34.2"/>
+        <dia:point val="16,38.9531"/>
+        <dia:point val="6.88125,38.9531"/>
+        <dia:point val="6.88125,44"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -8390,19 +6948,19 @@ all types in the merged model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O55" connection="5"/>
-        <dia:connection handle="1" to="O57" connection="1"/>
+        <dia:connection handle="0" to="O48" connection="5"/>
+        <dia:connection handle="1" to="O50" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O59">
+    <dia:object type="UML - Class" version="0" id="O52">
       <dia:attribute name="obj_pos">
-        <dia:point val="-122,21"/>
+        <dia:point val="-49,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-122.05,20.95;-116.83,24.65"/>
+        <dia:rectangle val="-49.05,51.95;-43.83,55.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-122,21"/>
+        <dia:point val="-49,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="5.1200000000000001"/>
@@ -8530,15 +7088,15 @@ all types in the merged model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O60">
+    <dia:object type="UML - Class" version="0" id="O53">
       <dia:attribute name="obj_pos">
-        <dia:point val="-175,21"/>
+        <dia:point val="-36,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-175.05,20.95;-164.055,24.65"/>
+        <dia:rectangle val="-36.05,51.95;-25.055,55.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-175,21"/>
+        <dia:point val="-36,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.895"/>
@@ -8668,15 +7226,15 @@ for Java, etc.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O61">
+    <dia:object type="UML - Class" version="0" id="O54">
       <dia:attribute name="obj_pos">
-        <dia:point val="-160,21"/>
+        <dia:point val="-87,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-160.05,20.95;-127.11,24.65"/>
+        <dia:rectangle val="-87.05,51.95;-54.11,55.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-160,21"/>
+        <dia:point val="-87,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="32.839999999999996"/>
@@ -8802,15 +7360,15 @@ for Java, etc.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O62">
+    <dia:object type="UML - Class" version="0" id="O55">
       <dia:attribute name="obj_pos">
-        <dia:point val="-112,21"/>
+        <dia:point val="-106,52"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-112.05,20.95;-98.36,24.65"/>
+        <dia:rectangle val="-106.05,51.95;-92.36,55.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-112,21"/>
+        <dia:point val="-106,52"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="13.59"/>
@@ -8936,21 +7494,21 @@ for Java, etc.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O63">
+    <dia:object type="UML - Generalization" version="1" id="O56">
       <dia:attribute name="obj_pos">
-        <dia:point val="-169.553,24.6"/>
+        <dia:point val="-30.5525,55.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-170.403,24.55;-135.582,38.05"/>
+        <dia:rectangle val="-82.6825,55.55;-29.7025,71.9998"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-169.553,24.6"/>
-        <dia:point val="-169.553,31"/>
-        <dia:point val="-135.632,31"/>
-        <dia:point val="-135.632,38"/>
+        <dia:point val="-30.5525,55.6"/>
+        <dia:point val="-30.5525,62"/>
+        <dia:point val="-82.6325,62"/>
+        <dia:point val="-82.6325,71.9498"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -8973,25 +7531,25 @@ for Java, etc.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O60" connection="6"/>
-        <dia:connection handle="1" to="O66" connection="1"/>
+        <dia:connection handle="0" to="O53" connection="6"/>
+        <dia:connection handle="1" to="O59" connection="8"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O64">
+    <dia:object type="UML - Generalization" version="1" id="O57">
       <dia:attribute name="obj_pos">
-        <dia:point val="-143.58,24.6"/>
+        <dia:point val="-70.58,55.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-144.43,24.55;-135.582,38.05"/>
+        <dia:rectangle val="-82.6825,55.55;-69.73,72.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-143.58,24.6"/>
-        <dia:point val="-143.58,31"/>
-        <dia:point val="-135.632,31"/>
-        <dia:point val="-135.632,38"/>
+        <dia:point val="-70.58,55.6"/>
+        <dia:point val="-70.58,62"/>
+        <dia:point val="-82.6325,62"/>
+        <dia:point val="-82.6325,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9014,25 +7572,25 @@ for Java, etc.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O61" connection="6"/>
-        <dia:connection handle="1" to="O66" connection="1"/>
+        <dia:connection handle="0" to="O54" connection="6"/>
+        <dia:connection handle="1" to="O59" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O65">
+    <dia:object type="UML - Generalization" version="1" id="O58">
       <dia:attribute name="obj_pos">
-        <dia:point val="-119.44,24.6"/>
+        <dia:point val="-46.44,55.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-135.682,24.55;-118.59,38.05"/>
+        <dia:rectangle val="-82.6825,55.55;-45.59,72.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-119.44,24.6"/>
-        <dia:point val="-119.44,31"/>
-        <dia:point val="-135.632,31"/>
-        <dia:point val="-135.632,38"/>
+        <dia:point val="-46.44,55.6"/>
+        <dia:point val="-46.44,62"/>
+        <dia:point val="-82.6325,62"/>
+        <dia:point val="-82.6325,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9055,19 +7613,19 @@ for Java, etc.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O59" connection="6"/>
-        <dia:connection handle="1" to="O66" connection="1"/>
+        <dia:connection handle="0" to="O52" connection="6"/>
+        <dia:connection handle="1" to="O59" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O66">
+    <dia:object type="UML - Class" version="0" id="O59">
       <dia:attribute name="obj_pos">
-        <dia:point val="-138,38"/>
+        <dia:point val="-85,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-138.05,37.95;-133.215,41.05"/>
+        <dia:rectangle val="-85.05,71.95;-80.215,75.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-138,38"/>
+        <dia:point val="-85,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="4.7350000000000003"/>
@@ -9169,21 +7727,21 @@ for Java, etc.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O67">
+    <dia:object type="UML - Generalization" version="1" id="O60">
       <dia:attribute name="obj_pos">
-        <dia:point val="-105.205,24.6"/>
+        <dia:point val="-99.205,55.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-135.682,24.55;-104.355,38.05"/>
+        <dia:rectangle val="-100.055,55.55;-82.5825,72.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-105.205,24.6"/>
-        <dia:point val="-105.205,31"/>
-        <dia:point val="-135.632,31"/>
-        <dia:point val="-135.632,38"/>
+        <dia:point val="-99.205,55.6"/>
+        <dia:point val="-99.205,62"/>
+        <dia:point val="-82.6325,62"/>
+        <dia:point val="-82.6325,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9206,19 +7764,19 @@ for Java, etc.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O62" connection="6"/>
-        <dia:connection handle="1" to="O66" connection="1"/>
+        <dia:connection handle="0" to="O55" connection="6"/>
+        <dia:connection handle="1" to="O59" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O68">
+    <dia:object type="UML - Class" version="0" id="O61">
       <dia:attribute name="obj_pos">
-        <dia:point val="-164,38"/>
+        <dia:point val="-67,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-164.05,37.95;-151.13,41.65"/>
+        <dia:rectangle val="-67.05,71.95;-54.13,75.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-164,38"/>
+        <dia:point val="-67,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="12.82"/>
@@ -9346,15 +7904,15 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O69">
+    <dia:object type="UML - Class" version="0" id="O62">
       <dia:attribute name="obj_pos">
-        <dia:point val="-149,53"/>
+        <dia:point val="-76,86"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-149.05,52.95;-144.215,56.05"/>
+        <dia:rectangle val="-76.05,85.95;-71.215,89.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-149,53"/>
+        <dia:point val="-76,86"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="4.7350000000000003"/>
@@ -9456,21 +8014,21 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O70">
+    <dia:object type="UML - Generalization" version="1" id="O63">
       <dia:attribute name="obj_pos">
-        <dia:point val="-157.59,41.6"/>
+        <dia:point val="-60.59,75.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-158.44,41.55;-146.582,53.05"/>
+        <dia:rectangle val="-73.6825,75.55;-59.74,86.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-157.59,41.6"/>
-        <dia:point val="-157.59,47"/>
-        <dia:point val="-146.632,47"/>
-        <dia:point val="-146.632,53"/>
+        <dia:point val="-60.59,75.6"/>
+        <dia:point val="-60.59,80"/>
+        <dia:point val="-73.6325,80"/>
+        <dia:point val="-73.6325,86"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9493,25 +8051,25 @@ Does not include inherited attributes.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O68" connection="6"/>
-        <dia:connection handle="1" to="O69" connection="1"/>
+        <dia:connection handle="0" to="O61" connection="6"/>
+        <dia:connection handle="1" to="O62" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O71">
+    <dia:object type="UML - Generalization" version="1" id="O64">
       <dia:attribute name="obj_pos">
-        <dia:point val="-135.632,41"/>
+        <dia:point val="-82.6325,75"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-146.682,40.95;-134.782,53.05"/>
+        <dia:rectangle val="-83.4825,74.95;-73.5825,86.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-135.632,41"/>
-        <dia:point val="-135.632,47"/>
-        <dia:point val="-146.632,47"/>
-        <dia:point val="-146.632,53"/>
+        <dia:point val="-82.6325,75"/>
+        <dia:point val="-82.6325,80"/>
+        <dia:point val="-73.6325,80"/>
+        <dia:point val="-73.6325,86"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9534,11 +8092,11 @@ Does not include inherited attributes.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O66" connection="6"/>
-        <dia:connection handle="1" to="O69" connection="1"/>
+        <dia:connection handle="0" to="O59" connection="6"/>
+        <dia:connection handle="1" to="O62" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O72">
+    <dia:object type="UML - Association" version="2" id="O65">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -9576,19 +8134,19 @@ Does not include inherited attributes.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="24,72.4"/>
+        <dia:point val="24,61.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="8.205,71.65;24.75,84.7502"/>
+        <dia:rectangle val="8.205,60.45;24.75,72.7528"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="24,72.4"/>
-        <dia:point val="24,79"/>
-        <dia:point val="8.255,79"/>
-        <dia:point val="8.255,83.9502"/>
+        <dia:point val="24,61.2"/>
+        <dia:point val="24,66"/>
+        <dia:point val="8.255,66"/>
+        <dia:point val="8.255,71.9528"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9606,10 +8164,10 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="5"/>
-        <dia:connection handle="1" to="O42" connection="10"/>
+        <dia:connection handle="1" to="O35" connection="10"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O73">
+    <dia:object type="UML - Association" version="2" id="O66">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -9647,19 +8205,19 @@ Does not include inherited attributes.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="35.2225,72.4"/>
+        <dia:point val="35.2225,61.2"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="28.205,71.65;35.9725,84.8"/>
+        <dia:rectangle val="27.205,60.45;35.9725,72.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="35.2225,72.4"/>
-        <dia:point val="35.2225,79"/>
-        <dia:point val="28.255,79"/>
-        <dia:point val="28.255,84"/>
+        <dia:point val="35.2225,61.2"/>
+        <dia:point val="35.2225,66"/>
+        <dia:point val="27.255,66"/>
+        <dia:point val="27.255,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9677,18 +8235,18 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="6"/>
-        <dia:connection handle="1" to="O51" connection="1"/>
+        <dia:connection handle="1" to="O44" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O74">
+    <dia:object type="UML - Class" version="0" id="O67">
       <dia:attribute name="obj_pos">
-        <dia:point val="29,98"/>
+        <dia:point val="30,87"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="28.95,97.95;33.6225,101.05"/>
+        <dia:rectangle val="29.95,86.95;34.6225,90.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="29,98"/>
+        <dia:point val="30,87"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="4.5724999999999998"/>
@@ -9790,15 +8348,15 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O75">
+    <dia:object type="UML - Class" version="0" id="O68">
       <dia:attribute name="obj_pos">
-        <dia:point val="40,84"/>
+        <dia:point val="39,72"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="39.95,83.95;49.02,87.05"/>
+        <dia:rectangle val="38.95,71.95;48.02,75.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="40,84"/>
+        <dia:point val="39,72"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="8.9700000000000006"/>
@@ -9900,21 +8458,21 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O76">
+    <dia:object type="UML - Generalization" version="1" id="O69">
       <dia:attribute name="obj_pos">
-        <dia:point val="44.485,87"/>
+        <dia:point val="43.485,75"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="31.2362,86.95;45.335,98.05"/>
+        <dia:rectangle val="32.2362,74.95;44.335,87.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="44.485,87"/>
-        <dia:point val="44.485,94"/>
-        <dia:point val="31.2862,94"/>
-        <dia:point val="31.2862,98"/>
+        <dia:point val="43.485,75"/>
+        <dia:point val="43.485,82"/>
+        <dia:point val="32.2863,82"/>
+        <dia:point val="32.2863,87"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -9937,11 +8495,11 @@ Does not include inherited attributes.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O75" connection="6"/>
-        <dia:connection handle="1" to="O74" connection="1"/>
+        <dia:connection handle="0" to="O68" connection="6"/>
+        <dia:connection handle="1" to="O67" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O77">
+    <dia:object type="UML - Association" version="2" id="O70">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -9979,19 +8537,19 @@ Does not include inherited attributes.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="35.2225,72.4504"/>
+        <dia:point val="35.2225,61.2501"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="34.4725,71.7004;44.685,84.8"/>
+        <dia:rectangle val="34.4725,60.5001;43.685,72.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="35.2225,72.4504"/>
-        <dia:point val="35.2225,79"/>
-        <dia:point val="44.485,79"/>
-        <dia:point val="44.485,84"/>
+        <dia:point val="35.2225,61.2501"/>
+        <dia:point val="35.2225,66"/>
+        <dia:point val="43.485,66"/>
+        <dia:point val="43.485,72"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -10008,19 +8566,19 @@ Does not include inherited attributes.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O0" connection="32"/>
-        <dia:connection handle="1" to="O75" connection="1"/>
+        <dia:connection handle="0" to="O0" connection="24"/>
+        <dia:connection handle="1" to="O68" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O78">
+    <dia:object type="UML - Class" version="0" id="O71">
       <dia:attribute name="obj_pos">
-        <dia:point val="47,98"/>
+        <dia:point val="46,87"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="46.95,97.95;61.795,102.45"/>
+        <dia:rectangle val="45.95,86.95;60.795,91.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="47,98"/>
+        <dia:point val="46,87"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="14.744999999999999"/>
@@ -10169,15 +8727,15 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O79">
+    <dia:object type="UML - Class" version="0" id="O72">
       <dia:attribute name="obj_pos">
-        <dia:point val="40,110"/>
+        <dia:point val="38,101"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="39.95,109.95;47.865,114.45"/>
+        <dia:rectangle val="37.95,100.95;45.865,105.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="40,110"/>
+        <dia:point val="38,101"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="7.8150000000000004"/>
@@ -10330,7 +8888,7 @@ It must be castable to instance of the type defined in the enumeration.#</dia:st
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O80">
+    <dia:object type="UML - Association" version="2" id="O73">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -10368,19 +8926,19 @@ It must be castable to instance of the type defined in the enumeration.#</dia:st
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="54.3725,102.4"/>
+        <dia:point val="53.3725,91.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="43.8575,101.65;55.1225,110.8"/>
+        <dia:rectangle val="41.8575,90.65;54.1225,101.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="54.3725,102.4"/>
-        <dia:point val="54.3725,107"/>
-        <dia:point val="43.9075,107"/>
-        <dia:point val="43.9075,110"/>
+        <dia:point val="53.3725,91.4"/>
+        <dia:point val="53.3725,97"/>
+        <dia:point val="41.9075,97"/>
+        <dia:point val="41.9075,101"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -10397,25 +8955,25 @@ It must be castable to instance of the type defined in the enumeration.#</dia:st
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O78" connection="6"/>
-        <dia:connection handle="1" to="O79" connection="1"/>
+        <dia:connection handle="0" to="O71" connection="6"/>
+        <dia:connection handle="1" to="O72" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O81">
+    <dia:object type="UML - Generalization" version="1" id="O74">
       <dia:attribute name="obj_pos">
-        <dia:point val="44.485,87"/>
+        <dia:point val="43.485,75"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="43.635,86.95;54.4225,98.05"/>
+        <dia:rectangle val="42.635,74.95;53.4225,87.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="44.485,87"/>
-        <dia:point val="44.485,94"/>
-        <dia:point val="54.3725,94"/>
-        <dia:point val="54.3725,98"/>
+        <dia:point val="43.485,75"/>
+        <dia:point val="43.485,82"/>
+        <dia:point val="53.3725,82"/>
+        <dia:point val="53.3725,87"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -10438,25 +8996,25 @@ It must be castable to instance of the type defined in the enumeration.#</dia:st
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O75" connection="6"/>
-        <dia:connection handle="1" to="O78" connection="1"/>
+        <dia:connection handle="0" to="O68" connection="6"/>
+        <dia:connection handle="1" to="O71" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O82">
+    <dia:object type="UML - Generalization" version="1" id="O75">
       <dia:attribute name="obj_pos">
-        <dia:point val="44.485,87"/>
+        <dia:point val="43.485,75"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="43.635,86.95;88.9625,98.05"/>
+        <dia:rectangle val="42.635,74.95;85.9625,87.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="44.485,87"/>
-        <dia:point val="44.485,94"/>
-        <dia:point val="88.9125,94"/>
-        <dia:point val="88.9125,98"/>
+        <dia:point val="43.485,75"/>
+        <dia:point val="43.485,82"/>
+        <dia:point val="85.9125,82"/>
+        <dia:point val="85.9125,87"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -10479,19 +9037,19 @@ It must be castable to instance of the type defined in the enumeration.#</dia:st
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O75" connection="6"/>
-        <dia:connection handle="1" to="O83" connection="1"/>
+        <dia:connection handle="0" to="O68" connection="6"/>
+        <dia:connection handle="1" to="O76" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O83">
+    <dia:object type="UML - Class" version="0" id="O76">
       <dia:attribute name="obj_pos">
-        <dia:point val="80,98"/>
+        <dia:point val="77,87"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="79.95,97.95;97.875,110.45"/>
+        <dia:rectangle val="76.95,86.95;94.875,99.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="80,98"/>
+        <dia:point val="77,87"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="17.824999999999999"/>
@@ -10875,15 +9433,15 @@ or other comparable model types.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O84">
+    <dia:object type="UML - Class" version="0" id="O77">
       <dia:attribute name="obj_pos">
-        <dia:point val="50,122"/>
+        <dia:point val="50,111"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="49.95,121.95;60.56,125.65"/>
+        <dia:rectangle val="49.95,110.95;60.56,114.65"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="50,122"/>
+        <dia:point val="50,111"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="10.51"/>
@@ -10988,7 +9546,7 @@ object.#</dia:string>
             <dia:string>#type#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#value_types#</dia:string>
+            <dia:string>#value_object_types#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
@@ -11013,30 +9571,30 @@ object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O85">
+    <dia:object type="UML - Class" version="0" id="O78">
       <dia:attribute name="obj_pos">
-        <dia:point val="42,135"/>
+        <dia:point val="38,124"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="41.95,134.95;51.02,143.45"/>
+        <dia:rectangle val="37.95,123.95;47.0925,132.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="42,135"/>
+        <dia:point val="38,124"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="8.9700000000000006"/>
+        <dia:real val="9.0425000000000004"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="8.4000000000000004"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#value_types#</dia:string>
+        <dia:string>#value_object_types#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
         <dia:string>#enumeration#</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>##</dia:string>
+        <dia:string>#Types of value objects.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -11119,7 +9677,7 @@ object.#</dia:string>
       <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#user_defined#</dia:string>
+            <dia:string>#plain#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
             <dia:string>##</dia:string>
@@ -11128,7 +9686,7 @@ object.#</dia:string>
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Value was created by the user.#</dia:string>
+            <dia:string>#Regular value object with no distinguishing features.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -11285,7 +9843,7 @@ object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O86">
+    <dia:object type="UML - Association" version="2" id="O79">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -11323,19 +9881,19 @@ object.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="55.255,125.6"/>
+        <dia:point val="55.255,114.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="46.435,124.85;56.005,135.8"/>
+        <dia:rectangle val="42.4712,113.85;56.005,124.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="55.255,125.6"/>
-        <dia:point val="55.255,131"/>
-        <dia:point val="46.485,131"/>
-        <dia:point val="46.485,135"/>
+        <dia:point val="55.255,114.6"/>
+        <dia:point val="55.255,120"/>
+        <dia:point val="42.5213,120"/>
+        <dia:point val="42.5213,124"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -11352,25 +9910,25 @@ object.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O84" connection="6"/>
-        <dia:connection handle="1" to="O85" connection="1"/>
+        <dia:connection handle="0" to="O77" connection="6"/>
+        <dia:connection handle="1" to="O78" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O87">
+    <dia:object type="UML - Generalization" version="1" id="O80">
       <dia:attribute name="obj_pos">
-        <dia:point val="88.9125,110.4"/>
+        <dia:point val="85.9125,99.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="55.205,110.35;89.7625,122.05"/>
+        <dia:rectangle val="55.205,99.35;86.7625,111.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="88.9125,110.4"/>
-        <dia:point val="88.9125,117"/>
-        <dia:point val="55.255,117"/>
-        <dia:point val="55.255,122"/>
+        <dia:point val="85.9125,99.4"/>
+        <dia:point val="85.9125,106"/>
+        <dia:point val="55.255,106"/>
+        <dia:point val="55.255,111"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -11393,25 +9951,25 @@ object.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O83" connection="6"/>
-        <dia:connection handle="1" to="O84" connection="1"/>
+        <dia:connection handle="0" to="O76" connection="6"/>
+        <dia:connection handle="1" to="O77" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O88">
+    <dia:object type="UML - Generalization" version="1" id="O81">
       <dia:attribute name="obj_pos">
-        <dia:point val="88.9125,110.4"/>
+        <dia:point val="85.9125,99.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="88.0625,110.35;130,122"/>
+        <dia:rectangle val="85.0625,99.35;127,111"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="88.9125,110.4"/>
-        <dia:point val="88.9125,117"/>
-        <dia:point val="129.95,117"/>
-        <dia:point val="129.95,121.95"/>
+        <dia:point val="85.9125,99.4"/>
+        <dia:point val="85.9125,106"/>
+        <dia:point val="126.95,106"/>
+        <dia:point val="126.95,110.95"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -11434,19 +9992,19 @@ object.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O83" connection="6"/>
-        <dia:connection handle="1" to="O43" connection="12"/>
+        <dia:connection handle="0" to="O76" connection="6"/>
+        <dia:connection handle="1" to="O36" connection="12"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O89">
+    <dia:object type="UML - Class" version="0" id="O82">
       <dia:attribute name="obj_pos">
-        <dia:point val="113,136"/>
+        <dia:point val="107,125"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="112.95,135.95;128.18,140.45"/>
+        <dia:rectangle val="106.95,124.95;122.18,129.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="113,136"/>
+        <dia:point val="107,125"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="15.130000000000001"/>
@@ -11595,21 +10153,21 @@ object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O90">
+    <dia:object type="UML - Generalization" version="1" id="O83">
       <dia:attribute name="obj_pos">
-        <dia:point val="129.95,125.6"/>
+        <dia:point val="126.95,114.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="120.515,125.55;130.8,136"/>
+        <dia:rectangle val="114.515,114.55;127.8,125"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="129.95,125.6"/>
-        <dia:point val="129.95,131"/>
-        <dia:point val="120.565,131"/>
-        <dia:point val="120.565,135.95"/>
+        <dia:point val="126.95,114.6"/>
+        <dia:point val="126.95,120"/>
+        <dia:point val="114.565,120"/>
+        <dia:point val="114.565,124.95"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -11632,19 +10190,19 @@ object.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O43" connection="6"/>
-        <dia:connection handle="1" to="O89" connection="12"/>
+        <dia:connection handle="0" to="O36" connection="6"/>
+        <dia:connection handle="1" to="O82" connection="12"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O91">
+    <dia:object type="UML - Class" version="0" id="O84">
       <dia:attribute name="obj_pos">
-        <dia:point val="137,136"/>
+        <dia:point val="133,125"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="136.95,135.95;141.4,139.05"/>
+        <dia:rectangle val="132.95,124.95;137.4,128.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="137,136"/>
+        <dia:point val="133,125"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="4.3499999999999996"/>
@@ -11746,21 +10304,21 @@ object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O92">
+    <dia:object type="UML - Generalization" version="1" id="O85">
       <dia:attribute name="obj_pos">
-        <dia:point val="129.95,125.6"/>
+        <dia:point val="126.95,114.6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="129.1,125.55;139.225,136.05"/>
+        <dia:rectangle val="126.1,114.55;135.225,125.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="129.95,125.6"/>
-        <dia:point val="129.95,131"/>
-        <dia:point val="139.175,131"/>
-        <dia:point val="139.175,136"/>
+        <dia:point val="126.95,114.6"/>
+        <dia:point val="126.95,120"/>
+        <dia:point val="135.175,120"/>
+        <dia:point val="135.175,125"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -11783,8 +10341,79 @@ object.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O43" connection="6"/>
-        <dia:connection handle="1" to="O91" connection="1"/>
+        <dia:connection handle="0" to="O36" connection="6"/>
+        <dia:connection handle="1" to="O84" connection="1"/>
+      </dia:connections>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O86">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="-60.59,71.9528"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-61.34,65.95;-47.8,73.6"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="-60.59,71.9528"/>
+        <dia:point val="-60.59,66"/>
+        <dia:point val="-48,66"/>
+        <dia:point val="-48,72"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O61" connection="10"/>
+        <dia:connection handle="1" to="O2" connection="0"/>
       </dia:connections>
     </dia:object>
   </dia:layer>
diff --git a/doc/agile/release_notes_sprint_29.org b/doc/agile/release_notes_sprint_29.org
index e1dd5e4..8c98d6f 100644
--- a/doc/agile/release_notes_sprint_29.org
+++ b/doc/agile/release_notes_sprint_29.org
@@ -329,6 +329,7 @@ using. Attempt to make use of these to simplify the model.
      CLOCK: [2013-06-26 Wed 18:01]--[2013-06-26 Wed 18:07] =>  0:06
 
 **** IMPLEMENTATION Convert pods into entities, values or services     :task:
+     CLOCK: [2013-06-26 Wed 22:46]
      CLOCK: [2013-06-26 Wed 22:23]--[2013-06-26 Wed 22:45] =>  0:22
 
 *** Add content to the introduction in manual                         :story:
diff --git a/projects/sml/include/dogen/sml/hash/all_hash.hpp b/projects/sml/include/dogen/sml/hash/all_hash.hpp
index 6b6952e..33be324 100644
--- a/projects/sml/include/dogen/sml/hash/all_hash.hpp
+++ b/projects/sml/include/dogen/sml/hash/all_hash.hpp
@@ -20,7 +20,6 @@
  */
 #include "dogen/sml/hash/abstract_entity_hash.hpp"
 #include "dogen/sml/hash/abstract_object_hash.hpp"
-#include "dogen/sml/hash/category_types_hash.hpp"
 #include "dogen/sml/hash/concept_hash.hpp"
 #include "dogen/sml/hash/entity_hash.hpp"
 #include "dogen/sml/hash/enumeration_hash.hpp"
@@ -32,8 +31,6 @@
 #include "dogen/sml/hash/model_hash.hpp"
 #include "dogen/sml/hash/module_hash.hpp"
 #include "dogen/sml/hash/nested_qname_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
-#include "dogen/sml/hash/pod_types_hash.hpp"
 #include "dogen/sml/hash/primitive_hash.hpp"
 #include "dogen/sml/hash/property_hash.hpp"
 #include "dogen/sml/hash/qname_hash.hpp"
@@ -43,4 +40,4 @@
 #include "dogen/sml/hash/service_types_hash.hpp"
 #include "dogen/sml/hash/type_hash.hpp"
 #include "dogen/sml/hash/value_object_hash.hpp"
-#include "dogen/sml/hash/value_types_hash.hpp"
+#include "dogen/sml/hash/value_object_types_hash.hpp"
diff --git a/projects/sml/include/dogen/sml/hash/category_types_hash.hpp b/projects/sml/include/dogen/sml/hash/category_types_hash.hpp
deleted file mode 100644
index 7769144..0000000
--- a/projects/sml/include/dogen/sml/hash/category_types_hash.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_CATEGORY_TYPES_HASH_HPP
-#define DOGEN_SML_HASH_CATEGORY_TYPES_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/category_types.hpp"
-
-namespace std {
-
-template<>
-class hash<dogen::sml::category_types> {
-public:
-    size_t operator()(const dogen::sml::category_types& v) const {
-        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
-    }
-};
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/hash/pod_hash.hpp b/projects/sml/include/dogen/sml/hash/pod_hash.hpp
deleted file mode 100644
index 9d4d230..0000000
--- a/projects/sml/include/dogen/sml/hash/pod_hash.hpp
+++ /dev/null
@@ -1,52 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_POD_HASH_HPP
-#define DOGEN_SML_HASH_POD_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_hasher {
-public:
-    static std::size_t hash(const pod& v);
-};
-
-} }
-
-namespace std {
-
-template<>
-class hash<dogen::sml::pod> {
-public:
-    size_t operator()(const dogen::sml::pod& v) const {
-        return dogen::sml::pod_hasher::hash(v);
-    }
-};
-
-}
-#endif
diff --git a/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp b/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp
deleted file mode 100644
index fbc6f42..0000000
--- a/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_POD_TYPES_HASH_HPP
-#define DOGEN_SML_HASH_POD_TYPES_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace std {
-
-template<>
-class hash<dogen::sml::pod_types> {
-public:
-    size_t operator()(const dogen::sml::pod_types& v) const {
-        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
-    }
-};
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/hash/value_object_types_hash.hpp b/projects/sml/include/dogen/sml/hash/value_object_types_hash.hpp
new file mode 100644
index 0000000..4d54379
--- /dev/null
+++ b/projects/sml/include/dogen/sml/hash/value_object_types_hash.hpp
@@ -0,0 +1,43 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_HASH_VALUE_OBJECT_TYPES_HASH_HPP
+#define DOGEN_SML_HASH_VALUE_OBJECT_TYPES_HASH_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+#include <functional>
+#include "dogen/sml/types/value_object_types.hpp"
+
+namespace std {
+
+template<>
+class hash<dogen::sml::value_object_types> {
+public:
+    size_t operator()(const dogen::sml::value_object_types& v) const {
+        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
+    }
+};
+
+}
+
+#endif
diff --git a/projects/sml/include/dogen/sml/hash/value_types_hash.hpp b/projects/sml/include/dogen/sml/hash/value_types_hash.hpp
deleted file mode 100644
index 176cd39..0000000
--- a/projects/sml/include/dogen/sml/hash/value_types_hash.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_VALUE_TYPES_HASH_HPP
-#define DOGEN_SML_HASH_VALUE_TYPES_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/value_types.hpp"
-
-namespace std {
-
-template<>
-class hash<dogen::sml::value_types> {
-public:
-    size_t operator()(const dogen::sml::value_types& v) const {
-        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
-    }
-};
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/all_io.hpp b/projects/sml/include/dogen/sml/io/all_io.hpp
index ed421b6..55ba561 100644
--- a/projects/sml/include/dogen/sml/io/all_io.hpp
+++ b/projects/sml/include/dogen/sml/io/all_io.hpp
@@ -20,7 +20,6 @@
  */
 #include "dogen/sml/io/abstract_entity_io.hpp"
 #include "dogen/sml/io/abstract_object_io.hpp"
-#include "dogen/sml/io/category_types_io.hpp"
 #include "dogen/sml/io/concept_io.hpp"
 #include "dogen/sml/io/entity_io.hpp"
 #include "dogen/sml/io/enumeration_io.hpp"
@@ -32,8 +31,6 @@
 #include "dogen/sml/io/model_io.hpp"
 #include "dogen/sml/io/module_io.hpp"
 #include "dogen/sml/io/nested_qname_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
-#include "dogen/sml/io/pod_types_io.hpp"
 #include "dogen/sml/io/primitive_io.hpp"
 #include "dogen/sml/io/property_io.hpp"
 #include "dogen/sml/io/qname_io.hpp"
@@ -43,4 +40,4 @@
 #include "dogen/sml/io/service_types_io.hpp"
 #include "dogen/sml/io/type_io.hpp"
 #include "dogen/sml/io/value_object_io.hpp"
-#include "dogen/sml/io/value_types_io.hpp"
+#include "dogen/sml/io/value_object_types_io.hpp"
diff --git a/projects/sml/include/dogen/sml/io/category_types_io.hpp b/projects/sml/include/dogen/sml/io/category_types_io.hpp
deleted file mode 100644
index fdc8d45..0000000
--- a/projects/sml/include/dogen/sml/io/category_types_io.hpp
+++ /dev/null
@@ -1,38 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_CATEGORY_TYPES_IO_HPP
-#define DOGEN_SML_IO_CATEGORY_TYPES_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/category_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const category_types& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/pod_io.hpp b/projects/sml/include/dogen/sml/io/pod_io.hpp
deleted file mode 100644
index 69f4286..0000000
--- a/projects/sml/include/dogen/sml/io/pod_io.hpp
+++ /dev/null
@@ -1,40 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_POD_IO_HPP
-#define DOGEN_SML_IO_POD_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream&
-operator<<(std::ostream& s,
-     const dogen::sml::pod& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/pod_types_io.hpp b/projects/sml/include/dogen/sml/io/pod_types_io.hpp
deleted file mode 100644
index 1f6a832..0000000
--- a/projects/sml/include/dogen/sml/io/pod_types_io.hpp
+++ /dev/null
@@ -1,38 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_POD_TYPES_IO_HPP
-#define DOGEN_SML_IO_POD_TYPES_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod_types& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/value_object_types_io.hpp b/projects/sml/include/dogen/sml/io/value_object_types_io.hpp
new file mode 100644
index 0000000..0a46327
--- /dev/null
+++ b/projects/sml/include/dogen/sml/io/value_object_types_io.hpp
@@ -0,0 +1,38 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_IO_VALUE_OBJECT_TYPES_IO_HPP
+#define DOGEN_SML_IO_VALUE_OBJECT_TYPES_IO_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+#include <iosfwd>
+#include "dogen/sml/types/value_object_types.hpp"
+
+namespace dogen {
+namespace sml {
+
+std::ostream& operator<<(std::ostream& s, const value_object_types& v);
+
+} }
+
+#endif
diff --git a/projects/sml/include/dogen/sml/io/value_types_io.hpp b/projects/sml/include/dogen/sml/io/value_types_io.hpp
deleted file mode 100644
index 80f70aa..0000000
--- a/projects/sml/include/dogen/sml/io/value_types_io.hpp
+++ /dev/null
@@ -1,38 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_VALUE_TYPES_IO_HPP
-#define DOGEN_SML_IO_VALUE_TYPES_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/value_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const value_types& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/all_ser.hpp b/projects/sml/include/dogen/sml/serialization/all_ser.hpp
index 263eef7..cb34339 100644
--- a/projects/sml/include/dogen/sml/serialization/all_ser.hpp
+++ b/projects/sml/include/dogen/sml/serialization/all_ser.hpp
@@ -20,7 +20,6 @@
  */
 #include "dogen/sml/serialization/abstract_entity_ser.hpp"
 #include "dogen/sml/serialization/abstract_object_ser.hpp"
-#include "dogen/sml/serialization/category_types_ser.hpp"
 #include "dogen/sml/serialization/concept_ser.hpp"
 #include "dogen/sml/serialization/entity_ser.hpp"
 #include "dogen/sml/serialization/enumeration_ser.hpp"
@@ -32,8 +31,6 @@
 #include "dogen/sml/serialization/model_ser.hpp"
 #include "dogen/sml/serialization/module_ser.hpp"
 #include "dogen/sml/serialization/nested_qname_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
-#include "dogen/sml/serialization/pod_types_ser.hpp"
 #include "dogen/sml/serialization/primitive_ser.hpp"
 #include "dogen/sml/serialization/property_ser.hpp"
 #include "dogen/sml/serialization/qname_ser.hpp"
@@ -44,4 +41,4 @@
 #include "dogen/sml/serialization/service_types_ser.hpp"
 #include "dogen/sml/serialization/type_ser.hpp"
 #include "dogen/sml/serialization/value_object_ser.hpp"
-#include "dogen/sml/serialization/value_types_ser.hpp"
+#include "dogen/sml/serialization/value_object_types_ser.hpp"
diff --git a/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp
deleted file mode 100644
index 5d764ca..0000000
--- a/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp
+++ /dev/null
@@ -1,37 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_CATEGORY_TYPES_SER_HPP
-#define DOGEN_SML_SERIALIZATION_CATEGORY_TYPES_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/nvp.hpp>
-#include "dogen/sml/types/category_types.hpp"
-
-template<class Archive>
-void serialize(Archive& ar, dogen::sml::category_types& v, unsigned int /*version*/){
-    using boost::serialization::make_nvp;
-    ar & make_nvp("category_types", v);
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp
deleted file mode 100644
index ff6f038..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp
+++ /dev/null
@@ -1,41 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_FWD_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_FWD_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod_fwd.hpp"
-
-namespace boost {
-namespace serialization {
-
-template<class Archive>
-void save(Archive& ar, const dogen::sml::pod& v, unsigned int version);
-
-template<class Archive>
-void load(Archive& ar, dogen::sml::pod& v, unsigned int version);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_ser.hpp
deleted file mode 100644
index 1adb134..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_ser.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/split_free.hpp>
-#include "dogen/sml/types/pod.hpp"
-
-BOOST_SERIALIZATION_SPLIT_FREE(dogen::sml::pod)
-namespace boost {
-namespace serialization {
-
-template<typename Archive>
-void save(Archive& ar, const dogen::sml::pod& v, unsigned int version);
-
-template<typename Archive>
-void load(Archive& ar, dogen::sml::pod& v, unsigned int version);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp
deleted file mode 100644
index 786ce49..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp
+++ /dev/null
@@ -1,37 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_TYPES_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_TYPES_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/nvp.hpp>
-#include "dogen/sml/types/pod_types.hpp"
-
-template<class Archive>
-void serialize(Archive& ar, dogen::sml::pod_types& v, unsigned int /*version*/){
-    using boost::serialization::make_nvp;
-    ar & make_nvp("pod_types", v);
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/value_object_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/value_object_types_ser.hpp
new file mode 100644
index 0000000..ea5eaad
--- /dev/null
+++ b/projects/sml/include/dogen/sml/serialization/value_object_types_ser.hpp
@@ -0,0 +1,37 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_SERIALIZATION_VALUE_OBJECT_TYPES_SER_HPP
+#define DOGEN_SML_SERIALIZATION_VALUE_OBJECT_TYPES_SER_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+#include <boost/serialization/nvp.hpp>
+#include "dogen/sml/types/value_object_types.hpp"
+
+template<class Archive>
+void serialize(Archive& ar, dogen::sml::value_object_types& v, unsigned int /*version*/){
+    using boost::serialization::make_nvp;
+    ar & make_nvp("value_object_types", v);
+}
+
+#endif
diff --git a/projects/sml/include/dogen/sml/serialization/value_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/value_types_ser.hpp
deleted file mode 100644
index 790262b..0000000
--- a/projects/sml/include/dogen/sml/serialization/value_types_ser.hpp
+++ /dev/null
@@ -1,37 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_VALUE_TYPES_SER_HPP
-#define DOGEN_SML_SERIALIZATION_VALUE_TYPES_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/nvp.hpp>
-#include "dogen/sml/types/value_types.hpp"
-
-template<class Archive>
-void serialize(Archive& ar, dogen::sml::value_types& v, unsigned int /*version*/){
-    using boost::serialization::make_nvp;
-    ar & make_nvp("value_types", v);
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/all_td.hpp b/projects/sml/include/dogen/sml/test_data/all_td.hpp
index 53c7e47..9ddf164 100644
--- a/projects/sml/include/dogen/sml/test_data/all_td.hpp
+++ b/projects/sml/include/dogen/sml/test_data/all_td.hpp
@@ -20,7 +20,6 @@
  */
 #include "dogen/sml/test_data/abstract_entity_td.hpp"
 #include "dogen/sml/test_data/abstract_object_td.hpp"
-#include "dogen/sml/test_data/category_types_td.hpp"
 #include "dogen/sml/test_data/concept_td.hpp"
 #include "dogen/sml/test_data/entity_td.hpp"
 #include "dogen/sml/test_data/enumeration_td.hpp"
@@ -32,8 +31,6 @@
 #include "dogen/sml/test_data/model_td.hpp"
 #include "dogen/sml/test_data/module_td.hpp"
 #include "dogen/sml/test_data/nested_qname_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
-#include "dogen/sml/test_data/pod_types_td.hpp"
 #include "dogen/sml/test_data/primitive_td.hpp"
 #include "dogen/sml/test_data/property_td.hpp"
 #include "dogen/sml/test_data/qname_td.hpp"
@@ -43,4 +40,4 @@
 #include "dogen/sml/test_data/service_types_td.hpp"
 #include "dogen/sml/test_data/type_td.hpp"
 #include "dogen/sml/test_data/value_object_td.hpp"
-#include "dogen/sml/test_data/value_types_td.hpp"
+#include "dogen/sml/test_data/value_object_types_td.hpp"
diff --git a/projects/sml/include/dogen/sml/test_data/category_types_td.hpp b/projects/sml/include/dogen/sml/test_data/category_types_td.hpp
deleted file mode 100644
index 1a54ef9..0000000
--- a/projects/sml/include/dogen/sml/test_data/category_types_td.hpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_CATEGORY_TYPES_TD_HPP
-#define DOGEN_SML_TEST_DATA_CATEGORY_TYPES_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/category_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-class category_types_generator {
-public:
-    category_types_generator();
-
-public:
-    typedef dogen::sml::category_types result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/pod_td.hpp b/projects/sml/include/dogen/sml/test_data/pod_td.hpp
deleted file mode 100644
index 20c3646..0000000
--- a/projects/sml/include/dogen/sml/test_data/pod_td.hpp
+++ /dev/null
@@ -1,53 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_POD_TD_HPP
-#define DOGEN_SML_TEST_DATA_POD_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_generator {
-public:
-    pod_generator();
-
-public:
-    typedef dogen::sml::pod result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-public:
-    static result_type* create_ptr(const unsigned int position);
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp b/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp
deleted file mode 100644
index 763d038..0000000
--- a/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_POD_TYPES_TD_HPP
-#define DOGEN_SML_TEST_DATA_POD_TYPES_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_types_generator {
-public:
-    pod_types_generator();
-
-public:
-    typedef dogen::sml::pod_types result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/value_object_types_td.hpp b/projects/sml/include/dogen/sml/test_data/value_object_types_td.hpp
new file mode 100644
index 0000000..f50d227
--- /dev/null
+++ b/projects/sml/include/dogen/sml/test_data/value_object_types_td.hpp
@@ -0,0 +1,51 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_TEST_DATA_VALUE_OBJECT_TYPES_TD_HPP
+#define DOGEN_SML_TEST_DATA_VALUE_OBJECT_TYPES_TD_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+#include "dogen/sml/types/value_object_types.hpp"
+
+namespace dogen {
+namespace sml {
+
+class value_object_types_generator {
+public:
+    value_object_types_generator();
+
+public:
+    typedef dogen::sml::value_object_types result_type;
+
+public:
+    static void populate(const unsigned int position, result_type& v);
+    static result_type create(const unsigned int position);
+    result_type operator()();
+
+private:
+    unsigned int position_;
+};
+
+} }
+
+#endif
diff --git a/projects/sml/include/dogen/sml/test_data/value_types_td.hpp b/projects/sml/include/dogen/sml/test_data/value_types_td.hpp
deleted file mode 100644
index ea2822a..0000000
--- a/projects/sml/include/dogen/sml/test_data/value_types_td.hpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_VALUE_TYPES_TD_HPP
-#define DOGEN_SML_TEST_DATA_VALUE_TYPES_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/value_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-class value_types_generator {
-public:
-    value_types_generator();
-
-public:
-    typedef dogen::sml::value_types result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/all.hpp b/projects/sml/include/dogen/sml/types/all.hpp
index e68de90..0ae98b9 100644
--- a/projects/sml/include/dogen/sml/types/all.hpp
+++ b/projects/sml/include/dogen/sml/types/all.hpp
@@ -21,7 +21,6 @@
 #include "dogen/sml/types/abstract_entity.hpp"
 #include "dogen/sml/types/abstract_object.hpp"
 #include "dogen/sml/types/boost_model_factory.hpp"
-#include "dogen/sml/types/category_types.hpp"
 #include "dogen/sml/types/concept.hpp"
 #include "dogen/sml/types/entity.hpp"
 #include "dogen/sml/types/enumeration.hpp"
@@ -37,8 +36,6 @@
 #include "dogen/sml/types/model.hpp"
 #include "dogen/sml/types/module.hpp"
 #include "dogen/sml/types/nested_qname.hpp"
-#include "dogen/sml/types/pod.hpp"
-#include "dogen/sml/types/pod_types.hpp"
 #include "dogen/sml/types/primitive.hpp"
 #include "dogen/sml/types/primitive_model_factory.hpp"
 #include "dogen/sml/types/property.hpp"
@@ -54,5 +51,5 @@
 #include "dogen/sml/types/type.hpp"
 #include "dogen/sml/types/type_visitor.hpp"
 #include "dogen/sml/types/value_object.hpp"
-#include "dogen/sml/types/value_types.hpp"
+#include "dogen/sml/types/value_object_types.hpp"
 #include "dogen/sml/types/workflow.hpp"
diff --git a/projects/sml/include/dogen/sml/types/boost_model_factory.hpp b/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
index a2c3900..d0c70c0 100644
--- a/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
+++ b/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
@@ -26,12 +26,18 @@
 #endif
 
 #include <string>
-#include "dogen/sml/types/pod.hpp"
+#include <boost/shared_ptr.hpp>
+#include "dogen/sml/types/type.hpp"
+#include "dogen/sml/types/module.hpp"
+#include "dogen/sml/types/value_object_types.hpp"
 #include "dogen/sml/types/model.hpp"
 
 namespace dogen {
 namespace sml {
 
+/**
+ * @brief Generates the system model for the boost libraries.
+ */
 class boost_model_factory {
 public:
     boost_model_factory() = delete;
@@ -41,12 +47,23 @@ public:
     boost_model_factory& operator=(const boost_model_factory&) = delete;
 
 private:
+    /**
+     * @brief Create a new module.
+     */
     static module create_module(const std::string& name,
-        std::list<std::string> module_path);
-    static pod create_pod(const std::string& name, pod_types pt,
-        std::list<std::string> module_path);
+        const std::list<std::string>& module_path);
+
+    /**
+     * @brief Create a new object.
+     */
+    static boost::shared_ptr<type>
+    create_value_object(const std::string& name,
+        const std::list<std::string>& module_path, value_object_types t);
 
 public:
+    /**
+     * @brief Create the boost model.
+     */
     static model create();
 };
 
diff --git a/projects/sml/include/dogen/sml/types/category_types.hpp b/projects/sml/include/dogen/sml/types/category_types.hpp
deleted file mode 100644
index 5f6d0ee..0000000
--- a/projects/sml/include/dogen/sml/types/category_types.hpp
+++ /dev/null
@@ -1,48 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_CATEGORY_TYPES_HPP
-#define DOGEN_SML_TYPES_CATEGORY_TYPES_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Categories of types.
- *
- * Broadly speaking there are two categories of types: user defined
- * types and system defined types. However, as we need to distinguish
- * between the system defined types, we have created separate
- * categories for them.
- */
-enum class category_types : unsigned int {
-    invalid = 0, ///< Represents an uninitialised enum
-    user_defined = 1, ///< Type was created by the user
-    versioned_key = 2, ///< System defined versioned key
-    unversioned_key = 3 ///< System defined unversioned key
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/category_types_fwd.hpp b/projects/sml/include/dogen/sml/types/category_types_fwd.hpp
deleted file mode 100644
index 946ecb5..0000000
--- a/projects/sml/include/dogen/sml/types/category_types_fwd.hpp
+++ /dev/null
@@ -1,34 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_CATEGORY_TYPES_FWD_HPP
-#define DOGEN_SML_TYPES_CATEGORY_TYPES_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class category_types : unsigned int;
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/injector.hpp b/projects/sml/include/dogen/sml/types/injector.hpp
index 6f51d29..a5886b7 100644
--- a/projects/sml/include/dogen/sml/types/injector.hpp
+++ b/projects/sml/include/dogen/sml/types/injector.hpp
@@ -26,12 +26,15 @@
 #endif
 
 #include <list>
-#include "dogen/sml/types/pod.hpp"
+#include "dogen/sml/types/abstract_object.hpp"
 #include "dogen/sml/types/model.hpp"
 
 namespace dogen {
 namespace sml {
 
+/**
+ * @brief Injects system types into a model.
+ */
 class injector {
 public:
     injector() = default;
@@ -42,14 +45,17 @@ public:
 
 private:
     /**
-     * @brief Creates a key for the given pod.
+     * @brief Creates a key for the given entity.
      *
-     * @param p pod for which to create a key
+     * @param qn name of the entity for which to create the key
+     * @param gt type of the generation to apply to the key
+     * @param properties identity function for the entity
      * @param versioned if true, create a versioned key. Otherwise,
      * creates an unversioned key.
      */
-    pod create_key(const qname& qn, const generation_types gt,
-        const std::list<property>& properties, const bool versioned) const;
+    boost::shared_ptr<type> create_key(const qname& qn,
+        const generation_types gt, const std::list<property>& properties,
+        const bool versioned) const;
 
     /**
      * @brief Injects versioned and unversioned keys for keyed entities.
@@ -57,9 +63,9 @@ private:
     void inject_keys(model& m) const;
 
     /**
-     * @brief Injects the version property on the pod passed in.
+     * @brief Injects the version property on the object passed in.
      */
-    void inject_version(pod& p) const;
+    void inject_version(abstract_object& p) const;
 
     /**
      * @brief Injects the version property on any types marked as
diff --git a/projects/sml/include/dogen/sml/types/model.hpp b/projects/sml/include/dogen/sml/types/model.hpp
index 77601c4..dd1ac45 100644
--- a/projects/sml/include/dogen/sml/types/model.hpp
+++ b/projects/sml/include/dogen/sml/types/model.hpp
@@ -26,6 +26,7 @@
 #endif
 
 #include <algorithm>
+#include <boost/shared_ptr.hpp>
 #include <list>
 #include <string>
 #include <unordered_map>
@@ -35,14 +36,10 @@
 #include "dogen/sml/hash/qname_hash.hpp"
 #include "dogen/sml/serialization/model_fwd_ser.hpp"
 #include "dogen/sml/types/concept.hpp"
-#include "dogen/sml/types/enumeration.hpp"
 #include "dogen/sml/types/module.hpp"
-#include "dogen/sml/types/pod.hpp"
-#include "dogen/sml/types/primitive.hpp"
 #include "dogen/sml/types/qname.hpp"
 #include "dogen/sml/types/reference.hpp"
-#include "dogen/sml/types/service.hpp"
-#include "dogen/sml/types/value_object.hpp"
+#include "dogen/sml/types/type_fwd.hpp"
 
 namespace dogen {
 namespace sml {
@@ -64,17 +61,13 @@ public:
         const std::string& documentation,
         const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
         const std::string& name,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& primitives,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& enumerations,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& exceptions,
         const std::list<std::string>& external_module_path,
         const bool is_system,
         const std::unordered_map<std::string, dogen::sml::reference>& dependencies,
         const std::unordered_set<dogen::sml::qname>& leaves,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::service>& services,
         const std::unordered_map<dogen::sml::qname, dogen::sml::module>& modules,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts);
+        const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts,
+        const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& types);
 
 private:
     template<typename Archive>
@@ -123,46 +116,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Pods contained in the model.
-     */
-    /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods();
-    void pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v);
-    void pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>&& v);
-    /**@}*/
-
-    /**
-     * @brief Primitives contained in the model.
-     */
-    /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& primitives() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& primitives();
-    void primitives(const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& v);
-    void primitives(const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>&& v);
-    /**@}*/
-
-    /**
-     * @brief Enumerations contained in the model.
-     */
-    /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& enumerations() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& enumerations();
-    void enumerations(const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& v);
-    void enumerations(const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>&& v);
-    /**@}*/
-
-    /**
-     * @brief Exceptions contained in the model.
-     */
-    /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& exceptions() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& exceptions();
-    void exceptions(const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& v);
-    void exceptions(const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>&& v);
-    /**@}*/
-
-    /**
      * @brief Path of modules that contain this model.
      */
     /**@{*/
@@ -209,16 +162,6 @@ public:
     /**@}*/
 
     /**
-     * @brief Services contained in the model.
-     */
-    /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::service>& services() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::service>& services();
-    void services(const std::unordered_map<dogen::sml::qname, dogen::sml::service>& v);
-    void services(const std::unordered_map<dogen::sml::qname, dogen::sml::service>&& v);
-    /**@}*/
-
-    /**
      * @brief Modules contained in the model.
      */
     /**@{*/
@@ -238,6 +181,16 @@ public:
     void concepts(const std::unordered_map<dogen::sml::qname, dogen::sml::concept>&& v);
     /**@}*/
 
+    /**
+     * @brief All types contained in this model.
+     */
+    /**@{*/
+    const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& types() const;
+    std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& types();
+    void types(const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& v);
+    void types(const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >&& v);
+    /**@}*/
+
 public:
     bool operator==(const model& rhs) const;
     bool operator!=(const model& rhs) const {
@@ -252,17 +205,13 @@ private:
     std::string documentation_;
     std::vector<std::pair<std::string, std::string> > implementation_specific_parameters_;
     std::string name_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod> pods_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::primitive> primitives_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::enumeration> enumerations_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::value_object> exceptions_;
     std::list<std::string> external_module_path_;
     bool is_system_;
     std::unordered_map<std::string, dogen::sml::reference> dependencies_;
     std::unordered_set<dogen::sml::qname> leaves_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::service> services_;
     std::unordered_map<dogen::sml::qname, dogen::sml::module> modules_;
     std::unordered_map<dogen::sml::qname, dogen::sml::concept> concepts_;
+    std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> > types_;
 };
 
 } }
diff --git a/projects/sml/include/dogen/sml/types/pod.hpp b/projects/sml/include/dogen/sml/types/pod.hpp
deleted file mode 100644
index 9c4c494..0000000
--- a/projects/sml/include/dogen/sml/types/pod.hpp
+++ /dev/null
@@ -1,345 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_HPP
-#define DOGEN_SML_TYPES_POD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <algorithm>
-#include <boost/optional.hpp>
-#include <list>
-#include <string>
-#include <utility>
-#include <vector>
-#include "dogen/sml/serialization/pod_fwd_ser.hpp"
-#include "dogen/sml/types/category_types.hpp"
-#include "dogen/sml/types/generation_types.hpp"
-#include "dogen/sml/types/pod_types.hpp"
-#include "dogen/sml/types/property.hpp"
-#include "dogen/sml/types/qname.hpp"
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Represents a plain C++ object with basic associated behaviours.
- *
- * The name pod is misleading because its actually not used in the strict sense of POD as defined here:
- *
- *  <a href="http://en.wikipedia.org/wiki/Plain_old_data_structure">Plain old data structure</a>.
- */
-class pod final {
-public:
-    pod(const pod&) = default;
-    ~pod() = default;
-
-public:
-    pod();
-
-public:
-    pod(pod&& rhs);
-
-public:
-    pod(
-        const dogen::sml::qname& name,
-        const std::list<dogen::sml::property>& properties,
-        const boost::optional<dogen::sml::qname>& parent_name,
-        const boost::optional<dogen::sml::qname>& original_parent_name,
-        const std::list<dogen::sml::qname>& leaves,
-        const dogen::sml::generation_types& generation_type,
-        const bool is_parent,
-        const dogen::sml::category_types& category_type,
-        const dogen::sml::pod_types& pod_type,
-        const std::string& documentation,
-        const unsigned int number_of_type_arguments,
-        const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
-        const bool is_visitable,
-        const bool is_immutable,
-        const bool is_versioned,
-        const bool is_keyed,
-        const bool is_comparable,
-        const bool is_fluent,
-        const bool is_aggregate_root,
-        const boost::optional<dogen::sml::qname>& versioned_key,
-        const boost::optional<dogen::sml::qname>& unversioned_key,
-        const std::list<dogen::sml::qname>& modeled_concepts);
-
-private:
-    template<typename Archive>
-    friend void boost::serialization::save(Archive& ar, const pod& v, unsigned int version);
-
-    template<typename Archive>
-    friend void boost::serialization::load(Archive& ar, pod& v, unsigned int version);
-
-public:
-    /**
-     * @brief Qualified name for the type.
-     *
-     */
-    /**@{*/
-    const dogen::sml::qname& name() const;
-    dogen::sml::qname& name();
-    void name(const dogen::sml::qname& v);
-    void name(const dogen::sml::qname&& v);
-    /**@}*/
-
-    /**
-     * @brief All the properties this pod owns.
-     */
-    /**@{*/
-    const std::list<dogen::sml::property>& properties() const;
-    std::list<dogen::sml::property>& properties();
-    void properties(const std::list<dogen::sml::property>& v);
-    void properties(const std::list<dogen::sml::property>&& v);
-    /**@}*/
-
-    /**
-     * @brief Qualified name for the pod's parent, if the pod has one.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& parent_name() const;
-    boost::optional<dogen::sml::qname>& parent_name();
-    void parent_name(const boost::optional<dogen::sml::qname>& v);
-    void parent_name(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief Qualified name for the root of the inheritance hierarchy, if the pod is part of one.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& original_parent_name() const;
-    boost::optional<dogen::sml::qname>& original_parent_name();
-    void original_parent_name(const boost::optional<dogen::sml::qname>& v);
-    void original_parent_name(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief All concrete types which are indirectly or directly derived from this type.
-     */
-    /**@{*/
-    const std::list<dogen::sml::qname>& leaves() const;
-    std::list<dogen::sml::qname>& leaves();
-    void leaves(const std::list<dogen::sml::qname>& v);
-    void leaves(const std::list<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief What to do with this pod in terms of code generation
-     */
-    /**@{*/
-    dogen::sml::generation_types generation_type() const;
-    void generation_type(const dogen::sml::generation_types& v);
-    /**@}*/
-
-    /**
-     * @brief True if this class is the parent of one or more classes, false otherwise.
-     */
-    /**@{*/
-    bool is_parent() const;
-    void is_parent(const bool v);
-    /**@}*/
-
-    /**
-     * @brief Category of this type - whether its system or user defined.
-     */
-    /**@{*/
-    dogen::sml::category_types category_type() const;
-    void category_type(const dogen::sml::category_types& v);
-    /**@}*/
-
-    /**
-     * @brief What kind of pod is this.
-     */
-    /**@{*/
-    dogen::sml::pod_types pod_type() const;
-    void pod_type(const dogen::sml::pod_types& v);
-    /**@}*/
-
-    /**
-     * @brief Doxygen documentation for the type.
-     */
-    /**@{*/
-    const std::string& documentation() const;
-    std::string& documentation();
-    void documentation(const std::string& v);
-    void documentation(const std::string&& v);
-    /**@}*/
-
-    /**
-     * @brief How many type arguments does this type have
-     */
-    /**@{*/
-    unsigned int number_of_type_arguments() const;
-    void number_of_type_arguments(const unsigned int v);
-    /**@}*/
-
-    /**
-     * @brief Parameters associated with the pod which are opaque to SML.
-     */
-    /**@{*/
-    const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters() const;
-    std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters();
-    void implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >& v);
-    void implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >&& v);
-    /**@}*/
-
-    /**
-     * @brief If true, a visitor is to be generated for this type and its descendants.
-     *
-     * Only applicable if is_parent is true.
-     */
-    /**@{*/
-    bool is_visitable() const;
-    void is_visitable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, do not generate setters for the type's properties.
-     */
-    /**@{*/
-    bool is_immutable() const;
-    void is_immutable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, add a version property to the type.
-     */
-    /**@{*/
-    bool is_versioned() const;
-    void is_versioned(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, add key support for the type.
-     */
-    /**@{*/
-    bool is_keyed() const;
-    void is_keyed(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, generates the less than operator.
-     *
-     * A type is only comparable if all of its properties are primitives or strings,
-     * or other comparable model types.
-     */
-    /**@{*/
-    bool is_comparable() const;
-    void is_comparable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, generate fluent setters.
-     */
-    /**@{*/
-    bool is_fluent() const;
-    void is_fluent(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, this pod is a root of an aggregate.
-     */
-    /**@{*/
-    bool is_aggregate_root() const;
-    void is_aggregate_root(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If the pod is a versioned keyed entity, its versioned key.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& versioned_key() const;
-    boost::optional<dogen::sml::qname>& versioned_key();
-    void versioned_key(const boost::optional<dogen::sml::qname>& v);
-    void versioned_key(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief If the pod is an unversioned keyed entity, its unversioned key.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& unversioned_key() const;
-    boost::optional<dogen::sml::qname>& unversioned_key();
-    void unversioned_key(const boost::optional<dogen::sml::qname>& v);
-    void unversioned_key(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief List of concepts this pod models.
-     */
-    /**@{*/
-    const std::list<dogen::sml::qname>& modeled_concepts() const;
-    std::list<dogen::sml::qname>& modeled_concepts();
-    void modeled_concepts(const std::list<dogen::sml::qname>& v);
-    void modeled_concepts(const std::list<dogen::sml::qname>&& v);
-    /**@}*/
-
-public:
-    bool operator==(const pod& rhs) const;
-    bool operator!=(const pod& rhs) const {
-        return !this->operator==(rhs);
-    }
-
-public:
-    void swap(pod& other) noexcept;
-    pod& operator=(pod other);
-
-private:
-    dogen::sml::qname name_;
-    std::list<dogen::sml::property> properties_;
-    boost::optional<dogen::sml::qname> parent_name_;
-    boost::optional<dogen::sml::qname> original_parent_name_;
-    std::list<dogen::sml::qname> leaves_;
-    dogen::sml::generation_types generation_type_;
-    bool is_parent_;
-    dogen::sml::category_types category_type_;
-    dogen::sml::pod_types pod_type_;
-    std::string documentation_;
-    unsigned int number_of_type_arguments_;
-    std::vector<std::pair<std::string, std::string> > implementation_specific_parameters_;
-    bool is_visitable_;
-    bool is_immutable_;
-    bool is_versioned_;
-    bool is_keyed_;
-    bool is_comparable_;
-    bool is_fluent_;
-    bool is_aggregate_root_;
-    boost::optional<dogen::sml::qname> versioned_key_;
-    boost::optional<dogen::sml::qname> unversioned_key_;
-    std::list<dogen::sml::qname> modeled_concepts_;
-};
-
-} }
-
-namespace std {
-
-template<>
-inline void swap(
-    dogen::sml::pod& lhs,
-    dogen::sml::pod& rhs) {
-    lhs.swap(rhs);
-}
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_fwd.hpp b/projects/sml/include/dogen/sml/types/pod_fwd.hpp
deleted file mode 100644
index 651123b..0000000
--- a/projects/sml/include/dogen/sml/types/pod_fwd.hpp
+++ /dev/null
@@ -1,35 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_FWD_HPP
-#define DOGEN_SML_TYPES_POD_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-class pod;
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_types.hpp b/projects/sml/include/dogen/sml/types/pod_types.hpp
deleted file mode 100644
index 1633271..0000000
--- a/projects/sml/include/dogen/sml/types/pod_types.hpp
+++ /dev/null
@@ -1,49 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_TYPES_HPP
-#define DOGEN_SML_TYPES_POD_TYPES_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Types of pods.
- *
- * We need to classify pods with regards to distinguishing properties
- * which make code generation different.
- */
-enum class pod_types : unsigned int {
-    invalid = 0, ///< Represents an uninitialised enum
-    sequence_container = 1, ///< Pod is a sequence container
-    associative_container = 2, ///< Pod is an associative container
-    smart_pointer = 3, ///< Pod is a smart pointer
-    entity = 4, ///< Pod is a domain entity
-    value = 5, ///< Pod is a domain value
-    service = 6 ///< Pod is a service
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp b/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp
deleted file mode 100644
index b4c96d3..0000000
--- a/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp
+++ /dev/null
@@ -1,34 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_TYPES_FWD_HPP
-#define DOGEN_SML_TYPES_POD_TYPES_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class pod_types : unsigned int;
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/primitive_model_factory.hpp b/projects/sml/include/dogen/sml/types/primitive_model_factory.hpp
index 2601ce9..a611eee 100644
--- a/projects/sml/include/dogen/sml/types/primitive_model_factory.hpp
+++ b/projects/sml/include/dogen/sml/types/primitive_model_factory.hpp
@@ -26,12 +26,16 @@
 #endif
 
 #include <string>
-#include "dogen/sml/types/primitive.hpp"
+#include <boost/shared_ptr.hpp>
+#include "dogen/sml/types/type.hpp"
 #include "dogen/sml/types/model.hpp"
 
 namespace dogen {
 namespace sml {
 
+/**
+ * @brief Generates the system model for the primitive types.
+ */
 class primitive_model_factory {
 public:
     primitive_model_factory() = delete;
@@ -41,9 +45,15 @@ public:
     primitive_model_factory& operator=(const primitive_model_factory&) = delete;
 
 private:
-    static primitive create(const std::string& name);
+    /**
+     * @brief Create a new primitive.
+     */
+    static boost::shared_ptr<type> create_primitive(const std::string& name);
 
 public:
+    /**
+     * @brief Create all primitives.
+     */
     static model create();
 };
 
diff --git a/projects/sml/include/dogen/sml/types/std_model_factory.hpp b/projects/sml/include/dogen/sml/types/std_model_factory.hpp
index cc19578..033a699 100644
--- a/projects/sml/include/dogen/sml/types/std_model_factory.hpp
+++ b/projects/sml/include/dogen/sml/types/std_model_factory.hpp
@@ -26,13 +26,18 @@
 #endif
 
 #include <string>
-#include "dogen/sml/types/pod.hpp"
+#include <boost/shared_ptr.hpp>
+#include "dogen/sml/types/type.hpp"
+#include "dogen/sml/types/value_object_types.hpp"
 #include "dogen/sml/types/primitive.hpp"
 #include "dogen/sml/types/model.hpp"
 
 namespace dogen {
 namespace sml {
 
+/**
+ * @brief Generates the system model for the standard library types.
+ */
 class std_model_factory {
 public:
     std_model_factory() = delete;
@@ -42,11 +47,21 @@ public:
     std_model_factory& operator=(const std_model_factory&) = delete;
 
 private:
-    static primitive create_primitive(const std::string& name);
-    static pod create_pod(const std::string& name, pod_types pt);
+    /**
+     * @brief Create a new primitive.
+     */
+    static boost::shared_ptr<type> create_primitive(const std::string& name);
 
+    /**
+     * @brief Create a new value object.
+     */
+    static boost::shared_ptr<type> create_value_object(
+        const std::string& name, value_object_types t);
 
 public:
+    /**
+     * @brief Create all standard library types.
+     */
     static model create();
 };
 
diff --git a/projects/sml/include/dogen/sml/types/value_object.hpp b/projects/sml/include/dogen/sml/types/value_object.hpp
index 7c05cd3..c3555db 100644
--- a/projects/sml/include/dogen/sml/types/value_object.hpp
+++ b/projects/sml/include/dogen/sml/types/value_object.hpp
@@ -30,7 +30,7 @@
 #include "dogen/sml/serialization/value_object_fwd_ser.hpp"
 #include "dogen/sml/types/abstract_object.hpp"
 #include "dogen/sml/types/type_visitor.hpp"
-#include "dogen/sml/types/value_types.hpp"
+#include "dogen/sml/types/value_object_types.hpp"
 
 namespace dogen {
 namespace sml {
@@ -71,7 +71,7 @@ public:
         const bool is_comparable,
         const bool is_fluent,
         const std::list<dogen::sml::qname>& modeled_concepts,
-        const dogen::sml::value_types& type);
+        const dogen::sml::value_object_types& type);
 
 private:
     template<typename Archive>
@@ -105,8 +105,8 @@ public:
      * @brief Type of this value object.
      */
     /**@{*/
-    dogen::sml::value_types type() const;
-    void type(const dogen::sml::value_types& v);
+    dogen::sml::value_object_types type() const;
+    void type(const dogen::sml::value_object_types& v);
     /**@}*/
 
 public:
@@ -123,7 +123,7 @@ public:
     value_object& operator=(value_object other);
 
 private:
-    dogen::sml::value_types type_;
+    dogen::sml::value_object_types type_;
 };
 
 } }
diff --git a/projects/sml/include/dogen/sml/types/value_object_types.hpp b/projects/sml/include/dogen/sml/types/value_object_types.hpp
new file mode 100644
index 0000000..51be551
--- /dev/null
+++ b/projects/sml/include/dogen/sml/types/value_object_types.hpp
@@ -0,0 +1,47 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_TYPES_VALUE_OBJECT_TYPES_HPP
+#define DOGEN_SML_TYPES_VALUE_OBJECT_TYPES_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+namespace dogen {
+namespace sml {
+
+/**
+ * @brief Types of value objects.
+ */
+enum class value_object_types : unsigned int {
+    invalid = 0, ///< Represents an uninitialised enum
+    plain = 1, ///< Regular value object with no distinguishing features.
+    unversioned_key = 2, ///< Value is an unversioned key.
+    versioned_key = 3, ///< Value is a versioned key.
+    exception = 4, ///< Value represents an exception type.
+    smart_pointer = 5, ///< Value is a smart pointer.
+    associative_container = 6, ///< Type is an associative container.
+    sequence_container = 7 ///< Type is a sequence container.
+};
+
+} }
+
+#endif
diff --git a/projects/sml/include/dogen/sml/types/value_object_types_fwd.hpp b/projects/sml/include/dogen/sml/types/value_object_types_fwd.hpp
new file mode 100644
index 0000000..d1f39f0
--- /dev/null
+++ b/projects/sml/include/dogen/sml/types/value_object_types_fwd.hpp
@@ -0,0 +1,34 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_SML_TYPES_VALUE_OBJECT_TYPES_FWD_HPP
+#define DOGEN_SML_TYPES_VALUE_OBJECT_TYPES_FWD_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+namespace dogen {
+namespace sml {
+
+enum class value_object_types : unsigned int;
+} }
+
+#endif
diff --git a/projects/sml/include/dogen/sml/types/value_types.hpp b/projects/sml/include/dogen/sml/types/value_types.hpp
deleted file mode 100644
index c0e5b3c..0000000
--- a/projects/sml/include/dogen/sml/types/value_types.hpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_VALUE_TYPES_HPP
-#define DOGEN_SML_TYPES_VALUE_TYPES_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class value_types : unsigned int {
-    invalid = 0, ///< Represents an uninitialised enum
-    user_defined = 1, ///< Value was created by the user.
-    unversioned_key = 2, ///< Value is an unversioned key.
-    versioned_key = 3, ///< Value is a versioned key.
-    exception = 4, ///< Value represents an exception type.
-    smart_pointer = 5, ///< Value is a smart pointer.
-    associative_container = 6, ///< Type is an associative container.
-    sequence_container = 7 ///< Type is a sequence container.
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/value_types_fwd.hpp b/projects/sml/include/dogen/sml/types/value_types_fwd.hpp
deleted file mode 100644
index ca17c0b..0000000
--- a/projects/sml/include/dogen/sml/types/value_types_fwd.hpp
+++ /dev/null
@@ -1,34 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_VALUE_TYPES_FWD_HPP
-#define DOGEN_SML_TYPES_VALUE_TYPES_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class value_types : unsigned int;
-} }
-
-#endif
diff --git a/projects/sml/src/hash/model_hash.cpp b/projects/sml/src/hash/model_hash.cpp
index 30c7d7b..4e344c8 100644
--- a/projects/sml/src/hash/model_hash.cpp
+++ b/projects/sml/src/hash/model_hash.cpp
@@ -19,15 +19,11 @@
  *
  */
 #include "dogen/sml/hash/concept_hash.hpp"
-#include "dogen/sml/hash/enumeration_hash.hpp"
 #include "dogen/sml/hash/model_hash.hpp"
 #include "dogen/sml/hash/module_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
-#include "dogen/sml/hash/primitive_hash.hpp"
 #include "dogen/sml/hash/qname_hash.hpp"
 #include "dogen/sml/hash/reference_hash.hpp"
-#include "dogen/sml/hash/service_hash.hpp"
-#include "dogen/sml/hash/value_object_hash.hpp"
+#include "dogen/sml/hash/type_hash.hpp"
 
 namespace {
 
@@ -54,42 +50,6 @@ inline std::size_t hash_std_vector_std_pair_std_string_std_string_(const std::ve
     return seed;
 }
 
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_pod(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i.first);
-        combine(seed, i.second);
-    }
-    return seed;
-}
-
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i.first);
-        combine(seed, i.second);
-    }
-    return seed;
-}
-
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i.first);
-        combine(seed, i.second);
-    }
-    return seed;
-}
-
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_value_object(const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i.first);
-        combine(seed, i.second);
-    }
-    return seed;
-}
-
 inline std::size_t hash_std_list_std_string(const std::list<std::string>& v){
     std::size_t seed(0);
     for (const auto i : v) {
@@ -115,7 +75,7 @@ inline std::size_t hash_std_unordered_set_dogen_sml_qname(const std::unordered_s
     return seed;
 }
 
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_service(const std::unordered_map<dogen::sml::qname, dogen::sml::service>& v){
+inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_module(const std::unordered_map<dogen::sml::qname, dogen::sml::module>& v){
     std::size_t seed(0);
     for (const auto i : v) {
         combine(seed, i.first);
@@ -124,7 +84,7 @@ inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_service(cons
     return seed;
 }
 
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_module(const std::unordered_map<dogen::sml::qname, dogen::sml::module>& v){
+inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_concept(const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& v){
     std::size_t seed(0);
     for (const auto i : v) {
         combine(seed, i.first);
@@ -133,11 +93,17 @@ inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_module(const
     return seed;
 }
 
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_concept(const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& v){
+inline std::size_t hash_boost_shared_ptr_dogen_sml_type(const boost::shared_ptr<dogen::sml::type>& v){
+    std::size_t seed(0);
+    combine(seed, *v);
+    return seed;
+}
+
+inline std::size_t hash_std_unordered_map_dogen_sml_qname_boost_shared_ptr_dogen_sml_type_(const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& v){
     std::size_t seed(0);
     for (const auto i : v) {
         combine(seed, i.first);
-        combine(seed, i.second);
+        combine(seed, hash_boost_shared_ptr_dogen_sml_type(i.second));
     }
     return seed;
 }
@@ -153,17 +119,13 @@ std::size_t model_hasher::hash(const model&v) {
     combine(seed, v.documentation());
     combine(seed, hash_std_vector_std_pair_std_string_std_string_(v.implementation_specific_parameters()));
     combine(seed, v.name());
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_pod(v.pods()));
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(v.primitives()));
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(v.enumerations()));
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_value_object(v.exceptions()));
     combine(seed, hash_std_list_std_string(v.external_module_path()));
     combine(seed, v.is_system());
     combine(seed, hash_std_unordered_map_std_string_dogen_sml_reference(v.dependencies()));
     combine(seed, hash_std_unordered_set_dogen_sml_qname(v.leaves()));
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_service(v.services()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_module(v.modules()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_concept(v.concepts()));
+    combine(seed, hash_std_unordered_map_dogen_sml_qname_boost_shared_ptr_dogen_sml_type_(v.types()));
 
     return seed;
 }
diff --git a/projects/sml/src/hash/pod_hash.cpp b/projects/sml/src/hash/pod_hash.cpp
deleted file mode 100644
index 44fd6a0..0000000
--- a/projects/sml/src/hash/pod_hash.cpp
+++ /dev/null
@@ -1,113 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/hash/category_types_hash.hpp"
-#include "dogen/sml/hash/generation_types_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
-#include "dogen/sml/hash/pod_types_hash.hpp"
-#include "dogen/sml/hash/property_hash.hpp"
-#include "dogen/sml/hash/qname_hash.hpp"
-
-namespace {
-
-template <typename HashableType>
-inline void combine(std::size_t& seed, const HashableType& value)
-{
-    std::hash<HashableType> hasher;
-    seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
-}
-
-inline std::size_t hash_std_list_dogen_sml_property(const std::list<dogen::sml::property>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i);
-    }
-    return seed;
-}
-
-inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
-    std::size_t seed(0);
-
-    if (!v)
-        return seed;
-
-    combine(seed, *v);
-    return seed;
-}
-
-inline std::size_t hash_std_list_dogen_sml_qname(const std::list<dogen::sml::qname>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i);
-    }
-    return seed;
-}
-
-inline std::size_t hash_std_pair_std_string_std_string(const std::pair<std::string, std::string>& v){
-    std::size_t seed(0);
-
-    combine(seed, v.first);
-    combine(seed, v.second);
-    return seed;
-}
-
-inline std::size_t hash_std_vector_std_pair_std_string_std_string_(const std::vector<std::pair<std::string, std::string> >& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, hash_std_pair_std_string_std_string(i));
-    }
-    return seed;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-std::size_t pod_hasher::hash(const pod&v) {
-    std::size_t seed(0);
-
-    combine(seed, v.name());
-    combine(seed, hash_std_list_dogen_sml_property(v.properties()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.parent_name()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.original_parent_name()));
-    combine(seed, hash_std_list_dogen_sml_qname(v.leaves()));
-    combine(seed, v.generation_type());
-    combine(seed, v.is_parent());
-    combine(seed, v.category_type());
-    combine(seed, v.pod_type());
-    combine(seed, v.documentation());
-    combine(seed, v.number_of_type_arguments());
-    combine(seed, hash_std_vector_std_pair_std_string_std_string_(v.implementation_specific_parameters()));
-    combine(seed, v.is_visitable());
-    combine(seed, v.is_immutable());
-    combine(seed, v.is_versioned());
-    combine(seed, v.is_keyed());
-    combine(seed, v.is_comparable());
-    combine(seed, v.is_fluent());
-    combine(seed, v.is_aggregate_root());
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.versioned_key()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.unversioned_key()));
-    combine(seed, hash_std_list_dogen_sml_qname(v.modeled_concepts()));
-
-    return seed;
-}
-
-} }
diff --git a/projects/sml/src/hash/value_object_hash.cpp b/projects/sml/src/hash/value_object_hash.cpp
index 838bf99..7c1588a 100644
--- a/projects/sml/src/hash/value_object_hash.cpp
+++ b/projects/sml/src/hash/value_object_hash.cpp
@@ -20,7 +20,7 @@
  */
 #include "dogen/sml/hash/abstract_object_hash.hpp"
 #include "dogen/sml/hash/value_object_hash.hpp"
-#include "dogen/sml/hash/value_types_hash.hpp"
+#include "dogen/sml/hash/value_object_types_hash.hpp"
 
 namespace {
 
diff --git a/projects/sml/src/io/category_types_io.cpp b/projects/sml/src/io/category_types_io.cpp
deleted file mode 100644
index 959b881..0000000
--- a/projects/sml/src/io/category_types_io.cpp
+++ /dev/null
@@ -1,52 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <ostream>
-#include <stdexcept>
-#include "dogen/sml/io/category_types_io.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const category_types& v) {
-    s << "{ " << "\"__type__\": " << "\"category_types\", " << "\"value\": ";
-
-    std::string attr;
-    switch (v) {
-    case category_types::invalid:
-        attr = "\"invalid\"";
-        break;
-    case category_types::user_defined:
-        attr = "\"user_defined\"";
-        break;
-    case category_types::versioned_key:
-        attr = "\"versioned_key\"";
-        break;
-    case category_types::unversioned_key:
-        attr = "\"unversioned_key\"";
-        break;
-    default:
-        throw std::invalid_argument("Invalid value for category_types");
-    }
-    s << attr << " }";
-    return s;
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/io/model_io.cpp b/projects/sml/src/io/model_io.cpp
index 6333fb2..2df784d 100644
--- a/projects/sml/src/io/model_io.cpp
+++ b/projects/sml/src/io/model_io.cpp
@@ -22,15 +22,11 @@
 #include <boost/io/ios_state.hpp>
 #include <ostream>
 #include "dogen/sml/io/concept_io.hpp"
-#include "dogen/sml/io/enumeration_io.hpp"
 #include "dogen/sml/io/model_io.hpp"
 #include "dogen/sml/io/module_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
-#include "dogen/sml/io/primitive_io.hpp"
 #include "dogen/sml/io/qname_io.hpp"
 #include "dogen/sml/io/reference_io.hpp"
-#include "dogen/sml/io/service_io.hpp"
-#include "dogen/sml/io/value_object_io.hpp"
+#include "dogen/sml/io/type_io.hpp"
 
 
 inline std::string tidy_up_string(std::string s) {
@@ -69,78 +65,6 @@ inline std::ostream& operator<<(std::ostream& s, const std::vector<std::pair<std
 
 namespace std {
 
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v) {
-    s << "[";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
-        s << i->first;
-        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
-        s << i->second;
-        s << " } ]";
-    }
-    s << " ] ";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& v) {
-    s << "[";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
-        s << i->first;
-        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
-        s << i->second;
-        s << " } ]";
-    }
-    s << " ] ";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& v) {
-    s << "[";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
-        s << i->first;
-        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
-        s << i->second;
-        s << " } ]";
-    }
-    s << " ] ";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& v) {
-    s << "[";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
-        s << i->first;
-        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
-        s << i->second;
-        s << " } ]";
-    }
-    s << " ] ";
-    return s;
-}
-
-}
-
-namespace std {
-
 inline std::ostream& operator<<(std::ostream& s, const std::list<std::string>& v) {
     s << "[ ";
     for (auto i(v.begin()); i != v.end(); ++i) {
@@ -187,7 +111,7 @@ inline std::ostream& operator<<(std::ostream& s, const std::unordered_set<dogen:
 
 namespace std {
 
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::service>& v) {
+inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::module>& v) {
     s << "[";
     for (auto i(v.begin()); i != v.end(); ++i) {
         if (i != v.begin()) s << ", ";
@@ -205,7 +129,7 @@ inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen:
 
 namespace std {
 
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::module>& v) {
+inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& v) {
     s << "[";
     for (auto i(v.begin()); i != v.end(); ++i) {
         if (i != v.begin()) s << ", ";
@@ -221,9 +145,25 @@ inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen:
 
 }
 
+namespace boost {
+
+inline std::ostream& operator<<(std::ostream& s, const boost::shared_ptr<dogen::sml::type>& v) {
+    s << "{ " << "\"__type__\": " << "\"boost::shared_ptr\"" << ", "
+      << "\"memory\": " << "\"" << static_cast<void*>(v.get()) << "\"" << ", ";
+
+    if (v)
+        s << "\"data\": " << *v;
+    else
+        s << "\"data\": ""\"<empty>\"";
+    s<< " }";
+    return s;
+}
+
+}
+
 namespace std {
 
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& v) {
+inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& v) {
     s << "[";
     for (auto i(v.begin()); i != v.end(); ++i) {
         if (i != v.begin()) s << ", ";
@@ -254,17 +194,13 @@ std::ostream& operator<<(std::ostream& s, const model& v) {
       << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
       << "\"implementation_specific_parameters\": " << v.implementation_specific_parameters() << ", "
       << "\"name\": " << "\"" << tidy_up_string(v.name()) << "\"" << ", "
-      << "\"pods\": " << v.pods() << ", "
-      << "\"primitives\": " << v.primitives() << ", "
-      << "\"enumerations\": " << v.enumerations() << ", "
-      << "\"exceptions\": " << v.exceptions() << ", "
       << "\"external_module_path\": " << v.external_module_path() << ", "
       << "\"is_system\": " << v.is_system() << ", "
       << "\"dependencies\": " << v.dependencies() << ", "
       << "\"leaves\": " << v.leaves() << ", "
-      << "\"services\": " << v.services() << ", "
       << "\"modules\": " << v.modules() << ", "
-      << "\"concepts\": " << v.concepts()
+      << "\"concepts\": " << v.concepts() << ", "
+      << "\"types\": " << v.types()
       << " }";
     return(s);
 }
diff --git a/projects/sml/src/io/pod_io.cpp b/projects/sml/src/io/pod_io.cpp
deleted file mode 100644
index 50fbc53..0000000
--- a/projects/sml/src/io/pod_io.cpp
+++ /dev/null
@@ -1,147 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <boost/algorithm/string.hpp>
-#include <boost/io/ios_state.hpp>
-#include <ostream>
-#include "dogen/sml/io/category_types_io.hpp"
-#include "dogen/sml/io/generation_types_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
-#include "dogen/sml/io/pod_types_io.hpp"
-#include "dogen/sml/io/property_io.hpp"
-#include "dogen/sml/io/qname_io.hpp"
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::list<dogen::sml::property>& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-namespace boost {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
-    s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
-
-    if (v)
-        s << "\"data\": " << *v;
-    else
-        s << "\"data\": ""\"<empty>\"";
-    s << " }";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::list<dogen::sml::qname>& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-
-inline std::string tidy_up_string(std::string s) {
-    boost::replace_all(s, "\r\n", "<new_line>");
-    boost::replace_all(s, "\n", "<new_line>");
-    boost::replace_all(s, "\"", "<quote>");
-    return s;
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::pair<std::string, std::string>& v) {
-    s << "{ " << "\"__type__\": " << "\"std::pair\"" << ", ";
-
-    s << "\"first\": " << "\"" << tidy_up_string(v.first) << "\"" << ", ";
-    s << "\"second\": " << "\"" << tidy_up_string(v.second) << "\"";
-    s << " }";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::vector<std::pair<std::string, std::string> >& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod& v) {
-    boost::io::ios_flags_saver ifs(s);
-    s.setf(std::ios_base::boolalpha);
-    s.setf(std::ios::fixed, std::ios::floatfield);
-    s.precision(6);
-    s.setf(std::ios::showpoint);
-
-    s << " { "
-      << "\"__type__\": " << "\"dogen::sml::pod\"" << ", "
-      << "\"name\": " << v.name() << ", "
-      << "\"properties\": " << v.properties() << ", "
-      << "\"parent_name\": " << v.parent_name() << ", "
-      << "\"original_parent_name\": " << v.original_parent_name() << ", "
-      << "\"leaves\": " << v.leaves() << ", "
-      << "\"generation_type\": " << v.generation_type() << ", "
-      << "\"is_parent\": " << v.is_parent() << ", "
-      << "\"category_type\": " << v.category_type() << ", "
-      << "\"pod_type\": " << v.pod_type() << ", "
-      << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"number_of_type_arguments\": " << v.number_of_type_arguments() << ", "
-      << "\"implementation_specific_parameters\": " << v.implementation_specific_parameters() << ", "
-      << "\"is_visitable\": " << v.is_visitable() << ", "
-      << "\"is_immutable\": " << v.is_immutable() << ", "
-      << "\"is_versioned\": " << v.is_versioned() << ", "
-      << "\"is_keyed\": " << v.is_keyed() << ", "
-      << "\"is_comparable\": " << v.is_comparable() << ", "
-      << "\"is_fluent\": " << v.is_fluent() << ", "
-      << "\"is_aggregate_root\": " << v.is_aggregate_root() << ", "
-      << "\"versioned_key\": " << v.versioned_key() << ", "
-      << "\"unversioned_key\": " << v.unversioned_key() << ", "
-      << "\"modeled_concepts\": " << v.modeled_concepts()
-      << " }";
-    return(s);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/io/pod_types_io.cpp b/projects/sml/src/io/pod_types_io.cpp
deleted file mode 100644
index b4b0425..0000000
--- a/projects/sml/src/io/pod_types_io.cpp
+++ /dev/null
@@ -1,61 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <ostream>
-#include <stdexcept>
-#include "dogen/sml/io/pod_types_io.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod_types& v) {
-    s << "{ " << "\"__type__\": " << "\"pod_types\", " << "\"value\": ";
-
-    std::string attr;
-    switch (v) {
-    case pod_types::invalid:
-        attr = "\"invalid\"";
-        break;
-    case pod_types::sequence_container:
-        attr = "\"sequence_container\"";
-        break;
-    case pod_types::associative_container:
-        attr = "\"associative_container\"";
-        break;
-    case pod_types::smart_pointer:
-        attr = "\"smart_pointer\"";
-        break;
-    case pod_types::entity:
-        attr = "\"entity\"";
-        break;
-    case pod_types::value:
-        attr = "\"value\"";
-        break;
-    case pod_types::service:
-        attr = "\"service\"";
-        break;
-    default:
-        throw std::invalid_argument("Invalid value for pod_types");
-    }
-    s << attr << " }";
-    return s;
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/io/value_object_io.cpp b/projects/sml/src/io/value_object_io.cpp
index 0387f99..0ab7532 100644
--- a/projects/sml/src/io/value_object_io.cpp
+++ b/projects/sml/src/io/value_object_io.cpp
@@ -21,7 +21,7 @@
 #include <ostream>
 #include "dogen/sml/io/abstract_object_io.hpp"
 #include "dogen/sml/io/value_object_io.hpp"
-#include "dogen/sml/io/value_types_io.hpp"
+#include "dogen/sml/io/value_object_types_io.hpp"
 
 namespace dogen {
 namespace sml {
diff --git a/projects/sml/src/io/value_object_types_io.cpp b/projects/sml/src/io/value_object_types_io.cpp
new file mode 100644
index 0000000..5a6f764
--- /dev/null
+++ b/projects/sml/src/io/value_object_types_io.cpp
@@ -0,0 +1,64 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#include <ostream>
+#include <stdexcept>
+#include "dogen/sml/io/value_object_types_io.hpp"
+
+namespace dogen {
+namespace sml {
+
+std::ostream& operator<<(std::ostream& s, const value_object_types& v) {
+    s << "{ " << "\"__type__\": " << "\"value_object_types\", " << "\"value\": ";
+
+    std::string attr;
+    switch (v) {
+    case value_object_types::invalid:
+        attr = "\"invalid\"";
+        break;
+    case value_object_types::plain:
+        attr = "\"plain\"";
+        break;
+    case value_object_types::unversioned_key:
+        attr = "\"unversioned_key\"";
+        break;
+    case value_object_types::versioned_key:
+        attr = "\"versioned_key\"";
+        break;
+    case value_object_types::exception:
+        attr = "\"exception\"";
+        break;
+    case value_object_types::smart_pointer:
+        attr = "\"smart_pointer\"";
+        break;
+    case value_object_types::associative_container:
+        attr = "\"associative_container\"";
+        break;
+    case value_object_types::sequence_container:
+        attr = "\"sequence_container\"";
+        break;
+    default:
+        throw std::invalid_argument("Invalid value for value_object_types");
+    }
+    s << attr << " }";
+    return s;
+}
+
+} }
\ No newline at end of file
diff --git a/projects/sml/src/io/value_types_io.cpp b/projects/sml/src/io/value_types_io.cpp
deleted file mode 100644
index 46aeb97..0000000
--- a/projects/sml/src/io/value_types_io.cpp
+++ /dev/null
@@ -1,64 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <ostream>
-#include <stdexcept>
-#include "dogen/sml/io/value_types_io.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const value_types& v) {
-    s << "{ " << "\"__type__\": " << "\"value_types\", " << "\"value\": ";
-
-    std::string attr;
-    switch (v) {
-    case value_types::invalid:
-        attr = "\"invalid\"";
-        break;
-    case value_types::user_defined:
-        attr = "\"user_defined\"";
-        break;
-    case value_types::unversioned_key:
-        attr = "\"unversioned_key\"";
-        break;
-    case value_types::versioned_key:
-        attr = "\"versioned_key\"";
-        break;
-    case value_types::exception:
-        attr = "\"exception\"";
-        break;
-    case value_types::smart_pointer:
-        attr = "\"smart_pointer\"";
-        break;
-    case value_types::associative_container:
-        attr = "\"associative_container\"";
-        break;
-    case value_types::sequence_container:
-        attr = "\"sequence_container\"";
-        break;
-    default:
-        throw std::invalid_argument("Invalid value for value_types");
-    }
-    s << attr << " }";
-    return s;
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/serialization/model_ser.cpp b/projects/sml/src/serialization/model_ser.cpp
index 6b9a204..c95cd5d 100644
--- a/projects/sml/src/serialization/model_ser.cpp
+++ b/projects/sml/src/serialization/model_ser.cpp
@@ -28,19 +28,16 @@
 #include <boost/archive/xml_oarchive.hpp>
 #include <boost/serialization/list.hpp>
 #include <boost/serialization/nvp.hpp>
+#include <boost/serialization/shared_ptr.hpp>
 #include <boost/serialization/string.hpp>
 #include <boost/serialization/utility.hpp>
 #include <boost/serialization/vector.hpp>
 #include "dogen/sml/serialization/concept_ser.hpp"
-#include "dogen/sml/serialization/enumeration_ser.hpp"
 #include "dogen/sml/serialization/model_ser.hpp"
 #include "dogen/sml/serialization/module_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
-#include "dogen/sml/serialization/primitive_ser.hpp"
 #include "dogen/sml/serialization/qname_ser.hpp"
 #include "dogen/sml/serialization/reference_ser.hpp"
-#include "dogen/sml/serialization/service_ser.hpp"
-#include "dogen/sml/serialization/value_object_ser.hpp"
+#include "dogen/sml/serialization/type_ser.hpp"
 #include "dogen/utility/serialization/unordered_map.hpp"
 #include "dogen/utility/serialization/unordered_set.hpp"
 
@@ -59,17 +56,13 @@ void save(Archive& ar,
     ar << make_nvp("documentation", v.documentation_);
     ar << make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
     ar << make_nvp("name", v.name_);
-    ar << make_nvp("pods", v.pods_);
-    ar << make_nvp("primitives", v.primitives_);
-    ar << make_nvp("enumerations", v.enumerations_);
-    ar << make_nvp("exceptions", v.exceptions_);
     ar << make_nvp("external_module_path", v.external_module_path_);
     ar << make_nvp("is_system", v.is_system_);
     ar << make_nvp("dependencies", v.dependencies_);
     ar << make_nvp("leaves", v.leaves_);
-    ar << make_nvp("services", v.services_);
     ar << make_nvp("modules", v.modules_);
     ar << make_nvp("concepts", v.concepts_);
+    ar << make_nvp("types", v.types_);
 }
 
 template<typename Archive>
@@ -79,17 +72,13 @@ void load(Archive& ar,
     ar >> make_nvp("documentation", v.documentation_);
     ar >> make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
     ar >> make_nvp("name", v.name_);
-    ar >> make_nvp("pods", v.pods_);
-    ar >> make_nvp("primitives", v.primitives_);
-    ar >> make_nvp("enumerations", v.enumerations_);
-    ar >> make_nvp("exceptions", v.exceptions_);
     ar >> make_nvp("external_module_path", v.external_module_path_);
     ar >> make_nvp("is_system", v.is_system_);
     ar >> make_nvp("dependencies", v.dependencies_);
     ar >> make_nvp("leaves", v.leaves_);
-    ar >> make_nvp("services", v.services_);
     ar >> make_nvp("modules", v.modules_);
     ar >> make_nvp("concepts", v.concepts_);
+    ar >> make_nvp("types", v.types_);
 }
 
 } }
diff --git a/projects/sml/src/serialization/pod_ser.cpp b/projects/sml/src/serialization/pod_ser.cpp
deleted file mode 100644
index fbb998a..0000000
--- a/projects/sml/src/serialization/pod_ser.cpp
+++ /dev/null
@@ -1,128 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <boost/archive/binary_iarchive.hpp>
-#include <boost/archive/binary_oarchive.hpp>
-#include <boost/archive/polymorphic_iarchive.hpp>
-#include <boost/archive/polymorphic_oarchive.hpp>
-#include <boost/archive/text_iarchive.hpp>
-#include <boost/archive/text_oarchive.hpp>
-#include <boost/archive/xml_iarchive.hpp>
-#include <boost/archive/xml_oarchive.hpp>
-#include <boost/serialization/list.hpp>
-#include <boost/serialization/nvp.hpp>
-#include <boost/serialization/optional.hpp>
-#include <boost/serialization/string.hpp>
-#include <boost/serialization/utility.hpp>
-#include <boost/serialization/vector.hpp>
-#include "dogen/sml/serialization/category_types_ser.hpp"
-#include "dogen/sml/serialization/generation_types_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
-#include "dogen/sml/serialization/pod_types_ser.hpp"
-#include "dogen/sml/serialization/property_ser.hpp"
-#include "dogen/sml/serialization/qname_ser.hpp"
-
-#ifdef __linux__
-#include "eos/portable_iarchive.hpp"
-#include "eos/portable_oarchive.hpp"
-#endif
-
-namespace boost {
-namespace serialization {
-
-template<typename Archive>
-void save(Archive& ar,
-    const dogen::sml::pod& v,
-    const unsigned int /*version*/) {
-    ar << make_nvp("name", v.name_);
-    ar << make_nvp("properties", v.properties_);
-    ar << make_nvp("parent_name", v.parent_name_);
-    ar << make_nvp("original_parent_name", v.original_parent_name_);
-    ar << make_nvp("leaves", v.leaves_);
-    ar << make_nvp("generation_type", v.generation_type_);
-    ar << make_nvp("is_parent", v.is_parent_);
-    ar << make_nvp("category_type", v.category_type_);
-    ar << make_nvp("pod_type", v.pod_type_);
-    ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("number_of_type_arguments", v.number_of_type_arguments_);
-    ar << make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
-    ar << make_nvp("is_visitable", v.is_visitable_);
-    ar << make_nvp("is_immutable", v.is_immutable_);
-    ar << make_nvp("is_versioned", v.is_versioned_);
-    ar << make_nvp("is_keyed", v.is_keyed_);
-    ar << make_nvp("is_comparable", v.is_comparable_);
-    ar << make_nvp("is_fluent", v.is_fluent_);
-    ar << make_nvp("is_aggregate_root", v.is_aggregate_root_);
-    ar << make_nvp("versioned_key", v.versioned_key_);
-    ar << make_nvp("unversioned_key", v.unversioned_key_);
-    ar << make_nvp("modeled_concepts", v.modeled_concepts_);
-}
-
-template<typename Archive>
-void load(Archive& ar,
-    dogen::sml::pod& v,
-    const unsigned int /*version*/) {
-    ar >> make_nvp("name", v.name_);
-    ar >> make_nvp("properties", v.properties_);
-    ar >> make_nvp("parent_name", v.parent_name_);
-    ar >> make_nvp("original_parent_name", v.original_parent_name_);
-    ar >> make_nvp("leaves", v.leaves_);
-    ar >> make_nvp("generation_type", v.generation_type_);
-    ar >> make_nvp("is_parent", v.is_parent_);
-    ar >> make_nvp("category_type", v.category_type_);
-    ar >> make_nvp("pod_type", v.pod_type_);
-    ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("number_of_type_arguments", v.number_of_type_arguments_);
-    ar >> make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
-    ar >> make_nvp("is_visitable", v.is_visitable_);
-    ar >> make_nvp("is_immutable", v.is_immutable_);
-    ar >> make_nvp("is_versioned", v.is_versioned_);
-    ar >> make_nvp("is_keyed", v.is_keyed_);
-    ar >> make_nvp("is_comparable", v.is_comparable_);
-    ar >> make_nvp("is_fluent", v.is_fluent_);
-    ar >> make_nvp("is_aggregate_root", v.is_aggregate_root_);
-    ar >> make_nvp("versioned_key", v.versioned_key_);
-    ar >> make_nvp("unversioned_key", v.unversioned_key_);
-    ar >> make_nvp("modeled_concepts", v.modeled_concepts_);
-}
-
-} }
-
-namespace boost {
-namespace serialization {
-
-template void save(archive::polymorphic_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::polymorphic_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::text_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::text_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::binary_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::binary_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::xml_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::xml_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-#ifdef __linux__
-template void save(eos::portable_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(eos::portable_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-#endif
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/serialization/value_object_ser.cpp b/projects/sml/src/serialization/value_object_ser.cpp
index bf99351..ebef509 100644
--- a/projects/sml/src/serialization/value_object_ser.cpp
+++ b/projects/sml/src/serialization/value_object_ser.cpp
@@ -29,7 +29,7 @@
 #include <boost/serialization/nvp.hpp>
 #include "dogen/sml/serialization/abstract_object_ser.hpp"
 #include "dogen/sml/serialization/value_object_ser.hpp"
-#include "dogen/sml/serialization/value_types_ser.hpp"
+#include "dogen/sml/serialization/value_object_types_ser.hpp"
 
 #ifdef __linux__
 #include "eos/portable_iarchive.hpp"
diff --git a/projects/sml/src/test_data/category_types_td.cpp b/projects/sml/src/test_data/category_types_td.cpp
deleted file mode 100644
index f7d9c97..0000000
--- a/projects/sml/src/test_data/category_types_td.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/test_data/category_types_td.hpp"
-
-namespace dogen {
-namespace sml {
-
-category_types_generator::category_types_generator() : position_(0) { }
-void category_types_generator::
-populate(const unsigned int position, result_type& v) {
-    v = static_cast<category_types>(position % 4);
-}
-
-category_types_generator::result_type
-category_types_generator::create(const unsigned int  position) {
-    result_type r;
-    category_types_generator::populate(position, r);
-    return r;
-}
-
-category_types_generator::result_type
-category_types_generator::operator()() {
-    return create(position_++);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/test_data/model_td.cpp b/projects/sml/src/test_data/model_td.cpp
index 19c8472..cd11f96 100644
--- a/projects/sml/src/test_data/model_td.cpp
+++ b/projects/sml/src/test_data/model_td.cpp
@@ -20,15 +20,11 @@
  */
 #include <sstream>
 #include "dogen/sml/test_data/concept_td.hpp"
-#include "dogen/sml/test_data/enumeration_td.hpp"
 #include "dogen/sml/test_data/model_td.hpp"
 #include "dogen/sml/test_data/module_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
-#include "dogen/sml/test_data/primitive_td.hpp"
 #include "dogen/sml/test_data/qname_td.hpp"
 #include "dogen/sml/test_data/reference_td.hpp"
-#include "dogen/sml/test_data/service_td.hpp"
-#include "dogen/sml/test_data/value_object_td.hpp"
+#include "dogen/sml/test_data/type_td.hpp"
 
 namespace {
 
@@ -54,63 +50,6 @@ std::vector<std::pair<std::string, std::string> > create_std_vector_std_pair_std
     return r;
 }
 
-dogen::sml::qname
-create_dogen_sml_qname(const unsigned int position) {
-    return dogen::sml::qname_generator::create(position);
-}
-
-dogen::sml::pod
-create_dogen_sml_pod(const unsigned int position) {
-    return dogen::sml::pod_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::pod> create_std_unordered_map_dogen_sml_qname_dogen_sml_pod(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_pod(position + i)));
-    }
-    return r;
-}
-
-dogen::sml::primitive
-create_dogen_sml_primitive(const unsigned int position) {
-    return dogen::sml::primitive_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::primitive> create_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::primitive> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_primitive(position + i)));
-    }
-    return r;
-}
-
-dogen::sml::enumeration
-create_dogen_sml_enumeration(const unsigned int position) {
-    return dogen::sml::enumeration_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::enumeration> create_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::enumeration> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_enumeration(position + i)));
-    }
-    return r;
-}
-
-dogen::sml::value_object
-create_dogen_sml_value_object(const unsigned int position) {
-    return dogen::sml::value_object_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::value_object> create_std_unordered_map_dogen_sml_qname_dogen_sml_value_object(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::value_object> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_value_object(position + i)));
-    }
-    return r;
-}
-
 std::list<std::string> create_std_list_std_string(unsigned int position) {
     std::list<std::string> r;
     for (unsigned int i(0); i < 10; ++i) {
@@ -136,6 +75,11 @@ std::unordered_map<std::string, dogen::sml::reference> create_std_unordered_map_
     return r;
 }
 
+dogen::sml::qname
+create_dogen_sml_qname(const unsigned int position) {
+    return dogen::sml::qname_generator::create(position);
+}
+
 std::unordered_set<dogen::sml::qname> create_std_unordered_set_dogen_sml_qname(unsigned int position) {
     std::unordered_set<dogen::sml::qname> r;
     for (unsigned int i(0); i < 10; ++i) {
@@ -144,19 +88,6 @@ std::unordered_set<dogen::sml::qname> create_std_unordered_set_dogen_sml_qname(u
     return r;
 }
 
-dogen::sml::service
-create_dogen_sml_service(const unsigned int position) {
-    return dogen::sml::service_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::service> create_std_unordered_map_dogen_sml_qname_dogen_sml_service(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::service> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_service(position + i)));
-    }
-    return r;
-}
-
 dogen::sml::module
 create_dogen_sml_module(const unsigned int position) {
     return dogen::sml::module_generator::create(position);
@@ -183,6 +114,26 @@ std::unordered_map<dogen::sml::qname, dogen::sml::concept> create_std_unordered_
     return r;
 }
 
+dogen::sml::type*
+create_dogen_sml_type_ptr(const unsigned int position) {
+    return dogen::sml::type_generator::create_ptr(position);
+}
+
+boost::shared_ptr<dogen::sml::type>
+create_boost_shared_ptr_dogen_sml_type(unsigned int position) {
+    boost::shared_ptr<dogen::sml::type> r(
+        create_dogen_sml_type_ptr(position));
+    return r;
+}
+
+std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> > create_std_unordered_map_dogen_sml_qname_boost_shared_ptr_dogen_sml_type_(unsigned int position) {
+    std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> > r;
+    for (unsigned int i(0); i < 10; ++i) {
+        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_boost_shared_ptr_dogen_sml_type(position + i)));
+    }
+    return r;
+}
+
 }
 
 namespace dogen {
@@ -195,17 +146,13 @@ populate(const unsigned int position, result_type& v) {
     v.documentation(create_std_string(position + 0));
     v.implementation_specific_parameters(create_std_vector_std_pair_std_string_std_string_(position + 1));
     v.name(create_std_string(position + 2));
-    v.pods(create_std_unordered_map_dogen_sml_qname_dogen_sml_pod(position + 3));
-    v.primitives(create_std_unordered_map_dogen_sml_qname_dogen_sml_primitive(position + 4));
-    v.enumerations(create_std_unordered_map_dogen_sml_qname_dogen_sml_enumeration(position + 5));
-    v.exceptions(create_std_unordered_map_dogen_sml_qname_dogen_sml_value_object(position + 6));
-    v.external_module_path(create_std_list_std_string(position + 7));
-    v.is_system(create_bool(position + 8));
-    v.dependencies(create_std_unordered_map_std_string_dogen_sml_reference(position + 9));
-    v.leaves(create_std_unordered_set_dogen_sml_qname(position + 10));
-    v.services(create_std_unordered_map_dogen_sml_qname_dogen_sml_service(position + 11));
-    v.modules(create_std_unordered_map_dogen_sml_qname_dogen_sml_module(position + 12));
-    v.concepts(create_std_unordered_map_dogen_sml_qname_dogen_sml_concept(position + 13));
+    v.external_module_path(create_std_list_std_string(position + 3));
+    v.is_system(create_bool(position + 4));
+    v.dependencies(create_std_unordered_map_std_string_dogen_sml_reference(position + 5));
+    v.leaves(create_std_unordered_set_dogen_sml_qname(position + 6));
+    v.modules(create_std_unordered_map_dogen_sml_qname_dogen_sml_module(position + 7));
+    v.concepts(create_std_unordered_map_dogen_sml_qname_dogen_sml_concept(position + 8));
+    v.types(create_std_unordered_map_dogen_sml_qname_boost_shared_ptr_dogen_sml_type_(position + 9));
 }
 
 model_generator::result_type
diff --git a/projects/sml/src/test_data/pod_td.cpp b/projects/sml/src/test_data/pod_td.cpp
deleted file mode 100644
index 4ba1b13..0000000
--- a/projects/sml/src/test_data/pod_td.cpp
+++ /dev/null
@@ -1,160 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <sstream>
-#include "dogen/sml/test_data/category_types_td.hpp"
-#include "dogen/sml/test_data/generation_types_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
-#include "dogen/sml/test_data/pod_types_td.hpp"
-#include "dogen/sml/test_data/property_td.hpp"
-#include "dogen/sml/test_data/qname_td.hpp"
-
-namespace {
-
-dogen::sml::qname
-create_dogen_sml_qname(const unsigned int position) {
-    return dogen::sml::qname_generator::create(position);
-}
-
-dogen::sml::property
-create_dogen_sml_property(const unsigned int position) {
-    return dogen::sml::property_generator::create(position);
-}
-
-std::list<dogen::sml::property> create_std_list_dogen_sml_property(unsigned int position) {
-    std::list<dogen::sml::property> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_dogen_sml_property(position + i));
-    }
-    return r;
-}
-
-boost::optional<dogen::sml::qname>
-create_boost_optional_dogen_sml_qname(unsigned int position) {
-    boost::optional<dogen::sml::qname> r(
-        create_dogen_sml_qname(position));
-    return r;
-}
-
-std::list<dogen::sml::qname> create_std_list_dogen_sml_qname(unsigned int position) {
-    std::list<dogen::sml::qname> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_dogen_sml_qname(position + i));
-    }
-    return r;
-}
-
-dogen::sml::generation_types
-create_dogen_sml_generation_types(const unsigned int position) {
-    return dogen::sml::generation_types_generator::create(position);
-}
-
-bool create_bool(const unsigned int position) {
-    return (position % 2) == 0;
-}
-
-dogen::sml::category_types
-create_dogen_sml_category_types(const unsigned int position) {
-    return dogen::sml::category_types_generator::create(position);
-}
-
-dogen::sml::pod_types
-create_dogen_sml_pod_types(const unsigned int position) {
-    return dogen::sml::pod_types_generator::create(position);
-}
-
-std::string create_std_string(const unsigned int position) {
-    std::ostringstream s;
-    s << "a_string_" << position;
-    return s.str();
-}
-
-unsigned int create_unsigned_int(const unsigned int position) {
-    return static_cast<unsigned int>(position);
-}
-
-std::pair<std::string, std::string>
-create_std_pair_std_string_std_string(unsigned int position) {
-    std::pair<std::string, std::string> r(
-        create_std_string(position),
-        create_std_string(position));
-    return r;
-}
-
-std::vector<std::pair<std::string, std::string> > create_std_vector_std_pair_std_string_std_string_(unsigned int position) {
-    std::vector<std::pair<std::string, std::string> > r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_std_pair_std_string_std_string(position + i));
-    }
-    return r;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-pod_generator::pod_generator() : position_(0) { }
-
-void pod_generator::
-populate(const unsigned int position, result_type& v) {
-    v.name(create_dogen_sml_qname(position + 0));
-    v.properties(create_std_list_dogen_sml_property(position + 1));
-    v.parent_name(create_boost_optional_dogen_sml_qname(position + 2));
-    v.original_parent_name(create_boost_optional_dogen_sml_qname(position + 3));
-    v.leaves(create_std_list_dogen_sml_qname(position + 4));
-    v.generation_type(create_dogen_sml_generation_types(position + 5));
-    v.is_parent(create_bool(position + 6));
-    v.category_type(create_dogen_sml_category_types(position + 7));
-    v.pod_type(create_dogen_sml_pod_types(position + 8));
-    v.documentation(create_std_string(position + 9));
-    v.number_of_type_arguments(create_unsigned_int(position + 10));
-    v.implementation_specific_parameters(create_std_vector_std_pair_std_string_std_string_(position + 11));
-    v.is_visitable(create_bool(position + 12));
-    v.is_immutable(create_bool(position + 13));
-    v.is_versioned(create_bool(position + 14));
-    v.is_keyed(create_bool(position + 15));
-    v.is_comparable(create_bool(position + 16));
-    v.is_fluent(create_bool(position + 17));
-    v.is_aggregate_root(create_bool(position + 18));
-    v.versioned_key(create_boost_optional_dogen_sml_qname(position + 19));
-    v.unversioned_key(create_boost_optional_dogen_sml_qname(position + 20));
-    v.modeled_concepts(create_std_list_dogen_sml_qname(position + 21));
-}
-
-pod_generator::result_type
-pod_generator::create(const unsigned int position) {
-    pod r;
-    pod_generator::populate(position, r);
-    return r;
-}
-pod_generator::result_type*
-pod_generator::create_ptr(const unsigned int position) {
-    pod* p = new pod();
-    pod_generator::populate(position, *p);
-    return p;
-}
-
-pod_generator::result_type
-pod_generator::operator()() {
-    return create(position_++);
-}
-
-} }
diff --git a/projects/sml/src/test_data/pod_types_td.cpp b/projects/sml/src/test_data/pod_types_td.cpp
deleted file mode 100644
index e63efd6..0000000
--- a/projects/sml/src/test_data/pod_types_td.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/test_data/pod_types_td.hpp"
-
-namespace dogen {
-namespace sml {
-
-pod_types_generator::pod_types_generator() : position_(0) { }
-void pod_types_generator::
-populate(const unsigned int position, result_type& v) {
-    v = static_cast<pod_types>(position % 7);
-}
-
-pod_types_generator::result_type
-pod_types_generator::create(const unsigned int  position) {
-    result_type r;
-    pod_types_generator::populate(position, r);
-    return r;
-}
-
-pod_types_generator::result_type
-pod_types_generator::operator()() {
-    return create(position_++);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/test_data/value_object_td.cpp b/projects/sml/src/test_data/value_object_td.cpp
index 8b5f7ca..a8ee2c2 100644
--- a/projects/sml/src/test_data/value_object_td.cpp
+++ b/projects/sml/src/test_data/value_object_td.cpp
@@ -20,13 +20,13 @@
  */
 #include "dogen/sml/test_data/abstract_object_td.hpp"
 #include "dogen/sml/test_data/value_object_td.hpp"
-#include "dogen/sml/test_data/value_types_td.hpp"
+#include "dogen/sml/test_data/value_object_types_td.hpp"
 
 namespace {
 
-dogen::sml::value_types
-create_dogen_sml_value_types(const unsigned int position) {
-    return dogen::sml::value_types_generator::create(position);
+dogen::sml::value_object_types
+create_dogen_sml_value_object_types(const unsigned int position) {
+    return dogen::sml::value_object_types_generator::create(position);
 }
 
 }
@@ -39,7 +39,7 @@ value_object_generator::value_object_generator() : position_(0) { }
 void value_object_generator::
 populate(const unsigned int position, result_type& v) {
     dogen::sml::abstract_object_generator::populate(position, v);
-    v.type(create_dogen_sml_value_types(position + 0));
+    v.type(create_dogen_sml_value_object_types(position + 0));
 }
 
 value_object_generator::result_type
diff --git a/projects/sml/src/test_data/value_object_types_td.cpp b/projects/sml/src/test_data/value_object_types_td.cpp
new file mode 100644
index 0000000..0bc54a5
--- /dev/null
+++ b/projects/sml/src/test_data/value_object_types_td.cpp
@@ -0,0 +1,44 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#include "dogen/sml/test_data/value_object_types_td.hpp"
+
+namespace dogen {
+namespace sml {
+
+value_object_types_generator::value_object_types_generator() : position_(0) { }
+void value_object_types_generator::
+populate(const unsigned int position, result_type& v) {
+    v = static_cast<value_object_types>(position % 8);
+}
+
+value_object_types_generator::result_type
+value_object_types_generator::create(const unsigned int  position) {
+    result_type r;
+    value_object_types_generator::populate(position, r);
+    return r;
+}
+
+value_object_types_generator::result_type
+value_object_types_generator::operator()() {
+    return create(position_++);
+}
+
+} }
\ No newline at end of file
diff --git a/projects/sml/src/test_data/value_types_td.cpp b/projects/sml/src/test_data/value_types_td.cpp
deleted file mode 100644
index ce4df8d..0000000
--- a/projects/sml/src/test_data/value_types_td.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/test_data/value_types_td.hpp"
-
-namespace dogen {
-namespace sml {
-
-value_types_generator::value_types_generator() : position_(0) { }
-void value_types_generator::
-populate(const unsigned int position, result_type& v) {
-    v = static_cast<value_types>(position % 8);
-}
-
-value_types_generator::result_type
-value_types_generator::create(const unsigned int  position) {
-    result_type r;
-    value_types_generator::populate(position, r);
-    return r;
-}
-
-value_types_generator::result_type
-value_types_generator::operator()() {
-    return create(position_++);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/types/boost_model_factory.cpp b/projects/sml/src/types/boost_model_factory.cpp
index 4ae1b3f..9c1a142 100644
--- a/projects/sml/src/types/boost_model_factory.cpp
+++ b/projects/sml/src/types/boost_model_factory.cpp
@@ -18,6 +18,8 @@
  * MA 02110-1301, USA.
  *
  */
+#include <memory>
+#include "dogen/sml/types/value_object.hpp"
 #include "dogen/sml/types/boost_model_factory.hpp"
 
 namespace {
@@ -48,28 +50,30 @@ const std::string time_duration_name("time_duration");
 namespace dogen {
 namespace sml {
 
-pod boost_model_factory::create_pod(const std::string& name, pod_types pt,
-    std::list<std::string> module_path) {
+boost::shared_ptr<type>
+boost_model_factory::create_value_object(const std::string& name,
+    const std::list<std::string> &module_path, value_object_types t) {
+
     qname q;
     q.type_name(name);
     q.meta_type(meta_types::pod);
     q.model_name(model_name);
     q.module_path(module_path);
 
-    pod r;
-    r.name(q);
-    r.generation_type(generation_types::no_generation);
-    if (pt == pod_types::sequence_container)
-        r.number_of_type_arguments(1);
-    else if (pt == pod_types::associative_container)
-        r.number_of_type_arguments(2);
+    std::unique_ptr<value_object> r(new value_object());
+    r->name(q);
+    r->generation_type(generation_types::no_generation);
+    r->type(t);
+    if (t == value_object_types::sequence_container)
+        r->number_of_type_arguments(1);
+    else if (t == value_object_types::associative_container)
+        r->number_of_type_arguments(2);
 
-    r.pod_type(pt);
-    return r;
+    return boost::shared_ptr<type>(r.release());
 }
 
-module boost_model_factory::
-create_module(const std::string& name, std::list<std::string> module_path) {
+module boost_model_factory::create_module(const std::string& name,
+    const std::list<std::string>& module_path) {
     qname qn;
     qn.model_name(model_name);
     qn.type_name(name);
@@ -87,28 +91,29 @@ model boost_model_factory::create() {
     r.name(model_name);
     r.is_system(true);
 
-    const auto pi([&](std::string name, pod_types pt,
-            std::list<std::string> module_path) {
-            pod p(create_pod(name, pt, module_path));
-            r.pods().insert(std::make_pair(p.name(), p));
+    const auto pi([&](const std::string& name,
+            const std::list<std::string>& module_path,
+            value_object_types vot = value_object_types::plain) {
+            const auto vo(create_value_object(name, module_path, vot));
+            r.types().insert(std::make_pair(vo->name(), vo));
         });
 
     const auto gamma([&](std::string name,
             std::list<std::string> module_path) {
-            module p(create_module(name, module_path));
-            r.modules().insert(std::make_pair(p.name(), p));
+            const auto m(create_module(name, module_path));
+            r.modules().insert(std::make_pair(m.name(), m));
         });
 
     std::list<std::string> module_path;
-    pi(shared_ptr_name, pod_types::smart_pointer, module_path);
-    pi(weak_ptr_name, pod_types::smart_pointer, module_path);
-    pi(scoped_ptr_name, pod_types::smart_pointer, module_path);
-    pi(optional_name, pod_types::value, module_path);
-    pi(variant_name, pod_types::value, module_path);
+    pi(shared_ptr_name, module_path, value_object_types::smart_pointer);
+    pi(weak_ptr_name, module_path, value_object_types::smart_pointer);
+    pi(scoped_ptr_name, module_path, value_object_types::smart_pointer);
+    pi(optional_name, module_path);
+    pi(variant_name, module_path);
 
     gamma(asio_name, module_path);
     module_path.push_back(asio_name);
-    pi(io_service_name, pod_types::value, module_path);
+    pi(io_service_name, module_path);
 
     gamma(ip_name, module_path);
     module_path.push_back(ip_name);
@@ -116,26 +121,26 @@ model boost_model_factory::create() {
     gamma(tcp_name, module_path);
     module_path.push_back(tcp_name);
 
-    pi(socket_name, pod_types::value, module_path);
-    pi(acceptor_name, pod_types::value, module_path);
+    pi(socket_name, module_path);
+    pi(acceptor_name, module_path);
 
     module_path.clear();
     gamma(filesystem_name, module_path);
     module_path.push_back(filesystem_name);
-    pi(path_name, pod_types::value, module_path);
+    pi(path_name, module_path);
 
     module_path.clear();
     gamma(gregorian_name, module_path);
 
     module_path.push_back(gregorian_name);
-    pi(date_name, pod_types::value, module_path);
+    pi(date_name, module_path);
 
     module_path.clear();
     gamma(posix_time_name, module_path);
 
     module_path.push_back(posix_time_name);
-    pi(ptime_name, pod_types::value, module_path);
-    pi(time_duration_name, pod_types::value, module_path);
+    pi(ptime_name, module_path);
+    pi(time_duration_name, module_path);
 
     return r;
 }
diff --git a/projects/sml/src/types/model.cpp b/projects/sml/src/types/model.cpp
index c905dda..e2858b6 100644
--- a/projects/sml/src/types/model.cpp
+++ b/projects/sml/src/types/model.cpp
@@ -19,6 +19,16 @@
  *
  */
 #include "dogen/sml/types/model.hpp"
+#include "dogen/sml/types/type.hpp"
+
+namespace boost {
+
+inline bool operator==(const boost::shared_ptr<dogen::sml::type>& lhs,
+const boost::shared_ptr<dogen::sml::type>& rhs) {
+    return (!lhs && !rhs) ||(lhs && rhs && (*lhs == *rhs));
+}
+
+}
 
 namespace dogen {
 namespace sml {
@@ -30,65 +40,49 @@ model::model(
     const std::string& documentation,
     const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
     const std::string& name,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& primitives,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& enumerations,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& exceptions,
     const std::list<std::string>& external_module_path,
     const bool is_system,
     const std::unordered_map<std::string, dogen::sml::reference>& dependencies,
     const std::unordered_set<dogen::sml::qname>& leaves,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::service>& services,
     const std::unordered_map<dogen::sml::qname, dogen::sml::module>& modules,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts)
+    const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts,
+    const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& types)
     : documentation_(documentation),
       implementation_specific_parameters_(implementation_specific_parameters),
       name_(name),
-      pods_(pods),
-      primitives_(primitives),
-      enumerations_(enumerations),
-      exceptions_(exceptions),
       external_module_path_(external_module_path),
       is_system_(is_system),
       dependencies_(dependencies),
       leaves_(leaves),
-      services_(services),
       modules_(modules),
-      concepts_(concepts) { }
+      concepts_(concepts),
+      types_(types) { }
 
 void model::swap(model& other) noexcept {
     using std::swap;
     swap(documentation_, other.documentation_);
     swap(implementation_specific_parameters_, other.implementation_specific_parameters_);
     swap(name_, other.name_);
-    swap(pods_, other.pods_);
-    swap(primitives_, other.primitives_);
-    swap(enumerations_, other.enumerations_);
-    swap(exceptions_, other.exceptions_);
     swap(external_module_path_, other.external_module_path_);
     swap(is_system_, other.is_system_);
     swap(dependencies_, other.dependencies_);
     swap(leaves_, other.leaves_);
-    swap(services_, other.services_);
     swap(modules_, other.modules_);
     swap(concepts_, other.concepts_);
+    swap(types_, other.types_);
 }
 
 bool model::operator==(const model& rhs) const {
     return documentation_ == rhs.documentation_ &&
         implementation_specific_parameters_ == rhs.implementation_specific_parameters_ &&
         name_ == rhs.name_ &&
-        pods_ == rhs.pods_ &&
-        primitives_ == rhs.primitives_ &&
-        enumerations_ == rhs.enumerations_ &&
-        exceptions_ == rhs.exceptions_ &&
         external_module_path_ == rhs.external_module_path_ &&
         is_system_ == rhs.is_system_ &&
         dependencies_ == rhs.dependencies_ &&
         leaves_ == rhs.leaves_ &&
-        services_ == rhs.services_ &&
         modules_ == rhs.modules_ &&
-        concepts_ == rhs.concepts_;
+        concepts_ == rhs.concepts_ &&
+        types_ == rhs.types_;
 }
 
 model& model::operator=(model other) {
@@ -145,70 +139,6 @@ void model::name(const std::string&& v) {
     name_ = std::move(v);
 }
 
-const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& model::pods() const {
-    return pods_;
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::pod>& model::pods() {
-    return pods_;
-}
-
-void model::pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v) {
-    pods_ = v;
-}
-
-void model::pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>&& v) {
-    pods_ = std::move(v);
-}
-
-const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& model::primitives() const {
-    return primitives_;
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& model::primitives() {
-    return primitives_;
-}
-
-void model::primitives(const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>& v) {
-    primitives_ = v;
-}
-
-void model::primitives(const std::unordered_map<dogen::sml::qname, dogen::sml::primitive>&& v) {
-    primitives_ = std::move(v);
-}
-
-const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& model::enumerations() const {
-    return enumerations_;
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& model::enumerations() {
-    return enumerations_;
-}
-
-void model::enumerations(const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>& v) {
-    enumerations_ = v;
-}
-
-void model::enumerations(const std::unordered_map<dogen::sml::qname, dogen::sml::enumeration>&& v) {
-    enumerations_ = std::move(v);
-}
-
-const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& model::exceptions() const {
-    return exceptions_;
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& model::exceptions() {
-    return exceptions_;
-}
-
-void model::exceptions(const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>& v) {
-    exceptions_ = v;
-}
-
-void model::exceptions(const std::unordered_map<dogen::sml::qname, dogen::sml::value_object>&& v) {
-    exceptions_ = std::move(v);
-}
-
 const std::list<std::string>& model::external_module_path() const {
     return external_module_path_;
 }
@@ -265,22 +195,6 @@ void model::leaves(const std::unordered_set<dogen::sml::qname>&& v) {
     leaves_ = std::move(v);
 }
 
-const std::unordered_map<dogen::sml::qname, dogen::sml::service>& model::services() const {
-    return services_;
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::service>& model::services() {
-    return services_;
-}
-
-void model::services(const std::unordered_map<dogen::sml::qname, dogen::sml::service>& v) {
-    services_ = v;
-}
-
-void model::services(const std::unordered_map<dogen::sml::qname, dogen::sml::service>&& v) {
-    services_ = std::move(v);
-}
-
 const std::unordered_map<dogen::sml::qname, dogen::sml::module>& model::modules() const {
     return modules_;
 }
@@ -313,4 +227,20 @@ void model::concepts(const std::unordered_map<dogen::sml::qname, dogen::sml::con
     concepts_ = std::move(v);
 }
 
+const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& model::types() const {
+    return types_;
+}
+
+std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& model::types() {
+    return types_;
+}
+
+void model::types(const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >& v) {
+    types_ = v;
+}
+
+void model::types(const std::unordered_map<dogen::sml::qname, boost::shared_ptr<dogen::sml::type> >&& v) {
+    types_ = std::move(v);
+}
+
 } }
\ No newline at end of file
diff --git a/projects/sml/src/types/pod.cpp b/projects/sml/src/types/pod.cpp
deleted file mode 100644
index f50fed6..0000000
--- a/projects/sml/src/types/pod.cpp
+++ /dev/null
@@ -1,423 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-pod::pod()
-    : generation_type_(static_cast<dogen::sml::generation_types>(0)),
-      is_parent_(static_cast<bool>(0)),
-      category_type_(static_cast<dogen::sml::category_types>(0)),
-      pod_type_(static_cast<dogen::sml::pod_types>(0)),
-      number_of_type_arguments_(static_cast<unsigned int>(0)),
-      is_visitable_(static_cast<bool>(0)),
-      is_immutable_(static_cast<bool>(0)),
-      is_versioned_(static_cast<bool>(0)),
-      is_keyed_(static_cast<bool>(0)),
-      is_comparable_(static_cast<bool>(0)),
-      is_fluent_(static_cast<bool>(0)),
-      is_aggregate_root_(static_cast<bool>(0)) { }
-
-pod::pod(pod&& rhs)
-    : name_(std::move(rhs.name_)),
-      properties_(std::move(rhs.properties_)),
-      parent_name_(std::move(rhs.parent_name_)),
-      original_parent_name_(std::move(rhs.original_parent_name_)),
-      leaves_(std::move(rhs.leaves_)),
-      generation_type_(std::move(rhs.generation_type_)),
-      is_parent_(std::move(rhs.is_parent_)),
-      category_type_(std::move(rhs.category_type_)),
-      pod_type_(std::move(rhs.pod_type_)),
-      documentation_(std::move(rhs.documentation_)),
-      number_of_type_arguments_(std::move(rhs.number_of_type_arguments_)),
-      implementation_specific_parameters_(std::move(rhs.implementation_specific_parameters_)),
-      is_visitable_(std::move(rhs.is_visitable_)),
-      is_immutable_(std::move(rhs.is_immutable_)),
-      is_versioned_(std::move(rhs.is_versioned_)),
-      is_keyed_(std::move(rhs.is_keyed_)),
-      is_comparable_(std::move(rhs.is_comparable_)),
-      is_fluent_(std::move(rhs.is_fluent_)),
-      is_aggregate_root_(std::move(rhs.is_aggregate_root_)),
-      versioned_key_(std::move(rhs.versioned_key_)),
-      unversioned_key_(std::move(rhs.unversioned_key_)),
-      modeled_concepts_(std::move(rhs.modeled_concepts_)) { }
-
-pod::pod(
-    const dogen::sml::qname& name,
-    const std::list<dogen::sml::property>& properties,
-    const boost::optional<dogen::sml::qname>& parent_name,
-    const boost::optional<dogen::sml::qname>& original_parent_name,
-    const std::list<dogen::sml::qname>& leaves,
-    const dogen::sml::generation_types& generation_type,
-    const bool is_parent,
-    const dogen::sml::category_types& category_type,
-    const dogen::sml::pod_types& pod_type,
-    const std::string& documentation,
-    const unsigned int number_of_type_arguments,
-    const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
-    const bool is_visitable,
-    const bool is_immutable,
-    const bool is_versioned,
-    const bool is_keyed,
-    const bool is_comparable,
-    const bool is_fluent,
-    const bool is_aggregate_root,
-    const boost::optional<dogen::sml::qname>& versioned_key,
-    const boost::optional<dogen::sml::qname>& unversioned_key,
-    const std::list<dogen::sml::qname>& modeled_concepts)
-    : name_(name),
-      properties_(properties),
-      parent_name_(parent_name),
-      original_parent_name_(original_parent_name),
-      leaves_(leaves),
-      generation_type_(generation_type),
-      is_parent_(is_parent),
-      category_type_(category_type),
-      pod_type_(pod_type),
-      documentation_(documentation),
-      number_of_type_arguments_(number_of_type_arguments),
-      implementation_specific_parameters_(implementation_specific_parameters),
-      is_visitable_(is_visitable),
-      is_immutable_(is_immutable),
-      is_versioned_(is_versioned),
-      is_keyed_(is_keyed),
-      is_comparable_(is_comparable),
-      is_fluent_(is_fluent),
-      is_aggregate_root_(is_aggregate_root),
-      versioned_key_(versioned_key),
-      unversioned_key_(unversioned_key),
-      modeled_concepts_(modeled_concepts) { }
-
-void pod::swap(pod& other) noexcept {
-    using std::swap;
-    swap(name_, other.name_);
-    swap(properties_, other.properties_);
-    swap(parent_name_, other.parent_name_);
-    swap(original_parent_name_, other.original_parent_name_);
-    swap(leaves_, other.leaves_);
-    swap(generation_type_, other.generation_type_);
-    swap(is_parent_, other.is_parent_);
-    swap(category_type_, other.category_type_);
-    swap(pod_type_, other.pod_type_);
-    swap(documentation_, other.documentation_);
-    swap(number_of_type_arguments_, other.number_of_type_arguments_);
-    swap(implementation_specific_parameters_, other.implementation_specific_parameters_);
-    swap(is_visitable_, other.is_visitable_);
-    swap(is_immutable_, other.is_immutable_);
-    swap(is_versioned_, other.is_versioned_);
-    swap(is_keyed_, other.is_keyed_);
-    swap(is_comparable_, other.is_comparable_);
-    swap(is_fluent_, other.is_fluent_);
-    swap(is_aggregate_root_, other.is_aggregate_root_);
-    swap(versioned_key_, other.versioned_key_);
-    swap(unversioned_key_, other.unversioned_key_);
-    swap(modeled_concepts_, other.modeled_concepts_);
-}
-
-bool pod::operator==(const pod& rhs) const {
-    return name_ == rhs.name_ &&
-        properties_ == rhs.properties_ &&
-        parent_name_ == rhs.parent_name_ &&
-        original_parent_name_ == rhs.original_parent_name_ &&
-        leaves_ == rhs.leaves_ &&
-        generation_type_ == rhs.generation_type_ &&
-        is_parent_ == rhs.is_parent_ &&
-        category_type_ == rhs.category_type_ &&
-        pod_type_ == rhs.pod_type_ &&
-        documentation_ == rhs.documentation_ &&
-        number_of_type_arguments_ == rhs.number_of_type_arguments_ &&
-        implementation_specific_parameters_ == rhs.implementation_specific_parameters_ &&
-        is_visitable_ == rhs.is_visitable_ &&
-        is_immutable_ == rhs.is_immutable_ &&
-        is_versioned_ == rhs.is_versioned_ &&
-        is_keyed_ == rhs.is_keyed_ &&
-        is_comparable_ == rhs.is_comparable_ &&
-        is_fluent_ == rhs.is_fluent_ &&
-        is_aggregate_root_ == rhs.is_aggregate_root_ &&
-        versioned_key_ == rhs.versioned_key_ &&
-        unversioned_key_ == rhs.unversioned_key_ &&
-        modeled_concepts_ == rhs.modeled_concepts_;
-}
-
-pod& pod::operator=(pod other) {
-    using std::swap;
-    swap(*this, other);
-    return *this;
-}
-
-const dogen::sml::qname& pod::name() const {
-    return name_;
-}
-
-dogen::sml::qname& pod::name() {
-    return name_;
-}
-
-void pod::name(const dogen::sml::qname& v) {
-    name_ = v;
-}
-
-void pod::name(const dogen::sml::qname&& v) {
-    name_ = std::move(v);
-}
-
-const std::list<dogen::sml::property>& pod::properties() const {
-    return properties_;
-}
-
-std::list<dogen::sml::property>& pod::properties() {
-    return properties_;
-}
-
-void pod::properties(const std::list<dogen::sml::property>& v) {
-    properties_ = v;
-}
-
-void pod::properties(const std::list<dogen::sml::property>&& v) {
-    properties_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::parent_name() const {
-    return parent_name_;
-}
-
-boost::optional<dogen::sml::qname>& pod::parent_name() {
-    return parent_name_;
-}
-
-void pod::parent_name(const boost::optional<dogen::sml::qname>& v) {
-    parent_name_ = v;
-}
-
-void pod::parent_name(const boost::optional<dogen::sml::qname>&& v) {
-    parent_name_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::original_parent_name() const {
-    return original_parent_name_;
-}
-
-boost::optional<dogen::sml::qname>& pod::original_parent_name() {
-    return original_parent_name_;
-}
-
-void pod::original_parent_name(const boost::optional<dogen::sml::qname>& v) {
-    original_parent_name_ = v;
-}
-
-void pod::original_parent_name(const boost::optional<dogen::sml::qname>&& v) {
-    original_parent_name_ = std::move(v);
-}
-
-const std::list<dogen::sml::qname>& pod::leaves() const {
-    return leaves_;
-}
-
-std::list<dogen::sml::qname>& pod::leaves() {
-    return leaves_;
-}
-
-void pod::leaves(const std::list<dogen::sml::qname>& v) {
-    leaves_ = v;
-}
-
-void pod::leaves(const std::list<dogen::sml::qname>&& v) {
-    leaves_ = std::move(v);
-}
-
-dogen::sml::generation_types pod::generation_type() const {
-    return generation_type_;
-}
-
-void pod::generation_type(const dogen::sml::generation_types& v) {
-    generation_type_ = v;
-}
-
-bool pod::is_parent() const {
-    return is_parent_;
-}
-
-void pod::is_parent(const bool v) {
-    is_parent_ = v;
-}
-
-dogen::sml::category_types pod::category_type() const {
-    return category_type_;
-}
-
-void pod::category_type(const dogen::sml::category_types& v) {
-    category_type_ = v;
-}
-
-dogen::sml::pod_types pod::pod_type() const {
-    return pod_type_;
-}
-
-void pod::pod_type(const dogen::sml::pod_types& v) {
-    pod_type_ = v;
-}
-
-const std::string& pod::documentation() const {
-    return documentation_;
-}
-
-std::string& pod::documentation() {
-    return documentation_;
-}
-
-void pod::documentation(const std::string& v) {
-    documentation_ = v;
-}
-
-void pod::documentation(const std::string&& v) {
-    documentation_ = std::move(v);
-}
-
-unsigned int pod::number_of_type_arguments() const {
-    return number_of_type_arguments_;
-}
-
-void pod::number_of_type_arguments(const unsigned int v) {
-    number_of_type_arguments_ = v;
-}
-
-const std::vector<std::pair<std::string, std::string> >& pod::implementation_specific_parameters() const {
-    return implementation_specific_parameters_;
-}
-
-std::vector<std::pair<std::string, std::string> >& pod::implementation_specific_parameters() {
-    return implementation_specific_parameters_;
-}
-
-void pod::implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >& v) {
-    implementation_specific_parameters_ = v;
-}
-
-void pod::implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >&& v) {
-    implementation_specific_parameters_ = std::move(v);
-}
-
-bool pod::is_visitable() const {
-    return is_visitable_;
-}
-
-void pod::is_visitable(const bool v) {
-    is_visitable_ = v;
-}
-
-bool pod::is_immutable() const {
-    return is_immutable_;
-}
-
-void pod::is_immutable(const bool v) {
-    is_immutable_ = v;
-}
-
-bool pod::is_versioned() const {
-    return is_versioned_;
-}
-
-void pod::is_versioned(const bool v) {
-    is_versioned_ = v;
-}
-
-bool pod::is_keyed() const {
-    return is_keyed_;
-}
-
-void pod::is_keyed(const bool v) {
-    is_keyed_ = v;
-}
-
-bool pod::is_comparable() const {
-    return is_comparable_;
-}
-
-void pod::is_comparable(const bool v) {
-    is_comparable_ = v;
-}
-
-bool pod::is_fluent() const {
-    return is_fluent_;
-}
-
-void pod::is_fluent(const bool v) {
-    is_fluent_ = v;
-}
-
-bool pod::is_aggregate_root() const {
-    return is_aggregate_root_;
-}
-
-void pod::is_aggregate_root(const bool v) {
-    is_aggregate_root_ = v;
-}
-
-const boost::optional<dogen::sml::qname>& pod::versioned_key() const {
-    return versioned_key_;
-}
-
-boost::optional<dogen::sml::qname>& pod::versioned_key() {
-    return versioned_key_;
-}
-
-void pod::versioned_key(const boost::optional<dogen::sml::qname>& v) {
-    versioned_key_ = v;
-}
-
-void pod::versioned_key(const boost::optional<dogen::sml::qname>&& v) {
-    versioned_key_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::unversioned_key() const {
-    return unversioned_key_;
-}
-
-boost::optional<dogen::sml::qname>& pod::unversioned_key() {
-    return unversioned_key_;
-}
-
-void pod::unversioned_key(const boost::optional<dogen::sml::qname>& v) {
-    unversioned_key_ = v;
-}
-
-void pod::unversioned_key(const boost::optional<dogen::sml::qname>&& v) {
-    unversioned_key_ = std::move(v);
-}
-
-const std::list<dogen::sml::qname>& pod::modeled_concepts() const {
-    return modeled_concepts_;
-}
-
-std::list<dogen::sml::qname>& pod::modeled_concepts() {
-    return modeled_concepts_;
-}
-
-void pod::modeled_concepts(const std::list<dogen::sml::qname>& v) {
-    modeled_concepts_ = v;
-}
-
-void pod::modeled_concepts(const std::list<dogen::sml::qname>&& v) {
-    modeled_concepts_ = std::move(v);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/types/primitive_model_factory.cpp b/projects/sml/src/types/primitive_model_factory.cpp
index fc33159..0019268 100644
--- a/projects/sml/src/types/primitive_model_factory.cpp
+++ b/projects/sml/src/types/primitive_model_factory.cpp
@@ -18,6 +18,8 @@
  * MA 02110-1301, USA.
  *
  */
+#include <memory>
+#include "dogen/sml/types/primitive.hpp"
 #include "dogen/sml/types/primitive_model_factory.hpp"
 
 namespace {
@@ -43,15 +45,16 @@ const std::string float_name("float");
 namespace dogen {
 namespace sml {
 
-primitive primitive_model_factory::create(const std::string& name) {
+boost::shared_ptr<type>
+primitive_model_factory::create_primitive(const std::string& name) {
     qname q;
     q.type_name(name);
     q.meta_type(meta_types::primitive);
 
-    primitive r;
-    r.name(q);
-    r.generation_type(generation_types::no_generation);
-    return r;
+    std::unique_ptr<primitive> r(new primitive());
+    r->name(q);
+    r->generation_type(generation_types::no_generation);
+    return boost::shared_ptr<type>(r.release());
 }
 
 model primitive_model_factory::create() {
@@ -60,8 +63,8 @@ model primitive_model_factory::create() {
     r.is_system(true);
 
     const auto lambda([&](const std::string& name){
-            const auto prim(create(name));
-            r.primitives().insert(std::make_pair(prim.name(), prim));
+            const auto p(create_primitive(name));
+            r.types().insert(std::make_pair(p->name(), p));
         });
 
     lambda(bool_name);
diff --git a/projects/sml/src/types/std_model_factory.cpp b/projects/sml/src/types/std_model_factory.cpp
index 885f24b..2f96623 100644
--- a/projects/sml/src/types/std_model_factory.cpp
+++ b/projects/sml/src/types/std_model_factory.cpp
@@ -18,6 +18,8 @@
  * MA 02110-1301, USA.
  *
  */
+#include <memory>
+#include "dogen/sml/types/value_object.hpp"
 #include "dogen/sml/types/std_model_factory.hpp"
 
 namespace {
@@ -59,34 +61,36 @@ const std::string uint64_t_name("uint64_t");
 namespace dogen {
 namespace sml {
 
-primitive std_model_factory::create_primitive(const std::string& name) {
+boost::shared_ptr<type> std_model_factory::
+create_primitive(const std::string& name) {
     qname q;
     q.type_name(name);
     q.meta_type(meta_types::primitive);
     q.model_name(model_name);
 
-    primitive r;
-    r.name(q);
-    r.generation_type(generation_types::no_generation);
-    return r;
+    std::unique_ptr<primitive> r(new primitive());
+    r->name(q);
+    r->generation_type(generation_types::no_generation);
+    return boost::shared_ptr<type>(r.release());
 }
 
-pod std_model_factory::
-create_pod(const std::string& name, pod_types pt) {
+boost::shared_ptr<type> std_model_factory::create_value_object(
+    const std::string& name, value_object_types t) {
     qname q;
     q.type_name(name);
     q.meta_type(meta_types::pod);
     q.model_name(model_name);
-    pod r;
-    r.name(q);
-    r.generation_type(generation_types::no_generation);
-    if (pt == pod_types::sequence_container)
-        r.number_of_type_arguments(1);
-    else if (pt == pod_types::associative_container)
-        r.number_of_type_arguments(2);
-
-    r.pod_type(pt);
-    return r;
+
+    std::unique_ptr<value_object> r(new value_object());
+    r->name(q);
+    r->generation_type(generation_types::no_generation);
+    r->type(t);
+    if (t == value_object_types::sequence_container)
+        r->number_of_type_arguments(1);
+    else if (t == value_object_types::associative_container)
+        r->number_of_type_arguments(2);
+
+    return boost::shared_ptr<type>(r.release());
 }
 
 model std_model_factory::create() {
@@ -94,14 +98,15 @@ model std_model_factory::create() {
     r.name(model_name);
     r.is_system(true);
 
-    const auto lambda([&](std::string name){
+    const auto lambda([&](const std::string& name){
             const auto p(create_primitive(name));
-            r.primitives().insert(std::make_pair(p.name(), p));
+            r.types().insert(std::make_pair(p->name(), p));
         });
 
-    const auto pi([&](std::string name, pod_types pt) {
-            const auto p(create_pod(name, pt));
-            r.pods().insert(std::make_pair(p.name(), p));
+    const auto pi([&](const std::string& name,
+            value_object_types vot = value_object_types::plain) {
+            const auto vo(create_value_object(name, vot));
+            r.types().insert(std::make_pair(vo->name(), vo));
         });
 
     lambda(int8_t_name);
@@ -113,27 +118,27 @@ model std_model_factory::create() {
     lambda(uint32_t_name);
     lambda(uint64_t_name);
 
-    pi(string_name, pod_types::value);
-    pi(vector_name, pod_types::sequence_container);
-    pi(deque_name, pod_types::sequence_container);
-    pi(array_name, pod_types::sequence_container);
-    pi(list_name, pod_types::sequence_container);
-    pi(forward_list_name, pod_types::sequence_container);
-
-    pi(set_name, pod_types::associative_container);
-    pi(multiset_name, pod_types::associative_container);
-    pi(unordered_set_name, pod_types::associative_container);
-    pi(unordered_multiset_name, pod_types::associative_container);
-    pi(map_name, pod_types::associative_container);
-    pi(multimap_name, pod_types::associative_container);
-    pi(unordered_map_name, pod_types::associative_container);
-    pi(pair_name, pod_types::value);
-
-    pi(shared_ptr_name, pod_types::smart_pointer);
-    pi(weak_ptr_name, pod_types::smart_pointer);
-    pi(unique_ptr_name, pod_types::smart_pointer);
-
-    pi(function_name, pod_types::value);
+    pi(string_name);
+    pi(vector_name, value_object_types::sequence_container);
+    pi(deque_name, value_object_types::sequence_container);
+    pi(array_name, value_object_types::sequence_container);
+    pi(list_name, value_object_types::sequence_container);
+    pi(forward_list_name, value_object_types::sequence_container);
+
+    pi(set_name, value_object_types::associative_container);
+    pi(multiset_name, value_object_types::associative_container);
+    pi(unordered_set_name, value_object_types::associative_container);
+    pi(unordered_multiset_name, value_object_types::associative_container);
+    pi(map_name, value_object_types::associative_container);
+    pi(multimap_name, value_object_types::associative_container);
+    pi(unordered_map_name, value_object_types::associative_container);
+    pi(pair_name);
+
+    pi(shared_ptr_name, value_object_types::smart_pointer);
+    pi(weak_ptr_name, value_object_types::smart_pointer);
+    pi(unique_ptr_name, value_object_types::smart_pointer);
+
+    pi(function_name);
 
     return r;
 }
diff --git a/projects/sml/src/types/value_object.cpp b/projects/sml/src/types/value_object.cpp
index 507c6f5..29fae05 100644
--- a/projects/sml/src/types/value_object.cpp
+++ b/projects/sml/src/types/value_object.cpp
@@ -20,14 +20,14 @@
  */
 #include <ostream>
 #include "dogen/sml/io/abstract_object_io.hpp"
-#include "dogen/sml/io/value_types_io.hpp"
+#include "dogen/sml/io/value_object_types_io.hpp"
 #include "dogen/sml/types/value_object.hpp"
 
 namespace dogen {
 namespace sml {
 
 value_object::value_object()
-    : type_(static_cast<dogen::sml::value_types>(0)) { }
+    : type_(static_cast<dogen::sml::value_object_types>(0)) { }
 
 value_object::value_object(
     const std::string& documentation,
@@ -47,7 +47,7 @@ value_object::value_object(
     const bool is_comparable,
     const bool is_fluent,
     const std::list<dogen::sml::qname>& modeled_concepts,
-    const dogen::sml::value_types& type)
+    const dogen::sml::value_object_types& type)
     : dogen::sml::abstract_object(documentation,
       implementation_specific_parameters,
       name,
@@ -101,11 +101,11 @@ value_object& value_object::operator=(value_object other) {
     return *this;
 }
 
-dogen::sml::value_types value_object::type() const {
+dogen::sml::value_object_types value_object::type() const {
     return type_;
 }
 
-void value_object::type(const dogen::sml::value_types& v) {
+void value_object::type(const dogen::sml::value_object_types& v) {
     type_ = v;
 }
 
