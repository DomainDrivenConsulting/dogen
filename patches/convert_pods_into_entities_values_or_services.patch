diff --git a/diagrams/sml.dia b/diagrams/sml.dia
index fbac346..63adecb 100644
--- a/diagrams/sml.dia
+++ b/diagrams/sml.dia
@@ -65,19 +65,19 @@
   <dia:layer name="Background" visible="true" active="true">
     <dia:object type="UML - Class" version="0" id="O0">
       <dia:attribute name="obj_pos">
-        <dia:point val="11,60"/>
+        <dia:point val="-18,60"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="10.95,59.95;43.89,74.05"/>
+        <dia:rectangle val="-18.05,59.95;14.89,76.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="11,60"/>
+        <dia:point val="-18,60"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="32.840000000000003"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="14.000000000000002"/>
+        <dia:real val="16.400000000000002"/>
       </dia:attribute>
       <dia:attribute name="name">
         <dia:string>#model#</dia:string>
@@ -197,16 +197,16 @@ name folders in the file-system.
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#pods#</dia:string>
+            <dia:string>#value_objects#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::unordered_map&lt;qname,pod&gt;#</dia:string>
+            <dia:string>#std::unordered_map&lt;qname,value&gt;#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Pods contained in the model.#</dia:string>
+            <dia:string>#Value objects contained in the model.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -502,6 +502,75 @@ Leaves are types concrete types which have a parent.#</dia:string>
             <dia:boolean val="false"/>
           </dia:attribute>
         </dia:composite>
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#entities#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>#std::unordered_map&lt;qname,entity&gt;#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>#Entities contained in the model#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+        </dia:composite>
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#factories#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>#std::unordered_map&lt;qname,factory&gt;#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>#Factories contained in the model#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+        </dia:composite>
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#repositories#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>#std::unordered_map&lt;qname,entity&gt;#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>#Repositories contained in the model.#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+        </dia:composite>
       </dia:attribute>
       <dia:attribute name="operations"/>
       <dia:attribute name="template">
@@ -511,13 +580,13 @@ Leaves are types concrete types which have a parent.#</dia:string>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O1">
       <dia:attribute name="obj_pos">
-        <dia:point val="-65,28"/>
+        <dia:point val="-54,45"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-65.05,27.95;-47.125,34.05"/>
+        <dia:rectangle val="-54.05,44.95;-36.125,51.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-65,28"/>
+        <dia:point val="-54,45"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="17.824999999999999"/>
@@ -739,33 +808,28 @@ This is only needed because we don't have a type base class.#</dia:string>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O2">
       <dia:attribute name="obj_pos">
-        <dia:point val="-38,29"/>
+        <dia:point val="-62,76"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-38.05,28.95;-5.11,48.65"/>
+        <dia:rectangle val="-62.05,75.95;-29.11,82.85"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-38,29"/>
+        <dia:point val="-62,76"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="32.840000000000003"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="19.600000000000005"/>
+        <dia:real val="6.8000000000000007"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#pod#</dia:string>
+        <dia:string>#property#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>#entity, aggregate root#</dia:string>
+        <dia:string>##</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Represents a plain C++ object with basic associated behaviours.
-
-The name pod is misleading because its actually not used in the strict sense of POD as defined here:
-
- &lt;a href="http://en.wikipedia.org/wiki/Plain_old_data_structure"&gt;Plain old data structure&lt;/a&gt;. 
-#</dia:string>
+        <dia:string>#Data attribute of an object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -786,7 +850,7 @@ The name pod is misleading because its actually not used in the strict sense of
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
+        <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="wrap_after_char">
         <dia:int val="40"/>
@@ -851,153 +915,15 @@ The name pod is misleading because its actually not used in the strict sense of
             <dia:string>#name#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#qname#</dia:string>
+            <dia:string>#std::string#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Qualified name for the type.
+            <dia:string>#Name of the property.
 
-#DOGEN IDENTITY_ATTRIBUTE=true#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#properties#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::vector&lt;property&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#All the properties this pod owns.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#parent_name#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Qualified name for the pod's parent, if the pod has one.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#original_parent_name#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Qualified name for the root of the inheritance hierarchy, if the pod is part of one.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#leaves#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::list&lt;qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#All concrete types which are indirectly or directly derived from this type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#generation_type#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#generation_types#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#What to do with this pod in terms of code generation#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_parent#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#True if this class is the parent of one or more classes, false otherwise.#</dia:string>
+Must only contain characters that can be used for identifiers in the target backend.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1011,16 +937,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#category_type#</dia:string>
+            <dia:string>#type_name#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#category_types#</dia:string>
+            <dia:string>#nested_qname#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Category of this type - whether its system or user defined.#</dia:string>
+            <dia:string>#Type name for the property.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1034,16 +960,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#pod_type#</dia:string>
+            <dia:string>#default_value#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#pod_types#</dia:string>
+            <dia:string>#std::string#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#What kind of pod is this.#</dia:string>
+            <dia:string>#Default value of the property.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1080,16 +1006,16 @@ The name pod is misleading because its actually not used in the strict sense of
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#number_of_type_arguments#</dia:string>
+            <dia:string>#is_identity_attribute#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#unsigned int#</dia:string>
+            <dia:string>#bool#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#How many type arguments does this type have#</dia:string>
+            <dia:string>#If true, the attribute is part of the object's identity attribute set.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1112,32 +1038,7 @@ The name pod is misleading because its actually not used in the strict sense of
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Parameters associated with the pod which are opaque to SML.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_visitable#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#If true, a visitor is to be generated for this type and its descendants.
-
-Only applicable if is_parent is true.#</dia:string>
+            <dia:string>#Parameters associated with the property which are opaque to SML.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1149,20 +1050,202 @@ Only applicable if is_parent is true.#</dia:string>
             <dia:boolean val="false"/>
           </dia:attribute>
         </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_immutable#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#If true, do not generate setters for the type's properties.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
+      </dia:attribute>
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O3">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="-45.58,82.8"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-71.225,82.05;-44.83,93.8"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="-45.58,82.8"/>
+        <dia:point val="-45.58,88"/>
+        <dia:point val="-71.175,88"/>
+        <dia:point val="-71.175,93"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O2" connection="6"/>
+        <dia:connection handle="1" to="O39" connection="2"/>
+      </dia:connections>
+    </dia:object>
+    <dia:object type="UML - Class" version="0" id="O4">
+      <dia:attribute name="obj_pos">
+        <dia:point val="-60.9286,19.7143"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-60.9786,19.6643;-54.6036,30.5643"/>
+      </dia:attribute>
+      <dia:attribute name="elem_corner">
+        <dia:point val="-60.9286,19.7143"/>
+      </dia:attribute>
+      <dia:attribute name="elem_width">
+        <dia:real val="6.2750000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="elem_height">
+        <dia:real val="10.799999999999999"/>
+      </dia:attribute>
+      <dia:attribute name="name">
+        <dia:string>#meta_types#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="stereotype">
+        <dia:string>#enumeration#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="comment">
+        <dia:string>#Type of type.#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="abstract">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_attributes">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_operations">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="visible_attributes">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_comments">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_after_char">
+        <dia:int val="40"/>
+      </dia:attribute>
+      <dia:attribute name="comment_line_length">
+        <dia:int val="17"/>
+      </dia:attribute>
+      <dia:attribute name="comment_tagging">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="line_width">
+        <dia:real val="0.10000000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="line_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="fill_color">
+        <dia:color val="#ffffff"/>
+      </dia:attribute>
+      <dia:attribute name="text_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes">
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#enumeration#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>#Type is an enumeration#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
             <dia:enum val="0"/>
           </dia:attribute>
           <dia:attribute name="abstract">
@@ -1174,16 +1257,16 @@ Only applicable if is_parent is true.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_versioned#</dia:string>
+            <dia:string>#primitive#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, add a version property to the type.#</dia:string>
+            <dia:string>#Type is a primitive#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1197,16 +1280,16 @@ Only applicable if is_parent is true.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_keyed#</dia:string>
+            <dia:string>#exception#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, add key support for the type.#</dia:string>
+            <dia:string>#Type is an exception#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1220,19 +1303,16 @@ Only applicable if is_parent is true.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_comparable#</dia:string>
+            <dia:string>#string_table#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, generates the less than operator.
-
-A type is only comparable if all of its properties are primitives or strings,
-or other comparable model types.#</dia:string>
+            <dia:string>#Type is a string table.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1246,16 +1326,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_fluent#</dia:string>
+            <dia:string>#module#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, generate fluent setters.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1269,16 +1349,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#is_aggregate_root#</dia:string>
+            <dia:string>#service#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, this pod is a root of an aggregate.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1292,16 +1372,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#versioned_key#</dia:string>
+            <dia:string>#entity#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If the pod is a versioned keyed entity, its versioned key.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1315,16 +1395,16 @@ or other comparable model types.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#unversioned_key#</dia:string>
+            <dia:string>#value#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#boost::optional&lt;qname&gt;#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If the pod is an unversioned keyed entity, its unversioned key.#</dia:string>
+            <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -1336,178 +1416,19 @@ or other comparable model types.#</dia:string>
             <dia:boolean val="false"/>
           </dia:attribute>
         </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O3">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-80,60"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-80.05,59.95;-47.11,66.85"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-80,60"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="32.840000000000003"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="6.8000000000000007"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#property#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#Memberof a pod that provides a mechanism to read and write values of a type.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#name#</dia:string>
+            <dia:string>#factory#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Name of the property.
-
-Must only contain characters that can be used for identifiers in the target backend.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#type_name#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#nested_qname#</dia:string>
-          </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Type name for the property.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#default_value#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Default value of the property.#</dia:string>
-          </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
           </dia:attribute>
@@ -1520,63 +1441,17 @@ Must only contain characters that can be used for identifiers in the target back
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#documentation#</dia:string>
+            <dia:string>#repository#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#std::string#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Doxygen documentation for the type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_identity_attribute#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#If true, the attribute is part of the object's identity attribute set.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#implementation_specific_parameters#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::vector&lt;std::pair&lt;std::string,std::string&gt;&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Parameters associated with the property which are opaque to SML.#</dia:string>
-          </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
           </dia:attribute>
@@ -1594,83 +1469,12 @@ Must only contain characters that can be used for identifiers in the target back
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O4">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-38,48.6"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-47.21,47.85;-37.25,60.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-38,48.6"/>
-        <dia:point val="-38,54"/>
-        <dia:point val="-47.16,54"/>
-        <dia:point val="-47.16,60"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="5"/>
-        <dia:connection handle="1" to="O3" connection="2"/>
-      </dia:connections>
-    </dia:object>
     <dia:object type="UML - Association" version="2" id="O5">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:attribute name="direction">
-        <dia:enum val="2"/>
+        <dia:enum val="1"/>
       </dia:attribute>
       <dia:attribute name="show_direction">
         <dia:boolean val="false"/>
@@ -1703,19 +1507,19 @@ Must only contain characters that can be used for identifiers in the target back
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-5.16,48.6"/>
+        <dia:point val="-45.0875,45"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-5.21,48.55;11.75,60.8"/>
+        <dia:rectangle val="-57.8411,30.4643;-44.3375,45.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-5.16,48.6"/>
-        <dia:point val="-5.16,54"/>
-        <dia:point val="11,54"/>
-        <dia:point val="11,60"/>
+        <dia:point val="-45.0875,45"/>
+        <dia:point val="-45.0875,39"/>
+        <dia:point val="-57.7911,39"/>
+        <dia:point val="-57.7911,30.5143"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -1732,34 +1536,34 @@ Must only contain characters that can be used for identifiers in the target back
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O2" connection="7"/>
-        <dia:connection handle="1" to="O0" connection="0"/>
+        <dia:connection handle="0" to="O1" connection="1"/>
+        <dia:connection handle="1" to="O4" connection="6"/>
       </dia:connections>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O6">
       <dia:attribute name="obj_pos">
-        <dia:point val="-75.9286,3.71429"/>
+        <dia:point val="58,29"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-75.9786,3.66429;-69.6036,15.3643"/>
+        <dia:rectangle val="57.95,28.95;64.9875,32.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-75.9286,3.71429"/>
+        <dia:point val="58,29"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="6.2750000000000004"/>
+        <dia:real val="6.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="11.6"/>
+        <dia:real val="3"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#meta_types#</dia:string>
+        <dia:string>#merging_error#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
+        <dia:string>#exception#</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Type of type.#</dia:string>
+        <dia:string>#A fatal error has occurred while merging.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -1839,911 +1643,37 @@ Must only contain characters that can be used for identifiers in the target back
       <dia:attribute name="comment_font_height">
         <dia:real val="0.69999999999999996"/>
       </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#enumeration#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is an enumeration#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#primitive#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a primitive#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#exception#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is an exception#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#string_table#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type is a string table.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#module#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#service#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#entity#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#value#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#factory#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#repository#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O7">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-65,28"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-72.8411,15.2643;-64.25,28.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-65,28"/>
-        <dia:point val="-65,23"/>
-        <dia:point val="-72.7911,23"/>
-        <dia:point val="-72.7911,15.3143"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O1" connection="0"/>
-        <dia:connection handle="1" to="O6" connection="6"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O8">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-35,10"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-35.05,9.95;-27.575,15.25"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-35,10"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="7.375"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="5.2000000000000011"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#category_types#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#Categories of types.
-
-Broadly speaking there are two categories of types: user defined
-types and system defined types. However, as we need to distinguish
-between the system defined types, we have created separate
-categories for them.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#user_defined#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Type was created by the user#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#versioned_key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#System defined versioned key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#unversioned_key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#System defined unversioned key#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O9">
-      <dia:attribute name="obj_pos">
-        <dia:point val="58,29"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="57.95,28.95;64.9875,32.05"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="58,29"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="6.9375"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="3"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#merging_error#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>#exception#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#A fatal error has occurred while merging.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes"/>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O10">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-21.58,29"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-31.3625,15.15;-20.83,29.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-21.58,29"/>
-        <dia:point val="-21.58,23"/>
-        <dia:point val="-31.3125,23"/>
-        <dia:point val="-31.3125,15.2"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="orth_autoroute">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="1"/>
-        <dia:connection handle="1" to="O8" connection="6"/>
-      </dia:connections>
-    </dia:object>
-    <dia:object type="UML - Class" version="0" id="O11">
-      <dia:attribute name="obj_pos">
-        <dia:point val="-76,45"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-76.05,44.95;-62.36,49.45"/>
-      </dia:attribute>
-      <dia:attribute name="elem_corner">
-        <dia:point val="-76,45"/>
-      </dia:attribute>
-      <dia:attribute name="elem_width">
-        <dia:real val="13.59"/>
-      </dia:attribute>
-      <dia:attribute name="elem_height">
-        <dia:real val="4.4000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="name">
-        <dia:string>#nested_qname#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="stereotype">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="comment">
-        <dia:string>#A composite qname.#</dia:string>
-      </dia:attribute>
-      <dia:attribute name="abstract">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_attributes">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="suppress_operations">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="visible_attributes">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="visible_comments">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_operations">
-        <dia:boolean val="true"/>
-      </dia:attribute>
-      <dia:attribute name="wrap_after_char">
-        <dia:int val="40"/>
-      </dia:attribute>
-      <dia:attribute name="comment_line_length">
-        <dia:int val="17"/>
-      </dia:attribute>
-      <dia:attribute name="comment_tagging">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="line_width">
-        <dia:real val="0.10000000000000001"/>
-      </dia:attribute>
-      <dia:attribute name="line_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="fill_color">
-        <dia:color val="#ffffff"/>
-      </dia:attribute>
-      <dia:attribute name="text_color">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="0" name="Courier"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font">
-        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font">
-        <dia:font family="sans" style="0" name="Helvetica"/>
-      </dia:attribute>
-      <dia:attribute name="normal_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="polymorphic_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_font_height">
-        <dia:real val="0.80000000000000004"/>
-      </dia:attribute>
-      <dia:attribute name="classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="abstract_classname_font_height">
-        <dia:real val="1"/>
-      </dia:attribute>
-      <dia:attribute name="comment_font_height">
-        <dia:real val="0.69999999999999996"/>
-      </dia:attribute>
-      <dia:attribute name="attributes">
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#type#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#qname#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Top-level, containing type.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#children#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#std::list&lt;nested_qname&gt;#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Child types.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#is_pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#bool#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string># If true, the top-level type is a pointer. If false, its a stack variable.#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
+      <dia:attribute name="attributes"/>
       <dia:attribute name="operations"/>
       <dia:attribute name="template">
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O12">
+    <dia:object type="UML - Class" version="0" id="O7">
       <dia:attribute name="obj_pos">
-        <dia:point val="-19,10"/>
+        <dia:point val="-56,62"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-19.05,9.95;-9.98,17.65"/>
+        <dia:rectangle val="-56.05,61.95;-42.36,66.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-19,10"/>
+        <dia:point val="-56,62"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="8.9700000000000006"/>
+        <dia:real val="13.59"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="7.6000000000000005"/>
+        <dia:real val="4.4000000000000004"/>
       </dia:attribute>
       <dia:attribute name="name">
-        <dia:string>#pod_types#</dia:string>
+        <dia:string>#nested_qname#</dia:string>
       </dia:attribute>
       <dia:attribute name="stereotype">
-        <dia:string>#enumeration#</dia:string>
+        <dia:string>##</dia:string>
       </dia:attribute>
       <dia:attribute name="comment">
-        <dia:string>#Types of pods.
-
-We need to classify pods with regards to distinguishing properties
-which make code generation different.#</dia:string>
+        <dia:string>#A composite qname.#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
@@ -2791,19 +1721,19 @@ which make code generation different.#</dia:string>
         <dia:font family="monospace" style="0" name="Courier"/>
       </dia:attribute>
       <dia:attribute name="abstract_font">
-        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+        <dia:font family="monospace" style="0" name="Courier"/>
       </dia:attribute>
       <dia:attribute name="polymorphic_font">
-        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+        <dia:font family="monospace" style="0" name="Courier"/>
       </dia:attribute>
       <dia:attribute name="classname_font">
         <dia:font family="sans" style="80" name="Helvetica-Bold"/>
       </dia:attribute>
       <dia:attribute name="abstract_classname_font">
-        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+        <dia:font family="sans" style="0" name="Helvetica"/>
       </dia:attribute>
       <dia:attribute name="comment_font">
-        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+        <dia:font family="sans" style="0" name="Helvetica"/>
       </dia:attribute>
       <dia:attribute name="normal_font_height">
         <dia:real val="0.80000000000000004"/>
@@ -2826,108 +1756,16 @@ which make code generation different.#</dia:string>
       <dia:attribute name="attributes">
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#sequence_container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a sequence container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#associative_container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is an associative container#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#smart_pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a smart pointer#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#entity#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a domain entity#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umlattribute">
-          <dia:attribute name="name">
-            <dia:string>#value#</dia:string>
+            <dia:string>#type#</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>##</dia:string>
+            <dia:string>#qname#</dia:string>
           </dia:attribute>
           <dia:attribute name="value">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>#Pod is a domain value#</dia:string>
+            <dia:string>#Top-level, containing type.#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -2941,114 +1779,66 @@ which make code generation different.#</dia:string>
         </dia:composite>
         <dia:composite type="umlattribute">
           <dia:attribute name="name">
-            <dia:string>#service#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="value">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>#Pod is a service#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-        </dia:composite>
-      </dia:attribute>
-      <dia:attribute name="operations"/>
-      <dia:attribute name="template">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="templates"/>
-    </dia:object>
-    <dia:object type="UML - Association" version="2" id="O13">
-      <dia:attribute name="name">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="direction">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="show_direction">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="assoc_type">
-        <dia:enum val="1"/>
-      </dia:attribute>
-      <dia:attribute name="role_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_a">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_a">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_a">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="role_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="multipicity_b">
-        <dia:string>##</dia:string>
-      </dia:attribute>
-      <dia:attribute name="visibility_b">
-        <dia:enum val="3"/>
-      </dia:attribute>
-      <dia:attribute name="show_arrow_b">
-        <dia:boolean val="false"/>
-      </dia:attribute>
-      <dia:attribute name="obj_pos">
-        <dia:point val="-5.16,29"/>
-      </dia:attribute>
-      <dia:attribute name="obj_bb">
-        <dia:rectangle val="-14.565,17.55;-4.41,29.8"/>
-      </dia:attribute>
-      <dia:attribute name="meta">
-        <dia:composite type="dict"/>
-      </dia:attribute>
-      <dia:attribute name="orth_points">
-        <dia:point val="-5.16,29"/>
-        <dia:point val="-5.16,23"/>
-        <dia:point val="-14.515,23"/>
-        <dia:point val="-14.515,17.6"/>
-      </dia:attribute>
-      <dia:attribute name="orth_orient">
-        <dia:enum val="1"/>
-        <dia:enum val="0"/>
-        <dia:enum val="1"/>
+            <dia:string>#children#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>#std::list&lt;nested_qname&gt;#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string>#Child types.#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+        </dia:composite>
+        <dia:composite type="umlattribute">
+          <dia:attribute name="name">
+            <dia:string>#is_pointer#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="type">
+            <dia:string>#bool#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="value">
+            <dia:string>##</dia:string>
+          </dia:attribute>
+          <dia:attribute name="comment">
+            <dia:string># If true, the top-level type is a pointer. If false, its a stack variable.#</dia:string>
+          </dia:attribute>
+          <dia:attribute name="visibility">
+            <dia:enum val="0"/>
+          </dia:attribute>
+          <dia:attribute name="abstract">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+          <dia:attribute name="class_scope">
+            <dia:boolean val="false"/>
+          </dia:attribute>
+        </dia:composite>
       </dia:attribute>
-      <dia:attribute name="orth_autoroute">
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
         <dia:boolean val="false"/>
       </dia:attribute>
-      <dia:attribute name="text_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:attribute name="line_colour">
-        <dia:color val="#000000"/>
-      </dia:attribute>
-      <dia:connections>
-        <dia:connection handle="0" to="O2" connection="2"/>
-        <dia:connection handle="1" to="O12" connection="6"/>
-      </dia:connections>
+      <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O14">
+    <dia:object type="UML - Class" version="0" id="O8">
       <dia:attribute name="obj_pos">
-        <dia:point val="42,84"/>
+        <dia:point val="-22,87"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="41.95,83.95;59.875,88.45"/>
+        <dia:rectangle val="-22.05,86.95;-4.125,91.45"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="42,84"/>
+        <dia:point val="-22,87"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="17.824999999999999"/>
@@ -3220,7 +2010,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O15">
+    <dia:object type="UML - Association" version="2" id="O9">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -3258,19 +2048,19 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="27.42,74"/>
+        <dia:point val="-1.58,76.4"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="26.67,73.25;51.1125,84.8"/>
+        <dia:rectangle val="-13.1375,75.65;-0.83,87.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="27.42,74"/>
-        <dia:point val="27.42,79"/>
-        <dia:point val="50.9125,79"/>
-        <dia:point val="50.9125,84"/>
+        <dia:point val="-1.58,76.4"/>
+        <dia:point val="-1.58,81.8248"/>
+        <dia:point val="-13.0875,81.8248"/>
+        <dia:point val="-13.0875,87"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -3288,10 +2078,10 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="6"/>
-        <dia:connection handle="1" to="O14" connection="1"/>
+        <dia:connection handle="1" to="O8" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O16">
+    <dia:object type="UML - Association" version="2" id="O10">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -3329,19 +2119,19 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-80,60"/>
+        <dia:point val="-45.58,76"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-80.75,49.35;-69.005,60.8"/>
+        <dia:rectangle val="-49.255,66.35;-44.83,76.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-80,60"/>
-        <dia:point val="-80,54"/>
-        <dia:point val="-69.205,54"/>
-        <dia:point val="-69.205,49.4"/>
+        <dia:point val="-45.58,76"/>
+        <dia:point val="-45.58,70"/>
+        <dia:point val="-49.205,70"/>
+        <dia:point val="-49.205,66.4"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -3358,19 +2148,19 @@ which make code generation different.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O3" connection="0"/>
-        <dia:connection handle="1" to="O11" connection="6"/>
+        <dia:connection handle="0" to="O2" connection="1"/>
+        <dia:connection handle="1" to="O7" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O17">
+    <dia:object type="UML - Class" version="0" id="O11">
       <dia:attribute name="obj_pos">
-        <dia:point val="-32,60"/>
+        <dia:point val="-144,76"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-32.05,59.95;-23.615,65.25"/>
+        <dia:rectangle val="-144.05,75.95;-135.615,81.25"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="-32,60"/>
+        <dia:point val="-144,76"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="8.3350000000000009"/>
@@ -3542,7 +2332,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O18">
+    <dia:object type="UML - Class" version="0" id="O12">
       <dia:attribute name="obj_pos">
         <dia:point val="11,-6"/>
       </dia:attribute>
@@ -3720,7 +2510,7 @@ which make code generation different.#</dia:string>
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#primitive #</dia:string>
+            <dia:string>#value#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="1"/>
@@ -3762,13 +2552,13 @@ which make code generation different.#</dia:string>
         </dia:composite>
         <dia:composite type="umloperation">
           <dia:attribute name="name">
-            <dia:string>#create_pod#</dia:string>
+            <dia:string>#create_value#</dia:string>
           </dia:attribute>
           <dia:attribute name="stereotype">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#pod#</dia:string>
+            <dia:string>#value#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="1"/>
@@ -3808,10 +2598,10 @@ which make code generation different.#</dia:string>
             </dia:composite>
             <dia:composite type="umlparameter">
               <dia:attribute name="name">
-                <dia:string>#pt#</dia:string>
+                <dia:string>#vt#</dia:string>
               </dia:attribute>
               <dia:attribute name="type">
-                <dia:string>#pod_types#</dia:string>
+                <dia:string>#value_types#</dia:string>
               </dia:attribute>
               <dia:attribute name="value">
                 <dia:string>##</dia:string>
@@ -3878,7 +2668,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O19">
+    <dia:object type="UML - Class" version="0" id="O13">
       <dia:attribute name="obj_pos">
         <dia:point val="19,29"/>
       </dia:attribute>
@@ -4266,10 +3056,10 @@ which make code generation different.#</dia:string>
           <dia:attribute name="parameters">
             <dia:composite type="umlparameter">
               <dia:attribute name="name">
-                <dia:string>#pod#</dia:string>
+                <dia:string>#v#</dia:string>
               </dia:attribute>
               <dia:attribute name="type">
-                <dia:string>#pod#</dia:string>
+                <dia:string>#value#</dia:string>
               </dia:attribute>
               <dia:attribute name="value">
                 <dia:string>##</dia:string>
@@ -4505,9 +3295,9 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O20">
+    <dia:object type="UML - Association" version="2" id="O14">
       <dia:attribute name="name">
-        <dia:string>#merges one or more &gt;#</dia:string>
+        <dia:string>#&lt; merges one or more#</dia:string>
       </dia:attribute>
       <dia:attribute name="direction">
         <dia:enum val="2"/>
@@ -4543,18 +3333,18 @@ which make code generation different.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="43.84,60"/>
+        <dia:point val="14.84,60"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="32.36,42.85;44.04,60.8"/>
+        <dia:rectangle val="14.79,42.85;33.86,60.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="43.84,60"/>
-        <dia:point val="43.84,54"/>
-        <dia:point val="33.11,54"/>
+        <dia:point val="14.84,60"/>
+        <dia:point val="14.84,56"/>
+        <dia:point val="33.11,56"/>
         <dia:point val="33.11,43.6"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
@@ -4573,21 +3363,21 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:connections>
         <dia:connection handle="0" to="O0" connection="2"/>
-        <dia:connection handle="1" to="O19" connection="6"/>
+        <dia:connection handle="1" to="O13" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O21">
+    <dia:object type="UML - Class" version="0" id="O15">
       <dia:attribute name="obj_pos">
         <dia:point val="71,-6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="70.95,-6.05;91.57,0.05"/>
+        <dia:rectangle val="70.95,-6.05;93.11,0.05"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
         <dia:point val="71,-6"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="20.52"/>
+        <dia:real val="22.059999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="6"/>
@@ -4731,13 +3521,13 @@ which make code generation different.#</dia:string>
         </dia:composite>
         <dia:composite type="umloperation">
           <dia:attribute name="name">
-            <dia:string>#create_pod#</dia:string>
+            <dia:string>#create_value#</dia:string>
           </dia:attribute>
           <dia:attribute name="stereotype">
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="type">
-            <dia:string>#pod#</dia:string>
+            <dia:string>#value#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="1"/>
@@ -4777,10 +3567,10 @@ which make code generation different.#</dia:string>
             </dia:composite>
             <dia:composite type="umlparameter">
               <dia:attribute name="name">
-                <dia:string>#pt#</dia:string>
+                <dia:string>#vt#</dia:string>
               </dia:attribute>
               <dia:attribute name="type">
-                <dia:string>#pod_types#</dia:string>
+                <dia:string>#value_types#</dia:string>
               </dia:attribute>
               <dia:attribute name="value">
                 <dia:string>##</dia:string>
@@ -4847,7 +3637,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O22">
+    <dia:object type="UML - Class" version="0" id="O16">
       <dia:attribute name="obj_pos">
         <dia:point val="47,-6"/>
       </dia:attribute>
@@ -5036,7 +3826,7 @@ which make code generation different.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O23">
+    <dia:object type="UML - Note" version="0" id="O17">
       <dia:attribute name="obj_pos">
         <dia:point val="46,16"/>
       </dia:attribute>
@@ -5088,7 +3878,7 @@ and all of the supported types within those models.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O24">
+    <dia:object type="UML - Message" version="0" id="O18">
       <dia:attribute name="obj_pos">
         <dia:point val="56.2675,16"/>
       </dia:attribute>
@@ -5118,11 +3908,11 @@ and all of the supported types within those models.#</dia:string>
         <dia:point val="46.4763,13.9999"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O23" connection="1"/>
-        <dia:connection handle="1" to="O29" connection="2"/>
+        <dia:connection handle="0" to="O17" connection="1"/>
+        <dia:connection handle="1" to="O23" connection="2"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Message" version="0" id="O25">
+    <dia:object type="UML - Message" version="0" id="O19">
       <dia:attribute name="obj_pos">
         <dia:point val="53,41.05"/>
       </dia:attribute>
@@ -5152,11 +3942,11 @@ and all of the supported types within those models.#</dia:string>
         <dia:point val="50.11,41.3749"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O26" connection="3"/>
-        <dia:connection handle="1" to="O19" connection="31"/>
+        <dia:connection handle="0" to="O20" connection="3"/>
+        <dia:connection handle="1" to="O13" connection="31"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O26">
+    <dia:object type="UML - Note" version="0" id="O20">
       <dia:attribute name="obj_pos">
         <dia:point val="53,39"/>
       </dia:attribute>
@@ -5210,7 +4000,7 @@ all types in the combined model.#</dia:string>
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O27">
+    <dia:object type="UML - Association" version="2" id="O21">
       <dia:attribute name="name">
         <dia:string>#throws on failure &gt;#</dia:string>
       </dia:attribute>
@@ -5277,25 +4067,25 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O19" connection="2"/>
-        <dia:connection handle="1" to="O9" connection="1"/>
+        <dia:connection handle="0" to="O13" connection="2"/>
+        <dia:connection handle="1" to="O6" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O28">
+    <dia:object type="UML - Class" version="0" id="O22">
       <dia:attribute name="obj_pos">
         <dia:point val="-16,-6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-16.05,-6.05;-0.05,-0.75"/>
+        <dia:rectangle val="-16.05,-6.05;-9.29,-2.35"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
         <dia:point val="-16,-6"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="15.9"/>
+        <dia:real val="6.6600000000000001"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
-        <dia:real val="5.2000000000000002"/>
+        <dia:real val="3.6000000000000001"/>
       </dia:attribute>
       <dia:attribute name="name">
         <dia:string>#injector#</dia:string>
@@ -5388,102 +4178,6 @@ all types in the combined model.#</dia:string>
       <dia:attribute name="operations">
         <dia:composite type="umloperation">
           <dia:attribute name="name">
-            <dia:string>#injector#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="0"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#add_versioning_types#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#bool#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
-            <dia:string>#create_key_system_pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="stereotype">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="type">
-            <dia:string>#pod#</dia:string>
-          </dia:attribute>
-          <dia:attribute name="visibility">
-            <dia:enum val="1"/>
-          </dia:attribute>
-          <dia:attribute name="comment">
-            <dia:string>##</dia:string>
-          </dia:attribute>
-          <dia:attribute name="abstract">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="inheritance_type">
-            <dia:enum val="2"/>
-          </dia:attribute>
-          <dia:attribute name="query">
-            <dia:boolean val="true"/>
-          </dia:attribute>
-          <dia:attribute name="class_scope">
-            <dia:boolean val="false"/>
-          </dia:attribute>
-          <dia:attribute name="parameters">
-            <dia:composite type="umlparameter">
-              <dia:attribute name="name">
-                <dia:string>#p#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="type">
-                <dia:string>#pod#</dia:string>
-              </dia:attribute>
-              <dia:attribute name="value">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="comment">
-                <dia:string>##</dia:string>
-              </dia:attribute>
-              <dia:attribute name="kind">
-                <dia:enum val="0"/>
-              </dia:attribute>
-            </dia:composite>
-          </dia:attribute>
-        </dia:composite>
-        <dia:composite type="umloperation">
-          <dia:attribute name="name">
             <dia:string>#inject#</dia:string>
           </dia:attribute>
           <dia:attribute name="stereotype">
@@ -5536,7 +4230,7 @@ all types in the combined model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O29">
+    <dia:object type="UML - Class" version="0" id="O23">
       <dia:attribute name="obj_pos">
         <dia:point val="5,11"/>
       </dia:attribute>
@@ -5903,7 +4597,7 @@ all types in the combined model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O30">
+    <dia:object type="UML - Association" version="2" id="O24">
       <dia:attribute name="name">
         <dia:string>#merges models using &gt;#</dia:string>
       </dia:attribute>
@@ -5970,11 +4664,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="6"/>
-        <dia:connection handle="1" to="O19" connection="38"/>
+        <dia:connection handle="0" to="O23" connection="6"/>
+        <dia:connection handle="1" to="O13" connection="38"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O31">
+    <dia:object type="UML - Association" version="2" id="O25">
       <dia:attribute name="name">
         <dia:string>#injects system types for &gt;#</dia:string>
       </dia:attribute>
@@ -6015,7 +4709,7 @@ all types in the combined model.#</dia:string>
         <dia:point val="5,11"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-8.1,-0.85;5.75,11.8"/>
+        <dia:rectangle val="-12.72,-2.45;5.75,11.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -6023,8 +4717,8 @@ all types in the combined model.#</dia:string>
       <dia:attribute name="orth_points">
         <dia:point val="5,11"/>
         <dia:point val="5,6"/>
-        <dia:point val="-8.05,6"/>
-        <dia:point val="-8.05,-0.8"/>
+        <dia:point val="-12.67,6"/>
+        <dia:point val="-12.67,-2.4"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6041,11 +4735,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="0"/>
-        <dia:connection handle="1" to="O28" connection="6"/>
+        <dia:connection handle="0" to="O23" connection="0"/>
+        <dia:connection handle="1" to="O22" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O32">
+    <dia:object type="UML - Association" version="2" id="O26">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6083,19 +4777,19 @@ all types in the combined model.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-69.205,45"/>
+        <dia:point val="-49.205,62"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-69.955,33.95;-55.8875,45.8"/>
+        <dia:rectangle val="-49.955,50.95;-44.8875,62.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-69.205,45"/>
-        <dia:point val="-69.205,40"/>
-        <dia:point val="-56.0875,40"/>
-        <dia:point val="-56.0875,34"/>
+        <dia:point val="-49.205,62"/>
+        <dia:point val="-49.205,56"/>
+        <dia:point val="-45.0875,56"/>
+        <dia:point val="-45.0875,51"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6112,11 +4806,11 @@ all types in the combined model.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O11" connection="1"/>
+        <dia:connection handle="0" to="O7" connection="1"/>
         <dia:connection handle="1" to="O1" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Note" version="0" id="O33">
+    <dia:object type="UML - Note" version="0" id="O27">
       <dia:attribute name="obj_pos">
         <dia:point val="-79,-11"/>
       </dia:attribute>
@@ -6174,7 +4868,7 @@ but with a focus only on data structures and domain driven constructs.
         </dia:composite>
       </dia:attribute>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O34">
+    <dia:object type="UML - Class" version="0" id="O28">
       <dia:attribute name="obj_pos">
         <dia:point val="-32,-6"/>
       </dia:attribute>
@@ -6284,7 +4978,7 @@ but with a focus only on data structures and domain driven constructs.
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O35">
+    <dia:object type="UML - Association" version="2" id="O29">
       <dia:attribute name="name">
         <dia:string>#&lt; throws on failure#</dia:string>
       </dia:attribute>
@@ -6322,17 +5016,17 @@ but with a focus only on data structures and domain driven constructs.
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-8.05,-6"/>
+        <dia:point val="-12.67,-6"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-28.5037,-11.75;-7.3,-5.2"/>
+        <dia:rectangle val="-28.5037,-11.75;-11.92,-5.2"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-8.05,-6"/>
-        <dia:point val="-8.05,-11"/>
+        <dia:point val="-12.67,-6"/>
+        <dia:point val="-12.67,-11"/>
         <dia:point val="-28.4537,-11"/>
         <dia:point val="-28.4537,-6"/>
       </dia:attribute>
@@ -6351,11 +5045,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O28" connection="1"/>
-        <dia:connection handle="1" to="O34" connection="1"/>
+        <dia:connection handle="0" to="O22" connection="1"/>
+        <dia:connection handle="1" to="O28" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O36">
+    <dia:object type="UML - Association" version="2" id="O30">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6393,19 +5087,19 @@ but with a focus only on data structures and domain driven constructs.
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-21.58,48.6"/>
+        <dia:point val="-122,76"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-27.8825,47.85;-20.83,60.8"/>
+        <dia:rectangle val="-139.883,69.4167;-121.25,76.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-21.58,48.6"/>
-        <dia:point val="-21.58,54"/>
-        <dia:point val="-27.8325,54"/>
-        <dia:point val="-27.8325,60"/>
+        <dia:point val="-122,76"/>
+        <dia:point val="-122,70.1667"/>
+        <dia:point val="-139.833,70.1667"/>
+        <dia:point val="-139.833,76"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6422,11 +5116,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O2" connection="6"/>
-        <dia:connection handle="1" to="O17" connection="1"/>
+        <dia:connection handle="0" to="O36" connection="0"/>
+        <dia:connection handle="1" to="O11" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O37">
+    <dia:object type="UML - Association" version="2" id="O31">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6464,19 +5158,19 @@ but with a focus only on data structures and domain driven constructs.
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="-38,29"/>
+        <dia:point val="-18,60"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-47.225,22.25;-37.25,29.8"/>
+        <dia:rectangle val="-36.225,50.95;-17.25,60.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="-38,29"/>
-        <dia:point val="-38,23"/>
-        <dia:point val="-47.175,23"/>
-        <dia:point val="-47.175,28"/>
+        <dia:point val="-18,60"/>
+        <dia:point val="-18,56"/>
+        <dia:point val="-36.175,56"/>
+        <dia:point val="-36.175,51"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6493,11 +5187,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O2" connection="0"/>
-        <dia:connection handle="1" to="O1" connection="2"/>
+        <dia:connection handle="0" to="O0" connection="0"/>
+        <dia:connection handle="1" to="O1" connection="7"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O38">
+    <dia:object type="UML - Association" version="2" id="O32">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6564,11 +5258,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O18" connection="6"/>
+        <dia:connection handle="0" to="O23" connection="2"/>
+        <dia:connection handle="1" to="O12" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O39">
+    <dia:object type="UML - Association" version="2" id="O33">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6635,11 +5329,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O22" connection="6"/>
+        <dia:connection handle="0" to="O23" connection="2"/>
+        <dia:connection handle="1" to="O16" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O40">
+    <dia:object type="UML - Association" version="2" id="O34">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -6680,7 +5374,7 @@ but with a focus only on data structures and domain driven constructs.
         <dia:point val="36.685,11"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="35.935,-0.05;81.46,11.8"/>
+        <dia:rectangle val="35.935,-0.05;82.23,11.8"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -6688,8 +5382,8 @@ but with a focus only on data structures and domain driven constructs.
       <dia:attribute name="orth_points">
         <dia:point val="36.685,11"/>
         <dia:point val="36.685,6"/>
-        <dia:point val="81.26,6"/>
-        <dia:point val="81.26,0"/>
+        <dia:point val="82.03,6"/>
+        <dia:point val="82.03,0"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -6706,11 +5400,11 @@ but with a focus only on data structures and domain driven constructs.
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O29" connection="2"/>
-        <dia:connection handle="1" to="O21" connection="6"/>
+        <dia:connection handle="0" to="O23" connection="2"/>
+        <dia:connection handle="1" to="O15" connection="6"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O41">
+    <dia:object type="UML - Class" version="0" id="O35">
       <dia:attribute name="obj_pos">
         <dia:point val="-65,129"/>
       </dia:attribute>
@@ -6890,7 +5584,7 @@ but with a focus only on data structures and domain driven constructs.
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O42">
+    <dia:object type="UML - Class" version="0" id="O36">
       <dia:attribute name="obj_pos">
         <dia:point val="-122,76"/>
       </dia:attribute>
@@ -7099,7 +5793,7 @@ what is common to all the things that belong to a domain model.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O43">
+    <dia:object type="UML - Class" version="0" id="O37">
       <dia:attribute name="obj_pos">
         <dia:point val="-134,93"/>
       </dia:attribute>
@@ -7235,7 +5929,7 @@ Aggregates a group of logically related types into a unit.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O44">
+    <dia:object type="UML - Generalization" version="1" id="O38">
       <dia:attribute name="obj_pos">
         <dia:point val="-105.58,82"/>
       </dia:attribute>
@@ -7272,11 +5966,11 @@ Aggregates a group of logically related types into a unit.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O42" connection="6"/>
-        <dia:connection handle="1" to="O43" connection="1"/>
+        <dia:connection handle="0" to="O36" connection="6"/>
+        <dia:connection handle="1" to="O37" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O45">
+    <dia:object type="UML - Class" version="0" id="O39">
       <dia:attribute name="obj_pos">
         <dia:point val="-89,93"/>
       </dia:attribute>
@@ -7669,12 +6363,12 @@ A type is only comparable if all of its properties have comparable types.#</dia:
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O46">
+    <dia:object type="UML - Generalization" version="1" id="O40">
       <dia:attribute name="obj_pos">
         <dia:point val="-105.58,82"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="-106.43,81.95;-80.0375,93.05"/>
+        <dia:rectangle val="-106.43,81.95;-88.95,93.05"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -7682,8 +6376,8 @@ A type is only comparable if all of its properties have comparable types.#</dia:
       <dia:attribute name="orth_points">
         <dia:point val="-105.58,82"/>
         <dia:point val="-105.58,88"/>
-        <dia:point val="-80.0875,88"/>
-        <dia:point val="-80.0875,93"/>
+        <dia:point val="-89,88"/>
+        <dia:point val="-89,93"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -7706,11 +6400,11 @@ A type is only comparable if all of its properties have comparable types.#</dia:
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O42" connection="6"/>
-        <dia:connection handle="1" to="O45" connection="1"/>
+        <dia:connection handle="0" to="O36" connection="6"/>
+        <dia:connection handle="1" to="O39" connection="0"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O47">
+    <dia:object type="UML - Class" version="0" id="O41">
       <dia:attribute name="obj_pos">
         <dia:point val="-119,115"/>
       </dia:attribute>
@@ -7848,7 +6542,7 @@ object.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O48">
+    <dia:object type="UML - Class" version="0" id="O42">
       <dia:attribute name="obj_pos">
         <dia:point val="-102,115"/>
       </dia:attribute>
@@ -8039,7 +6733,7 @@ requirements of the underlying typed element.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O49">
+    <dia:object type="UML - Class" version="0" id="O43">
       <dia:attribute name="obj_pos">
         <dia:point val="-128,129"/>
       </dia:attribute>
@@ -8380,7 +7074,7 @@ requirements of the underlying typed element.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O50">
+    <dia:object type="UML - Generalization" version="1" id="O44">
       <dia:attribute name="obj_pos">
         <dia:point val="-80.0875,105.4"/>
       </dia:attribute>
@@ -8417,11 +7111,11 @@ requirements of the underlying typed element.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O45" connection="6"/>
-        <dia:connection handle="1" to="O47" connection="1"/>
+        <dia:connection handle="0" to="O39" connection="6"/>
+        <dia:connection handle="1" to="O41" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O51">
+    <dia:object type="UML - Association" version="2" id="O45">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -8488,11 +7182,11 @@ requirements of the underlying typed element.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O47" connection="6"/>
-        <dia:connection handle="1" to="O49" connection="1"/>
+        <dia:connection handle="0" to="O41" connection="6"/>
+        <dia:connection handle="1" to="O43" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O52">
+    <dia:object type="UML - Generalization" version="1" id="O46">
       <dia:attribute name="obj_pos">
         <dia:point val="-80.0875,105.4"/>
       </dia:attribute>
@@ -8529,11 +7223,11 @@ requirements of the underlying typed element.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O45" connection="6"/>
-        <dia:connection handle="1" to="O48" connection="14"/>
+        <dia:connection handle="0" to="O39" connection="6"/>
+        <dia:connection handle="1" to="O42" connection="14"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O53">
+    <dia:object type="UML - Class" version="0" id="O47">
       <dia:attribute name="obj_pos">
         <dia:point val="-79,115"/>
       </dia:attribute>
@@ -8671,7 +7365,7 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O54">
+    <dia:object type="UML - Generalization" version="1" id="O48">
       <dia:attribute name="obj_pos">
         <dia:point val="-80.0875,105.4"/>
       </dia:attribute>
@@ -8708,11 +7402,11 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O45" connection="6"/>
-        <dia:connection handle="1" to="O53" connection="1"/>
+        <dia:connection handle="0" to="O39" connection="6"/>
+        <dia:connection handle="1" to="O47" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Association" version="2" id="O55">
+    <dia:object type="UML - Association" version="2" id="O49">
       <dia:attribute name="name">
         <dia:string>##</dia:string>
       </dia:attribute>
@@ -8779,11 +7473,11 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O53" connection="6"/>
-        <dia:connection handle="1" to="O41" connection="1"/>
+        <dia:connection handle="0" to="O47" connection="6"/>
+        <dia:connection handle="1" to="O35" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O56">
+    <dia:object type="UML - Class" version="0" id="O50">
       <dia:attribute name="obj_pos">
         <dia:point val="-61,115"/>
       </dia:attribute>
@@ -8893,7 +7587,7 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O57">
+    <dia:object type="UML - Generalization" version="1" id="O51">
       <dia:attribute name="obj_pos">
         <dia:point val="-80.0875,105.45"/>
       </dia:attribute>
@@ -8930,11 +7624,11 @@ generation constraints, services tend to be where all the behaviour sits.#</dia:
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O45" connection="32"/>
-        <dia:connection handle="1" to="O56" connection="1"/>
+        <dia:connection handle="0" to="O39" connection="32"/>
+        <dia:connection handle="1" to="O50" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O58">
+    <dia:object type="UML - Class" version="0" id="O52">
       <dia:attribute name="obj_pos">
         <dia:point val="-45,115"/>
       </dia:attribute>
@@ -9049,7 +7743,7 @@ underlying storage (for example, a relational database).#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O59">
+    <dia:object type="UML - Generalization" version="1" id="O53">
       <dia:attribute name="obj_pos">
         <dia:point val="-80.0875,105.4"/>
       </dia:attribute>
@@ -9086,11 +7780,11 @@ underlying storage (for example, a relational database).#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O45" connection="6"/>
-        <dia:connection handle="1" to="O58" connection="1"/>
+        <dia:connection handle="0" to="O39" connection="6"/>
+        <dia:connection handle="1" to="O52" connection="1"/>
       </dia:connections>
     </dia:object>
-    <dia:object type="UML - Class" version="0" id="O60">
+    <dia:object type="UML - Class" version="0" id="O54">
       <dia:attribute name="obj_pos">
         <dia:point val="-113,93"/>
       </dia:attribute>
@@ -9249,7 +7943,7 @@ Does not include inherited attributes.#</dia:string>
       </dia:attribute>
       <dia:attribute name="templates"/>
     </dia:object>
-    <dia:object type="UML - Generalization" version="1" id="O61">
+    <dia:object type="UML - Generalization" version="1" id="O55">
       <dia:attribute name="obj_pos">
         <dia:point val="-105.58,82"/>
       </dia:attribute>
@@ -9286,8 +7980,79 @@ Does not include inherited attributes.#</dia:string>
         <dia:string>##</dia:string>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O42" connection="6"/>
-        <dia:connection handle="1" to="O60" connection="1"/>
+        <dia:connection handle="0" to="O36" connection="6"/>
+        <dia:connection handle="1" to="O54" connection="1"/>
+      </dia:connections>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O56">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="-89.16,76"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="-89.91,50.95;-53.8,77.6"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="-89.16,76"/>
+        <dia:point val="-89.16,56"/>
+        <dia:point val="-54,56"/>
+        <dia:point val="-54,51"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O36" connection="2"/>
+        <dia:connection handle="1" to="O1" connection="5"/>
       </dia:connections>
     </dia:object>
   </dia:layer>
diff --git a/doc/agile/backlog.org b/doc/agile/backlog.org
index 08890b7..9a44de8 100644
--- a/doc/agile/backlog.org
+++ b/doc/agile/backlog.org
@@ -11,6 +11,11 @@ This file contains all stories that haven't been assigned to a sprint.
 
 Stories that we intend to look at, at some point.
 
+*** Assignment operator should be protected in ABC                    :story:
+
+As per MEC 33. We should probably do the same for the move and copy
+constructors.
+
 *** Remove generation types in SML                                    :story:
 
 SML knows not of code generation so we shouldn't have a generation
diff --git a/doc/agile/release_notes_sprint_28.org b/doc/agile/release_notes_sprint_28.org
index b40bd8d..7934f82 100644
--- a/doc/agile/release_notes_sprint_28.org
+++ b/doc/agile/release_notes_sprint_28.org
@@ -10,13 +10,13 @@ This file contains all stories that were closed during sprint 28.
 ** Development Stories Implemented
 
 #+begin: clocktable :maxlevel 3 :scope subtree
-Clock summary at [2013-06-11 Tue 18:32]
+Clock summary at [2013-06-11 Tue 19:44]
 
 | Headline                                                         | Time    |       |       |
 |------------------------------------------------------------------+---------+-------+-------|
-| *Total time*                                                     | *25:17* |       |       |
+| *Total time*                                                     | *25:52* |       |       |
 |------------------------------------------------------------------+---------+-------+-------|
-| Development Stories Implemented                                  |         | 25:17 |       |
+| Development Stories Implemented                                  |         | 25:52 |       |
 | COMPLETED Update README                                          |         |       |  1:04 |
 | COMPLETED Whiteboarding on the role of SML                       |         |       |  1:45 |
 | COMPLETED Leaf types do not have a virtual destructor            |         |       |  0:26 |
@@ -25,7 +25,7 @@ Clock summary at [2013-06-11 Tue 18:32]
 | COMPLETED Test move constructors in test model                   |         |       |  2:52 |
 | COMPLETED Transformer tests should check that docs are not empty |         |       |  0:28 |
 | IMPLEMENTATION Release notes and backlog grooming                |         |       |  1:04 |
-| IMPLEMENTATION Improve modeling of domain driven concepts in SML |         |       | 12:16 |
+| IMPLEMENTATION Improve modeling of domain driven concepts in SML |         |       | 12:51 |
 | IMPLEMENTATION Add support for concepts at the SML level         |         |       |  1:45 |
 | ANALYSIS Break down SML into concepts                            |         |       |  1:27 |
 | Refactor top level concepts in SML                               |         |       |  0:22 |
@@ -110,6 +110,7 @@ documentation if necessary.
     CLOCK: [2013-06-08 Sat 12:10]--[2013-06-08 Sat 12:49] =>  0:39
     CLOCK: [2013-06-06 Thu 08:52]--[2013-06-06 Thu 09:03] =>  0:11
     CLOCK: [2013-06-06 Thu 08:18]--[2013-06-06 Thu 08:48] =>  0:30
+    CLOCK: [2013-06-04 Tue 18:40]--[2013-06-04 Tue 19:02] =>  0:22
 
 Its becoming obvious that SML is largely trying to model part of the
 domain driven design model - the part that is closer to code and
@@ -119,6 +120,9 @@ which obscured this. The objective of this story is to bring to the
 fore all parts of SML which are representations of DDD concepts, and
 to make sure these are modeled as closely as possible to DDD.
 
+This will be a good chance to fix =pod= which was incorrectly named
+due to of a lack of understanding of what a C++ pod type [[http://en.wikipedia.org/wiki/Plain_old_data_structure][really is]].
+
 *Keys and visitor*
 
 At the meta-model level, keys are actually just an instance of a value
@@ -293,7 +297,15 @@ don't really exist at the SML level.
      CLOCK: [2013-06-11 Tue 08:24]--[2013-06-11 Tue 08:31] =>  0:07
      CLOCK: [2013-06-11 Tue 07:47]--[2013-06-11 Tue 08:16] =>  0:29
 
-**** Convert pods into entity, value or service type objects          :story:
+**** IMPLEMENTATION Convert pods into entities, values or services    :story:
+     CLOCK: [2013-06-12 Wed 18:13]
+     CLOCK: [2013-06-12 Wed 18:00]--[2013-06-12 Wed 18:10] =>  0:10
+     CLOCK: [2013-06-12 Wed 08:31]--[2013-06-12 Wed 08:40] =>  0:09
+     CLOCK: [2013-06-12 Wed 07:56]--[2013-06-12 Wed 08:15] =>  0:19
+     CLOCK: [2013-06-11 Tue 19:44]--[2013-06-11 Tue 20:04] =>  0:20
+     CLOCK: [2013-06-11 Tue 18:48]--[2013-06-11 Tue 19:20] =>  0:32
+     CLOCK: [2013-06-11 Tue 18:42]--[2013-06-11 Tue 18:45] =>  0:03
+
 *** Model name should be a qname                                      :story:
 
 We already have most of the qname properties in the model anyway, so
@@ -350,39 +362,23 @@ applicable. Things that need to be modeled as concepts:
 - UniquelyIdentifiable: type has can be uniquely identified by its
   qualified name.
 - Documentable: type can be documented.
-- Parameterisable: type supports opaque parameters (implementation
-  specific parameters).
+- Parameterisable: type supports pass-through parameters
+  (implementation specific parameters).
 - Generatable: type has different properties with respect to
   generation.
-- Inheritable: type provides support for inheritance.
-- Stateful: type has properties.
-- Operatable: type has methods (operations).
 - ModelElement: refinement of UniquelyIdentifiable, Documentable,
   Parameterisable. Modeled by =sml::model=.
 - GeneratableModelElement: refinement of ModelElement and
   Generatable. Modeled by =sml::enumeration=, =sml::exception=, etc.
+- Inheritable: type provides support for inheritance.
+- Stateful: type has properties.
+- Operatable: type has methods (operations).
 - ClassifiableModelElement: refinement of GeneratableModelElement,
   Stateful and Operatable. At present modeled by =sml::pod=. In the
   future: =sml::value=, =sml::entity=, =sml::service=,
   =sml::repository=, =sml::factory=. =sml::versioned_key=,
   =sml::unversioned_key=, =sml::concept=.
 
-*** Refactor top level concepts in SML                                :story:
-    CLOCK: [2013-06-04 Tue 18:40]--[2013-06-04 Tue 19:02] =>  0:22
-
-SML is in many ways the domain model of domain driven development
-(DDD). Due to this, DDD concepts should be first class citizens:
-
-- entity
-- value
-- service
-- aggregate root
-- factory
-- repository
-
-This will be a good chance to fix =pod= which was incorrectly named
-due to of a lack of understanding of what a C++ pod type [[http://en.wikipedia.org/wiki/Plain_old_data_structure][really is]].
-
 *** Rename implementation specific parameters                         :story:
 
 These should really be called back end specific parameters at the SML
diff --git a/projects/sml/include/dogen/sml/hash/all_hash.hpp b/projects/sml/include/dogen/sml/hash/all_hash.hpp
index 866e782..2328f68 100644
--- a/projects/sml/include/dogen/sml/hash/all_hash.hpp
+++ b/projects/sml/include/dogen/sml/hash/all_hash.hpp
@@ -18,7 +18,6 @@
  * MA 02110-1301, USA.
  *
  */
-#include "dogen/sml/hash/category_types_hash.hpp"
 #include "dogen/sml/hash/concept_hash.hpp"
 #include "dogen/sml/hash/entity_hash.hpp"
 #include "dogen/sml/hash/factory_hash.hpp"
@@ -28,8 +27,6 @@
 #include "dogen/sml/hash/model_hash.hpp"
 #include "dogen/sml/hash/module_hash.hpp"
 #include "dogen/sml/hash/nested_qname_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
-#include "dogen/sml/hash/pod_types_hash.hpp"
 #include "dogen/sml/hash/property_hash.hpp"
 #include "dogen/sml/hash/qname_hash.hpp"
 #include "dogen/sml/hash/reference_hash.hpp"
diff --git a/projects/sml/include/dogen/sml/hash/category_types_hash.hpp b/projects/sml/include/dogen/sml/hash/category_types_hash.hpp
deleted file mode 100644
index 7769144..0000000
--- a/projects/sml/include/dogen/sml/hash/category_types_hash.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_CATEGORY_TYPES_HASH_HPP
-#define DOGEN_SML_HASH_CATEGORY_TYPES_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/category_types.hpp"
-
-namespace std {
-
-template<>
-class hash<dogen::sml::category_types> {
-public:
-    size_t operator()(const dogen::sml::category_types& v) const {
-        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
-    }
-};
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/hash/pod_hash.hpp b/projects/sml/include/dogen/sml/hash/pod_hash.hpp
deleted file mode 100644
index 9d4d230..0000000
--- a/projects/sml/include/dogen/sml/hash/pod_hash.hpp
+++ /dev/null
@@ -1,52 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_POD_HASH_HPP
-#define DOGEN_SML_HASH_POD_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_hasher {
-public:
-    static std::size_t hash(const pod& v);
-};
-
-} }
-
-namespace std {
-
-template<>
-class hash<dogen::sml::pod> {
-public:
-    size_t operator()(const dogen::sml::pod& v) const {
-        return dogen::sml::pod_hasher::hash(v);
-    }
-};
-
-}
-#endif
diff --git a/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp b/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp
deleted file mode 100644
index fbc6f42..0000000
--- a/projects/sml/include/dogen/sml/hash/pod_types_hash.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_HASH_POD_TYPES_HASH_HPP
-#define DOGEN_SML_HASH_POD_TYPES_HASH_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <functional>
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace std {
-
-template<>
-class hash<dogen::sml::pod_types> {
-public:
-    size_t operator()(const dogen::sml::pod_types& v) const {
-        return std::hash<unsigned int>()(static_cast<unsigned int>(v));
-    }
-};
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/all_io.hpp b/projects/sml/include/dogen/sml/io/all_io.hpp
index 176f501..73ab131 100644
--- a/projects/sml/include/dogen/sml/io/all_io.hpp
+++ b/projects/sml/include/dogen/sml/io/all_io.hpp
@@ -18,7 +18,6 @@
  * MA 02110-1301, USA.
  *
  */
-#include "dogen/sml/io/category_types_io.hpp"
 #include "dogen/sml/io/concept_io.hpp"
 #include "dogen/sml/io/entity_io.hpp"
 #include "dogen/sml/io/factory_io.hpp"
@@ -28,8 +27,6 @@
 #include "dogen/sml/io/model_io.hpp"
 #include "dogen/sml/io/module_io.hpp"
 #include "dogen/sml/io/nested_qname_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
-#include "dogen/sml/io/pod_types_io.hpp"
 #include "dogen/sml/io/property_io.hpp"
 #include "dogen/sml/io/qname_io.hpp"
 #include "dogen/sml/io/reference_io.hpp"
diff --git a/projects/sml/include/dogen/sml/io/category_types_io.hpp b/projects/sml/include/dogen/sml/io/category_types_io.hpp
deleted file mode 100644
index fdc8d45..0000000
--- a/projects/sml/include/dogen/sml/io/category_types_io.hpp
+++ /dev/null
@@ -1,38 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_CATEGORY_TYPES_IO_HPP
-#define DOGEN_SML_IO_CATEGORY_TYPES_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/category_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const category_types& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/pod_io.hpp b/projects/sml/include/dogen/sml/io/pod_io.hpp
deleted file mode 100644
index 69f4286..0000000
--- a/projects/sml/include/dogen/sml/io/pod_io.hpp
+++ /dev/null
@@ -1,40 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_POD_IO_HPP
-#define DOGEN_SML_IO_POD_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream&
-operator<<(std::ostream& s,
-     const dogen::sml::pod& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/io/pod_types_io.hpp b/projects/sml/include/dogen/sml/io/pod_types_io.hpp
deleted file mode 100644
index 1f6a832..0000000
--- a/projects/sml/include/dogen/sml/io/pod_types_io.hpp
+++ /dev/null
@@ -1,38 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_IO_POD_TYPES_IO_HPP
-#define DOGEN_SML_IO_POD_TYPES_IO_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <iosfwd>
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod_types& v);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/all_ser.hpp b/projects/sml/include/dogen/sml/serialization/all_ser.hpp
index 1de7cbe..c937a8d 100644
--- a/projects/sml/include/dogen/sml/serialization/all_ser.hpp
+++ b/projects/sml/include/dogen/sml/serialization/all_ser.hpp
@@ -18,7 +18,6 @@
  * MA 02110-1301, USA.
  *
  */
-#include "dogen/sml/serialization/category_types_ser.hpp"
 #include "dogen/sml/serialization/concept_ser.hpp"
 #include "dogen/sml/serialization/entity_ser.hpp"
 #include "dogen/sml/serialization/factory_ser.hpp"
@@ -28,8 +27,6 @@
 #include "dogen/sml/serialization/model_ser.hpp"
 #include "dogen/sml/serialization/module_ser.hpp"
 #include "dogen/sml/serialization/nested_qname_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
-#include "dogen/sml/serialization/pod_types_ser.hpp"
 #include "dogen/sml/serialization/property_ser.hpp"
 #include "dogen/sml/serialization/qname_ser.hpp"
 #include "dogen/sml/serialization/reference_ser.hpp"
diff --git a/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp
deleted file mode 100644
index 5d764ca..0000000
--- a/projects/sml/include/dogen/sml/serialization/category_types_ser.hpp
+++ /dev/null
@@ -1,37 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_CATEGORY_TYPES_SER_HPP
-#define DOGEN_SML_SERIALIZATION_CATEGORY_TYPES_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/nvp.hpp>
-#include "dogen/sml/types/category_types.hpp"
-
-template<class Archive>
-void serialize(Archive& ar, dogen::sml::category_types& v, unsigned int /*version*/){
-    using boost::serialization::make_nvp;
-    ar & make_nvp("category_types", v);
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp
deleted file mode 100644
index ff6f038..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_fwd_ser.hpp
+++ /dev/null
@@ -1,41 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_FWD_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_FWD_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod_fwd.hpp"
-
-namespace boost {
-namespace serialization {
-
-template<class Archive>
-void save(Archive& ar, const dogen::sml::pod& v, unsigned int version);
-
-template<class Archive>
-void load(Archive& ar, dogen::sml::pod& v, unsigned int version);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_ser.hpp
deleted file mode 100644
index 1adb134..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_ser.hpp
+++ /dev/null
@@ -1,43 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/split_free.hpp>
-#include "dogen/sml/types/pod.hpp"
-
-BOOST_SERIALIZATION_SPLIT_FREE(dogen::sml::pod)
-namespace boost {
-namespace serialization {
-
-template<typename Archive>
-void save(Archive& ar, const dogen::sml::pod& v, unsigned int version);
-
-template<typename Archive>
-void load(Archive& ar, dogen::sml::pod& v, unsigned int version);
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp b/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp
deleted file mode 100644
index 786ce49..0000000
--- a/projects/sml/include/dogen/sml/serialization/pod_types_ser.hpp
+++ /dev/null
@@ -1,37 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_SERIALIZATION_POD_TYPES_SER_HPP
-#define DOGEN_SML_SERIALIZATION_POD_TYPES_SER_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <boost/serialization/nvp.hpp>
-#include "dogen/sml/types/pod_types.hpp"
-
-template<class Archive>
-void serialize(Archive& ar, dogen::sml::pod_types& v, unsigned int /*version*/){
-    using boost::serialization::make_nvp;
-    ar & make_nvp("pod_types", v);
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/all_td.hpp b/projects/sml/include/dogen/sml/test_data/all_td.hpp
index 4deee0f..1fc578b 100644
--- a/projects/sml/include/dogen/sml/test_data/all_td.hpp
+++ b/projects/sml/include/dogen/sml/test_data/all_td.hpp
@@ -18,7 +18,6 @@
  * MA 02110-1301, USA.
  *
  */
-#include "dogen/sml/test_data/category_types_td.hpp"
 #include "dogen/sml/test_data/concept_td.hpp"
 #include "dogen/sml/test_data/entity_td.hpp"
 #include "dogen/sml/test_data/factory_td.hpp"
@@ -28,8 +27,6 @@
 #include "dogen/sml/test_data/model_td.hpp"
 #include "dogen/sml/test_data/module_td.hpp"
 #include "dogen/sml/test_data/nested_qname_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
-#include "dogen/sml/test_data/pod_types_td.hpp"
 #include "dogen/sml/test_data/property_td.hpp"
 #include "dogen/sml/test_data/qname_td.hpp"
 #include "dogen/sml/test_data/reference_td.hpp"
diff --git a/projects/sml/include/dogen/sml/test_data/category_types_td.hpp b/projects/sml/include/dogen/sml/test_data/category_types_td.hpp
deleted file mode 100644
index 1a54ef9..0000000
--- a/projects/sml/include/dogen/sml/test_data/category_types_td.hpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_CATEGORY_TYPES_TD_HPP
-#define DOGEN_SML_TEST_DATA_CATEGORY_TYPES_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/category_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-class category_types_generator {
-public:
-    category_types_generator();
-
-public:
-    typedef dogen::sml::category_types result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/pod_td.hpp b/projects/sml/include/dogen/sml/test_data/pod_td.hpp
deleted file mode 100644
index 20c3646..0000000
--- a/projects/sml/include/dogen/sml/test_data/pod_td.hpp
+++ /dev/null
@@ -1,53 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_POD_TD_HPP
-#define DOGEN_SML_TEST_DATA_POD_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_generator {
-public:
-    pod_generator();
-
-public:
-    typedef dogen::sml::pod result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-public:
-    static result_type* create_ptr(const unsigned int position);
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp b/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp
deleted file mode 100644
index 763d038..0000000
--- a/projects/sml/include/dogen/sml/test_data/pod_types_td.hpp
+++ /dev/null
@@ -1,51 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TEST_DATA_POD_TYPES_TD_HPP
-#define DOGEN_SML_TEST_DATA_POD_TYPES_TD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include "dogen/sml/types/pod_types.hpp"
-
-namespace dogen {
-namespace sml {
-
-class pod_types_generator {
-public:
-    pod_types_generator();
-
-public:
-    typedef dogen::sml::pod_types result_type;
-
-public:
-    static void populate(const unsigned int position, result_type& v);
-    static result_type create(const unsigned int position);
-    result_type operator()();
-
-private:
-    unsigned int position_;
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/all.hpp b/projects/sml/include/dogen/sml/types/all.hpp
index 52773bc..c4c6d0a 100644
--- a/projects/sml/include/dogen/sml/types/all.hpp
+++ b/projects/sml/include/dogen/sml/types/all.hpp
@@ -19,7 +19,6 @@
  *
  */
 #include "dogen/sml/types/boost_model_factory.hpp"
-#include "dogen/sml/types/category_types.hpp"
 #include "dogen/sml/types/concept.hpp"
 #include "dogen/sml/types/entity.hpp"
 #include "dogen/sml/types/factory.hpp"
@@ -34,8 +33,6 @@
 #include "dogen/sml/types/model_element_visitor.hpp"
 #include "dogen/sml/types/module.hpp"
 #include "dogen/sml/types/nested_qname.hpp"
-#include "dogen/sml/types/pod.hpp"
-#include "dogen/sml/types/pod_types.hpp"
 #include "dogen/sml/types/primitive_model_factory.hpp"
 #include "dogen/sml/types/property.hpp"
 #include "dogen/sml/types/qname.hpp"
diff --git a/projects/sml/include/dogen/sml/types/boost_model_factory.hpp b/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
index dea0980..a4f21be 100644
--- a/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
+++ b/projects/sml/include/dogen/sml/types/boost_model_factory.hpp
@@ -26,7 +26,6 @@
 #endif
 
 #include <string>
-#include "dogen/sml/types/pod.hpp"
 #include "dogen/sml/types/value.hpp"
 #include "dogen/sml/types/model.hpp"
 
@@ -44,7 +43,7 @@ public:
 private:
     static module create_module(const std::string& name,
         std::list<std::string> module_path);
-    static pod create_pod(const std::string& name, pod_types pt,
+    static value create_value_object(const std::string& name, value_types pt,
         std::list<std::string> module_path);
 
 public:
diff --git a/projects/sml/include/dogen/sml/types/category_types.hpp b/projects/sml/include/dogen/sml/types/category_types.hpp
deleted file mode 100644
index 5f6d0ee..0000000
--- a/projects/sml/include/dogen/sml/types/category_types.hpp
+++ /dev/null
@@ -1,48 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_CATEGORY_TYPES_HPP
-#define DOGEN_SML_TYPES_CATEGORY_TYPES_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Categories of types.
- *
- * Broadly speaking there are two categories of types: user defined
- * types and system defined types. However, as we need to distinguish
- * between the system defined types, we have created separate
- * categories for them.
- */
-enum class category_types : unsigned int {
-    invalid = 0, ///< Represents an uninitialised enum
-    user_defined = 1, ///< Type was created by the user
-    versioned_key = 2, ///< System defined versioned key
-    unversioned_key = 3 ///< System defined unversioned key
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/category_types_fwd.hpp b/projects/sml/include/dogen/sml/types/category_types_fwd.hpp
deleted file mode 100644
index 946ecb5..0000000
--- a/projects/sml/include/dogen/sml/types/category_types_fwd.hpp
+++ /dev/null
@@ -1,34 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_CATEGORY_TYPES_FWD_HPP
-#define DOGEN_SML_TYPES_CATEGORY_TYPES_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class category_types : unsigned int;
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/injector.hpp b/projects/sml/include/dogen/sml/types/injector.hpp
index ec8b754..6b685cc 100644
--- a/projects/sml/include/dogen/sml/types/injector.hpp
+++ b/projects/sml/include/dogen/sml/types/injector.hpp
@@ -26,7 +26,7 @@
 #endif
 
 #include <vector>
-#include "dogen/sml/types/pod.hpp"
+#include "dogen/sml/types/value.hpp"
 #include "dogen/sml/types/model.hpp"
 
 namespace dogen {
@@ -42,13 +42,13 @@ public:
 
 private:
     /**
-     * @brief Creates a key for the given pod.
+     * @brief Creates a key for the given entity.
      *
-     * @param p pod for which to create a key
+     * @param p entity for which to create a key
      * @param versioned if true, create a versioned key. Otherwise,
      * creates an unversioned key.
      */
-    pod create_key(const qname& qn, const generation_types gt,
+    value create_key(const qname& qn, const generation_types gt,
         const std::vector<property>& properties, const bool versioned) const;
 
     /**
@@ -57,9 +57,9 @@ private:
     void inject_keys(model& m) const;
 
     /**
-     * @brief Injects the version property on the pod passed in.
+     * @brief Creates a property to represent versioning.
      */
-    void inject_version(pod& p) const;
+    property create_version_property() const;
 
     /**
      * @brief Injects the version property on any types marked as
diff --git a/projects/sml/include/dogen/sml/types/meta_types.hpp b/projects/sml/include/dogen/sml/types/meta_types.hpp
index 546474b..6b9f832 100644
--- a/projects/sml/include/dogen/sml/types/meta_types.hpp
+++ b/projects/sml/include/dogen/sml/types/meta_types.hpp
@@ -34,16 +34,15 @@ namespace sml {
 enum class meta_types : unsigned int {
     invalid = 0, ///< Represents an uninitialised enum
     enumeration = 1, ///< Type is an enumeration
-    pod = 2, ///< Type is a pod
-    primitive = 3, ///< Type is a primitive
-    exception = 4, ///< Type is an exception
-    string_table = 5, ///< Type is a string table.
-    module = 6,
-    service = 7,
-    entity = 8,
-    value = 9,
-    factory = 10,
-    repository = 11
+    primitive = 2, ///< Type is a primitive
+    exception = 3, ///< Type is an exception
+    string_table = 4, ///< Type is a string table.
+    module = 5,
+    service = 6,
+    entity = 7,
+    value = 8,
+    factory = 9,
+    repository = 10
 };
 
 } }
diff --git a/projects/sml/include/dogen/sml/types/model.hpp b/projects/sml/include/dogen/sml/types/model.hpp
index b349dbe..0fb3c9e 100644
--- a/projects/sml/include/dogen/sml/types/model.hpp
+++ b/projects/sml/include/dogen/sml/types/model.hpp
@@ -35,8 +35,9 @@
 #include "dogen/sml/hash/qname_hash.hpp"
 #include "dogen/sml/serialization/model_fwd_ser.hpp"
 #include "dogen/sml/types/concept.hpp"
+#include "dogen/sml/types/entity.hpp"
+#include "dogen/sml/types/factory.hpp"
 #include "dogen/sml/types/module.hpp"
-#include "dogen/sml/types/pod.hpp"
 #include "dogen/sml/types/qname.hpp"
 #include "dogen/sml/types/reference.hpp"
 #include "dogen/sml/types/service.hpp"
@@ -60,7 +61,7 @@ public:
 public:
     model(
         const std::string& name,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods,
+        const std::unordered_map<dogen::sml::qname, dogen::sml::value>& value_objects,
         const std::unordered_map<dogen::sml::qname, dogen::sml::value>& primitives,
         const std::unordered_map<dogen::sml::qname, dogen::sml::value>& enumerations,
         const std::unordered_map<dogen::sml::qname, dogen::sml::value>& exceptions,
@@ -72,7 +73,10 @@ public:
         const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
         const std::unordered_map<dogen::sml::qname, dogen::sml::service>& services,
         const std::unordered_map<dogen::sml::qname, dogen::sml::module>& modules,
-        const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts);
+        const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts,
+        const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& entities,
+        const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& factories,
+        const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& repositories);
 
 private:
     template<typename Archive>
@@ -97,13 +101,13 @@ public:
     /**@}*/
 
     /**
-     * @brief Pods contained in the model.
+     * @brief Value objects contained in the model.
      */
     /**@{*/
-    const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods() const;
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods();
-    void pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v);
-    void pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>&& v);
+    const std::unordered_map<dogen::sml::qname, dogen::sml::value>& value_objects() const;
+    std::unordered_map<dogen::sml::qname, dogen::sml::value>& value_objects();
+    void value_objects(const std::unordered_map<dogen::sml::qname, dogen::sml::value>& v);
+    void value_objects(const std::unordered_map<dogen::sml::qname, dogen::sml::value>&& v);
     /**@}*/
 
     /**
@@ -232,6 +236,36 @@ public:
     void concepts(const std::unordered_map<dogen::sml::qname, dogen::sml::concept>&& v);
     /**@}*/
 
+    /**
+     * @brief Entities contained in the model
+     */
+    /**@{*/
+    const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& entities() const;
+    std::unordered_map<dogen::sml::qname, dogen::sml::entity>& entities();
+    void entities(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v);
+    void entities(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>&& v);
+    /**@}*/
+
+    /**
+     * @brief Factories contained in the model
+     */
+    /**@{*/
+    const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& factories() const;
+    std::unordered_map<dogen::sml::qname, dogen::sml::factory>& factories();
+    void factories(const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& v);
+    void factories(const std::unordered_map<dogen::sml::qname, dogen::sml::factory>&& v);
+    /**@}*/
+
+    /**
+     * @brief Repositories contained in the model.
+     */
+    /**@{*/
+    const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& repositories() const;
+    std::unordered_map<dogen::sml::qname, dogen::sml::entity>& repositories();
+    void repositories(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v);
+    void repositories(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>&& v);
+    /**@}*/
+
 public:
     bool operator==(const model& rhs) const;
     bool operator!=(const model& rhs) const {
@@ -244,7 +278,7 @@ public:
 
 private:
     std::string name_;
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod> pods_;
+    std::unordered_map<dogen::sml::qname, dogen::sml::value> value_objects_;
     std::unordered_map<dogen::sml::qname, dogen::sml::value> primitives_;
     std::unordered_map<dogen::sml::qname, dogen::sml::value> enumerations_;
     std::unordered_map<dogen::sml::qname, dogen::sml::value> exceptions_;
@@ -257,6 +291,9 @@ private:
     std::unordered_map<dogen::sml::qname, dogen::sml::service> services_;
     std::unordered_map<dogen::sml::qname, dogen::sml::module> modules_;
     std::unordered_map<dogen::sml::qname, dogen::sml::concept> concepts_;
+    std::unordered_map<dogen::sml::qname, dogen::sml::entity> entities_;
+    std::unordered_map<dogen::sml::qname, dogen::sml::factory> factories_;
+    std::unordered_map<dogen::sml::qname, dogen::sml::entity> repositories_;
 };
 
 } }
diff --git a/projects/sml/include/dogen/sml/types/pod.hpp b/projects/sml/include/dogen/sml/types/pod.hpp
deleted file mode 100644
index 9b50c05..0000000
--- a/projects/sml/include/dogen/sml/types/pod.hpp
+++ /dev/null
@@ -1,333 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_HPP
-#define DOGEN_SML_TYPES_POD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-#include <algorithm>
-#include <boost/optional.hpp>
-#include <list>
-#include <string>
-#include <utility>
-#include <vector>
-#include "dogen/sml/serialization/pod_fwd_ser.hpp"
-#include "dogen/sml/types/category_types.hpp"
-#include "dogen/sml/types/generation_types.hpp"
-#include "dogen/sml/types/pod_types.hpp"
-#include "dogen/sml/types/property.hpp"
-#include "dogen/sml/types/qname.hpp"
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Represents a plain C++ object with basic associated behaviours.
- *
- * The name pod is misleading because its actually not used in the strict sense of POD as defined here:
- *
- *  <a href="http://en.wikipedia.org/wiki/Plain_old_data_structure">Plain old data structure</a>.
- */
-class pod final {
-public:
-    pod(const pod&) = default;
-    ~pod() = default;
-
-public:
-    pod();
-
-public:
-    pod(pod&& rhs);
-
-public:
-    pod(
-        const dogen::sml::qname& name,
-        const std::vector<dogen::sml::property>& properties,
-        const boost::optional<dogen::sml::qname>& parent_name,
-        const boost::optional<dogen::sml::qname>& original_parent_name,
-        const std::list<dogen::sml::qname>& leaves,
-        const dogen::sml::generation_types& generation_type,
-        const bool is_parent,
-        const dogen::sml::category_types& category_type,
-        const dogen::sml::pod_types& pod_type,
-        const std::string& documentation,
-        const unsigned int number_of_type_arguments,
-        const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
-        const bool is_visitable,
-        const bool is_immutable,
-        const bool is_versioned,
-        const bool is_keyed,
-        const bool is_comparable,
-        const bool is_fluent,
-        const bool is_aggregate_root,
-        const boost::optional<dogen::sml::qname>& versioned_key,
-        const boost::optional<dogen::sml::qname>& unversioned_key);
-
-private:
-    template<typename Archive>
-    friend void boost::serialization::save(Archive& ar, const pod& v, unsigned int version);
-
-    template<typename Archive>
-    friend void boost::serialization::load(Archive& ar, pod& v, unsigned int version);
-
-public:
-    /**
-     * @brief Qualified name for the type.
-     *
-     */
-    /**@{*/
-    const dogen::sml::qname& name() const;
-    dogen::sml::qname& name();
-    void name(const dogen::sml::qname& v);
-    void name(const dogen::sml::qname&& v);
-    /**@}*/
-
-    /**
-     * @brief All the properties this pod owns.
-     */
-    /**@{*/
-    const std::vector<dogen::sml::property>& properties() const;
-    std::vector<dogen::sml::property>& properties();
-    void properties(const std::vector<dogen::sml::property>& v);
-    void properties(const std::vector<dogen::sml::property>&& v);
-    /**@}*/
-
-    /**
-     * @brief Qualified name for the pod's parent, if the pod has one.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& parent_name() const;
-    boost::optional<dogen::sml::qname>& parent_name();
-    void parent_name(const boost::optional<dogen::sml::qname>& v);
-    void parent_name(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief Qualified name for the root of the inheritance hierarchy, if the pod is part of one.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& original_parent_name() const;
-    boost::optional<dogen::sml::qname>& original_parent_name();
-    void original_parent_name(const boost::optional<dogen::sml::qname>& v);
-    void original_parent_name(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief All concrete types which are indirectly or directly derived from this type.
-     */
-    /**@{*/
-    const std::list<dogen::sml::qname>& leaves() const;
-    std::list<dogen::sml::qname>& leaves();
-    void leaves(const std::list<dogen::sml::qname>& v);
-    void leaves(const std::list<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief What to do with this pod in terms of code generation
-     */
-    /**@{*/
-    dogen::sml::generation_types generation_type() const;
-    void generation_type(const dogen::sml::generation_types& v);
-    /**@}*/
-
-    /**
-     * @brief True if this class is the parent of one or more classes, false otherwise.
-     */
-    /**@{*/
-    bool is_parent() const;
-    void is_parent(const bool v);
-    /**@}*/
-
-    /**
-     * @brief Category of this type - whether its system or user defined.
-     */
-    /**@{*/
-    dogen::sml::category_types category_type() const;
-    void category_type(const dogen::sml::category_types& v);
-    /**@}*/
-
-    /**
-     * @brief What kind of pod is this.
-     */
-    /**@{*/
-    dogen::sml::pod_types pod_type() const;
-    void pod_type(const dogen::sml::pod_types& v);
-    /**@}*/
-
-    /**
-     * @brief Doxygen documentation for the type.
-     */
-    /**@{*/
-    const std::string& documentation() const;
-    std::string& documentation();
-    void documentation(const std::string& v);
-    void documentation(const std::string&& v);
-    /**@}*/
-
-    /**
-     * @brief How many type arguments does this type have
-     */
-    /**@{*/
-    unsigned int number_of_type_arguments() const;
-    void number_of_type_arguments(const unsigned int v);
-    /**@}*/
-
-    /**
-     * @brief Parameters associated with the pod which are opaque to SML.
-     */
-    /**@{*/
-    const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters() const;
-    std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters();
-    void implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >& v);
-    void implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >&& v);
-    /**@}*/
-
-    /**
-     * @brief If true, a visitor is to be generated for this type and its descendants.
-     *
-     * Only applicable if is_parent is true.
-     */
-    /**@{*/
-    bool is_visitable() const;
-    void is_visitable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, do not generate setters for the type's properties.
-     */
-    /**@{*/
-    bool is_immutable() const;
-    void is_immutable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, add a version property to the type.
-     */
-    /**@{*/
-    bool is_versioned() const;
-    void is_versioned(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, add key support for the type.
-     */
-    /**@{*/
-    bool is_keyed() const;
-    void is_keyed(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, generates the less than operator.
-     *
-     * A type is only comparable if all of its properties are primitives or strings,
-     * or other comparable model types.
-     */
-    /**@{*/
-    bool is_comparable() const;
-    void is_comparable(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, generate fluent setters.
-     */
-    /**@{*/
-    bool is_fluent() const;
-    void is_fluent(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If true, this pod is a root of an aggregate.
-     */
-    /**@{*/
-    bool is_aggregate_root() const;
-    void is_aggregate_root(const bool v);
-    /**@}*/
-
-    /**
-     * @brief If the pod is a versioned keyed entity, its versioned key.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& versioned_key() const;
-    boost::optional<dogen::sml::qname>& versioned_key();
-    void versioned_key(const boost::optional<dogen::sml::qname>& v);
-    void versioned_key(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-    /**
-     * @brief If the pod is an unversioned keyed entity, its unversioned key.
-     */
-    /**@{*/
-    const boost::optional<dogen::sml::qname>& unversioned_key() const;
-    boost::optional<dogen::sml::qname>& unversioned_key();
-    void unversioned_key(const boost::optional<dogen::sml::qname>& v);
-    void unversioned_key(const boost::optional<dogen::sml::qname>&& v);
-    /**@}*/
-
-public:
-    bool operator==(const pod& rhs) const;
-    bool operator!=(const pod& rhs) const {
-        return !this->operator==(rhs);
-    }
-
-public:
-    void swap(pod& other) noexcept;
-    pod& operator=(pod other);
-
-private:
-    dogen::sml::qname name_;
-    std::vector<dogen::sml::property> properties_;
-    boost::optional<dogen::sml::qname> parent_name_;
-    boost::optional<dogen::sml::qname> original_parent_name_;
-    std::list<dogen::sml::qname> leaves_;
-    dogen::sml::generation_types generation_type_;
-    bool is_parent_;
-    dogen::sml::category_types category_type_;
-    dogen::sml::pod_types pod_type_;
-    std::string documentation_;
-    unsigned int number_of_type_arguments_;
-    std::vector<std::pair<std::string, std::string> > implementation_specific_parameters_;
-    bool is_visitable_;
-    bool is_immutable_;
-    bool is_versioned_;
-    bool is_keyed_;
-    bool is_comparable_;
-    bool is_fluent_;
-    bool is_aggregate_root_;
-    boost::optional<dogen::sml::qname> versioned_key_;
-    boost::optional<dogen::sml::qname> unversioned_key_;
-};
-
-} }
-
-namespace std {
-
-template<>
-inline void swap(
-    dogen::sml::pod& lhs,
-    dogen::sml::pod& rhs) {
-    lhs.swap(rhs);
-}
-
-}
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_fwd.hpp b/projects/sml/include/dogen/sml/types/pod_fwd.hpp
deleted file mode 100644
index 651123b..0000000
--- a/projects/sml/include/dogen/sml/types/pod_fwd.hpp
+++ /dev/null
@@ -1,35 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_FWD_HPP
-#define DOGEN_SML_TYPES_POD_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-class pod;
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_types.hpp b/projects/sml/include/dogen/sml/types/pod_types.hpp
deleted file mode 100644
index 1633271..0000000
--- a/projects/sml/include/dogen/sml/types/pod_types.hpp
+++ /dev/null
@@ -1,49 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_TYPES_HPP
-#define DOGEN_SML_TYPES_POD_TYPES_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-/**
- * @brief Types of pods.
- *
- * We need to classify pods with regards to distinguishing properties
- * which make code generation different.
- */
-enum class pod_types : unsigned int {
-    invalid = 0, ///< Represents an uninitialised enum
-    sequence_container = 1, ///< Pod is a sequence container
-    associative_container = 2, ///< Pod is an associative container
-    smart_pointer = 3, ///< Pod is a smart pointer
-    entity = 4, ///< Pod is a domain entity
-    value = 5, ///< Pod is a domain value
-    service = 6 ///< Pod is a service
-};
-
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp b/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp
deleted file mode 100644
index b4c96d3..0000000
--- a/projects/sml/include/dogen/sml/types/pod_types_fwd.hpp
+++ /dev/null
@@ -1,34 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#ifndef DOGEN_SML_TYPES_POD_TYPES_FWD_HPP
-#define DOGEN_SML_TYPES_POD_TYPES_FWD_HPP
-
-#if defined(_MSC_VER) && (_MSC_VER >= 1200)
-#pragma once
-#endif
-
-namespace dogen {
-namespace sml {
-
-enum class pod_types : unsigned int;
-} }
-
-#endif
diff --git a/projects/sml/include/dogen/sml/types/property.hpp b/projects/sml/include/dogen/sml/types/property.hpp
index 5ec4245..0e0031d 100644
--- a/projects/sml/include/dogen/sml/types/property.hpp
+++ b/projects/sml/include/dogen/sml/types/property.hpp
@@ -36,7 +36,7 @@ namespace dogen {
 namespace sml {
 
 /**
- * @brief Memberof a pod that provides a mechanism to read and write values of a type.
+ * @brief Data attribute of an object.
  */
 class property final {
 public:
diff --git a/projects/sml/src/hash/model_hash.cpp b/projects/sml/src/hash/model_hash.cpp
index 79c85a6..4116771 100644
--- a/projects/sml/src/hash/model_hash.cpp
+++ b/projects/sml/src/hash/model_hash.cpp
@@ -19,9 +19,10 @@
  *
  */
 #include "dogen/sml/hash/concept_hash.hpp"
+#include "dogen/sml/hash/entity_hash.hpp"
+#include "dogen/sml/hash/factory_hash.hpp"
 #include "dogen/sml/hash/model_hash.hpp"
 #include "dogen/sml/hash/module_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
 #include "dogen/sml/hash/qname_hash.hpp"
 #include "dogen/sml/hash/reference_hash.hpp"
 #include "dogen/sml/hash/service_hash.hpp"
@@ -36,15 +37,6 @@ inline void combine(std::size_t& seed, const HashableType& value)
     seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
 }
 
-inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_pod(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i.first);
-        combine(seed, i.second);
-    }
-    return seed;
-}
-
 inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_value(const std::unordered_map<dogen::sml::qname, dogen::sml::value>& v){
     std::size_t seed(0);
     for (const auto i : v) {
@@ -122,6 +114,24 @@ inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_concept(cons
     return seed;
 }
 
+inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_entity(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v){
+    std::size_t seed(0);
+    for (const auto i : v) {
+        combine(seed, i.first);
+        combine(seed, i.second);
+    }
+    return seed;
+}
+
+inline std::size_t hash_std_unordered_map_dogen_sml_qname_dogen_sml_factory(const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& v){
+    std::size_t seed(0);
+    for (const auto i : v) {
+        combine(seed, i.first);
+        combine(seed, i.second);
+    }
+    return seed;
+}
+
 }
 
 namespace dogen {
@@ -131,7 +141,7 @@ std::size_t model_hasher::hash(const model&v) {
     std::size_t seed(0);
 
     combine(seed, v.name());
-    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_pod(v.pods()));
+    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_value(v.value_objects()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_value(v.primitives()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_value(v.enumerations()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_value(v.exceptions()));
@@ -144,6 +154,9 @@ std::size_t model_hasher::hash(const model&v) {
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_service(v.services()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_module(v.modules()));
     combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_concept(v.concepts()));
+    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_entity(v.entities()));
+    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_factory(v.factories()));
+    combine(seed, hash_std_unordered_map_dogen_sml_qname_dogen_sml_entity(v.repositories()));
 
     return seed;
 }
diff --git a/projects/sml/src/hash/pod_hash.cpp b/projects/sml/src/hash/pod_hash.cpp
deleted file mode 100644
index 501ba35..0000000
--- a/projects/sml/src/hash/pod_hash.cpp
+++ /dev/null
@@ -1,112 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/hash/category_types_hash.hpp"
-#include "dogen/sml/hash/generation_types_hash.hpp"
-#include "dogen/sml/hash/pod_hash.hpp"
-#include "dogen/sml/hash/pod_types_hash.hpp"
-#include "dogen/sml/hash/property_hash.hpp"
-#include "dogen/sml/hash/qname_hash.hpp"
-
-namespace {
-
-template <typename HashableType>
-inline void combine(std::size_t& seed, const HashableType& value)
-{
-    std::hash<HashableType> hasher;
-    seed ^= hasher(value) + 0x9e3779b9 + (seed << 6) + (seed >> 2);
-}
-
-inline std::size_t hash_std_vector_dogen_sml_property(const std::vector<dogen::sml::property>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i);
-    }
-    return seed;
-}
-
-inline std::size_t hash_boost_optional_dogen_sml_qname(const boost::optional<dogen::sml::qname>& v){
-    std::size_t seed(0);
-
-    if (!v)
-        return seed;
-
-    combine(seed, *v);
-    return seed;
-}
-
-inline std::size_t hash_std_list_dogen_sml_qname(const std::list<dogen::sml::qname>& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, i);
-    }
-    return seed;
-}
-
-inline std::size_t hash_std_pair_std_string_std_string(const std::pair<std::string, std::string>& v){
-    std::size_t seed(0);
-
-    combine(seed, v.first);
-    combine(seed, v.second);
-    return seed;
-}
-
-inline std::size_t hash_std_vector_std_pair_std_string_std_string_(const std::vector<std::pair<std::string, std::string> >& v){
-    std::size_t seed(0);
-    for (const auto i : v) {
-        combine(seed, hash_std_pair_std_string_std_string(i));
-    }
-    return seed;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-std::size_t pod_hasher::hash(const pod&v) {
-    std::size_t seed(0);
-
-    combine(seed, v.name());
-    combine(seed, hash_std_vector_dogen_sml_property(v.properties()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.parent_name()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.original_parent_name()));
-    combine(seed, hash_std_list_dogen_sml_qname(v.leaves()));
-    combine(seed, v.generation_type());
-    combine(seed, v.is_parent());
-    combine(seed, v.category_type());
-    combine(seed, v.pod_type());
-    combine(seed, v.documentation());
-    combine(seed, v.number_of_type_arguments());
-    combine(seed, hash_std_vector_std_pair_std_string_std_string_(v.implementation_specific_parameters()));
-    combine(seed, v.is_visitable());
-    combine(seed, v.is_immutable());
-    combine(seed, v.is_versioned());
-    combine(seed, v.is_keyed());
-    combine(seed, v.is_comparable());
-    combine(seed, v.is_fluent());
-    combine(seed, v.is_aggregate_root());
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.versioned_key()));
-    combine(seed, hash_boost_optional_dogen_sml_qname(v.unversioned_key()));
-
-    return seed;
-}
-
-} }
diff --git a/projects/sml/src/io/category_types_io.cpp b/projects/sml/src/io/category_types_io.cpp
deleted file mode 100644
index 959b881..0000000
--- a/projects/sml/src/io/category_types_io.cpp
+++ /dev/null
@@ -1,52 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <ostream>
-#include <stdexcept>
-#include "dogen/sml/io/category_types_io.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const category_types& v) {
-    s << "{ " << "\"__type__\": " << "\"category_types\", " << "\"value\": ";
-
-    std::string attr;
-    switch (v) {
-    case category_types::invalid:
-        attr = "\"invalid\"";
-        break;
-    case category_types::user_defined:
-        attr = "\"user_defined\"";
-        break;
-    case category_types::versioned_key:
-        attr = "\"versioned_key\"";
-        break;
-    case category_types::unversioned_key:
-        attr = "\"unversioned_key\"";
-        break;
-    default:
-        throw std::invalid_argument("Invalid value for category_types");
-    }
-    s << attr << " }";
-    return s;
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/io/meta_types_io.cpp b/projects/sml/src/io/meta_types_io.cpp
index 9ebb23d..c615d90 100644
--- a/projects/sml/src/io/meta_types_io.cpp
+++ b/projects/sml/src/io/meta_types_io.cpp
@@ -36,9 +36,6 @@ std::ostream& operator<<(std::ostream& s, const meta_types& v) {
     case meta_types::enumeration:
         attr = "\"enumeration\"";
         break;
-    case meta_types::pod:
-        attr = "\"pod\"";
-        break;
     case meta_types::primitive:
         attr = "\"primitive\"";
         break;
diff --git a/projects/sml/src/io/model_io.cpp b/projects/sml/src/io/model_io.cpp
index 15518fb..c1c901e 100644
--- a/projects/sml/src/io/model_io.cpp
+++ b/projects/sml/src/io/model_io.cpp
@@ -22,9 +22,10 @@
 #include <boost/io/ios_state.hpp>
 #include <ostream>
 #include "dogen/sml/io/concept_io.hpp"
+#include "dogen/sml/io/entity_io.hpp"
+#include "dogen/sml/io/factory_io.hpp"
 #include "dogen/sml/io/model_io.hpp"
 #include "dogen/sml/io/module_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
 #include "dogen/sml/io/qname_io.hpp"
 #include "dogen/sml/io/reference_io.hpp"
 #include "dogen/sml/io/service_io.hpp"
@@ -40,24 +41,6 @@ inline std::string tidy_up_string(std::string s) {
 
 namespace std {
 
-inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v) {
-    s << "[";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
-        s << i->first;
-        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
-        s << i->second;
-        s << " } ]";
-    }
-    s << " ] ";
-    return s;
-}
-
-}
-
-namespace std {
-
 inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::value>& v) {
     s << "[";
     for (auto i(v.begin()); i != v.end(); ++i) {
@@ -201,6 +184,42 @@ inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen:
 
 }
 
+namespace std {
+
+inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v) {
+    s << "[";
+    for (auto i(v.begin()); i != v.end(); ++i) {
+        if (i != v.begin()) s << ", ";
+        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
+        s << i->first;
+        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
+        s << i->second;
+        s << " } ]";
+    }
+    s << " ] ";
+    return s;
+}
+
+}
+
+namespace std {
+
+inline std::ostream& operator<<(std::ostream& s, const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& v) {
+    s << "[";
+    for (auto i(v.begin()); i != v.end(); ++i) {
+        if (i != v.begin()) s << ", ";
+        s << "[ { " << "\"__type__\": " << "\"key\"" << ", " << "\"data\": ";
+        s << i->first;
+        s << " }, { " << "\"__type__\": " << "\"value\"" << ", " << "\"data\": ";
+        s << i->second;
+        s << " } ]";
+    }
+    s << " ] ";
+    return s;
+}
+
+}
+
 namespace dogen {
 namespace sml {
 
@@ -214,7 +233,7 @@ std::ostream& operator<<(std::ostream& s, const model& v) {
     s << " { "
       << "\"__type__\": " << "\"dogen::sml::model\"" << ", "
       << "\"name\": " << "\"" << tidy_up_string(v.name()) << "\"" << ", "
-      << "\"pods\": " << v.pods() << ", "
+      << "\"value_objects\": " << v.value_objects() << ", "
       << "\"primitives\": " << v.primitives() << ", "
       << "\"enumerations\": " << v.enumerations() << ", "
       << "\"exceptions\": " << v.exceptions() << ", "
@@ -226,7 +245,10 @@ std::ostream& operator<<(std::ostream& s, const model& v) {
       << "\"implementation_specific_parameters\": " << v.implementation_specific_parameters() << ", "
       << "\"services\": " << v.services() << ", "
       << "\"modules\": " << v.modules() << ", "
-      << "\"concepts\": " << v.concepts()
+      << "\"concepts\": " << v.concepts() << ", "
+      << "\"entities\": " << v.entities() << ", "
+      << "\"factories\": " << v.factories() << ", "
+      << "\"repositories\": " << v.repositories()
       << " }";
     return(s);
 }
diff --git a/projects/sml/src/io/pod_io.cpp b/projects/sml/src/io/pod_io.cpp
deleted file mode 100644
index 58497dd..0000000
--- a/projects/sml/src/io/pod_io.cpp
+++ /dev/null
@@ -1,146 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <boost/algorithm/string.hpp>
-#include <boost/io/ios_state.hpp>
-#include <ostream>
-#include "dogen/sml/io/category_types_io.hpp"
-#include "dogen/sml/io/generation_types_io.hpp"
-#include "dogen/sml/io/pod_io.hpp"
-#include "dogen/sml/io/pod_types_io.hpp"
-#include "dogen/sml/io/property_io.hpp"
-#include "dogen/sml/io/qname_io.hpp"
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::vector<dogen::sml::property>& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-namespace boost {
-
-inline std::ostream& operator<<(std::ostream& s, const boost::optional<dogen::sml::qname>& v) {
-    s << "{ " << "\"__type__\": " << "\"boost::optional\"" << ", ";
-
-    if (v)
-        s << "\"data\": " << *v;
-    else
-        s << "\"data\": ""\"<empty>\"";
-    s << " }";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::list<dogen::sml::qname>& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-
-inline std::string tidy_up_string(std::string s) {
-    boost::replace_all(s, "\r\n", "<new_line>");
-    boost::replace_all(s, "\n", "<new_line>");
-    boost::replace_all(s, "\"", "<quote>");
-    return s;
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::pair<std::string, std::string>& v) {
-    s << "{ " << "\"__type__\": " << "\"std::pair\"" << ", ";
-
-    s << "\"first\": " << "\"" << tidy_up_string(v.first) << "\"" << ", ";
-    s << "\"second\": " << "\"" << tidy_up_string(v.second) << "\"";
-    s << " }";
-    return s;
-}
-
-}
-
-namespace std {
-
-inline std::ostream& operator<<(std::ostream& s, const std::vector<std::pair<std::string, std::string> >& v) {
-    s << "[ ";
-    for (auto i(v.begin()); i != v.end(); ++i) {
-        if (i != v.begin()) s << ", ";
-        s << *i;
-    }
-    s << "] ";
-    return s;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod& v) {
-    boost::io::ios_flags_saver ifs(s);
-    s.setf(std::ios_base::boolalpha);
-    s.setf(std::ios::fixed, std::ios::floatfield);
-    s.precision(6);
-    s.setf(std::ios::showpoint);
-
-    s << " { "
-      << "\"__type__\": " << "\"dogen::sml::pod\"" << ", "
-      << "\"name\": " << v.name() << ", "
-      << "\"properties\": " << v.properties() << ", "
-      << "\"parent_name\": " << v.parent_name() << ", "
-      << "\"original_parent_name\": " << v.original_parent_name() << ", "
-      << "\"leaves\": " << v.leaves() << ", "
-      << "\"generation_type\": " << v.generation_type() << ", "
-      << "\"is_parent\": " << v.is_parent() << ", "
-      << "\"category_type\": " << v.category_type() << ", "
-      << "\"pod_type\": " << v.pod_type() << ", "
-      << "\"documentation\": " << "\"" << tidy_up_string(v.documentation()) << "\"" << ", "
-      << "\"number_of_type_arguments\": " << v.number_of_type_arguments() << ", "
-      << "\"implementation_specific_parameters\": " << v.implementation_specific_parameters() << ", "
-      << "\"is_visitable\": " << v.is_visitable() << ", "
-      << "\"is_immutable\": " << v.is_immutable() << ", "
-      << "\"is_versioned\": " << v.is_versioned() << ", "
-      << "\"is_keyed\": " << v.is_keyed() << ", "
-      << "\"is_comparable\": " << v.is_comparable() << ", "
-      << "\"is_fluent\": " << v.is_fluent() << ", "
-      << "\"is_aggregate_root\": " << v.is_aggregate_root() << ", "
-      << "\"versioned_key\": " << v.versioned_key() << ", "
-      << "\"unversioned_key\": " << v.unversioned_key()
-      << " }";
-    return(s);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/io/pod_types_io.cpp b/projects/sml/src/io/pod_types_io.cpp
deleted file mode 100644
index b4b0425..0000000
--- a/projects/sml/src/io/pod_types_io.cpp
+++ /dev/null
@@ -1,61 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <ostream>
-#include <stdexcept>
-#include "dogen/sml/io/pod_types_io.hpp"
-
-namespace dogen {
-namespace sml {
-
-std::ostream& operator<<(std::ostream& s, const pod_types& v) {
-    s << "{ " << "\"__type__\": " << "\"pod_types\", " << "\"value\": ";
-
-    std::string attr;
-    switch (v) {
-    case pod_types::invalid:
-        attr = "\"invalid\"";
-        break;
-    case pod_types::sequence_container:
-        attr = "\"sequence_container\"";
-        break;
-    case pod_types::associative_container:
-        attr = "\"associative_container\"";
-        break;
-    case pod_types::smart_pointer:
-        attr = "\"smart_pointer\"";
-        break;
-    case pod_types::entity:
-        attr = "\"entity\"";
-        break;
-    case pod_types::value:
-        attr = "\"value\"";
-        break;
-    case pod_types::service:
-        attr = "\"service\"";
-        break;
-    default:
-        throw std::invalid_argument("Invalid value for pod_types");
-    }
-    s << attr << " }";
-    return s;
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/serialization/model_ser.cpp b/projects/sml/src/serialization/model_ser.cpp
index 2dc20f4..7391363 100644
--- a/projects/sml/src/serialization/model_ser.cpp
+++ b/projects/sml/src/serialization/model_ser.cpp
@@ -32,9 +32,10 @@
 #include <boost/serialization/utility.hpp>
 #include <boost/serialization/vector.hpp>
 #include "dogen/sml/serialization/concept_ser.hpp"
+#include "dogen/sml/serialization/entity_ser.hpp"
+#include "dogen/sml/serialization/factory_ser.hpp"
 #include "dogen/sml/serialization/model_ser.hpp"
 #include "dogen/sml/serialization/module_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
 #include "dogen/sml/serialization/qname_ser.hpp"
 #include "dogen/sml/serialization/reference_ser.hpp"
 #include "dogen/sml/serialization/service_ser.hpp"
@@ -55,7 +56,7 @@ void save(Archive& ar,
     const dogen::sml::model& v,
     const unsigned int /*version*/) {
     ar << make_nvp("name", v.name_);
-    ar << make_nvp("pods", v.pods_);
+    ar << make_nvp("value_objects", v.value_objects_);
     ar << make_nvp("primitives", v.primitives_);
     ar << make_nvp("enumerations", v.enumerations_);
     ar << make_nvp("exceptions", v.exceptions_);
@@ -68,6 +69,9 @@ void save(Archive& ar,
     ar << make_nvp("services", v.services_);
     ar << make_nvp("modules", v.modules_);
     ar << make_nvp("concepts", v.concepts_);
+    ar << make_nvp("entities", v.entities_);
+    ar << make_nvp("factories", v.factories_);
+    ar << make_nvp("repositories", v.repositories_);
 }
 
 template<typename Archive>
@@ -75,7 +79,7 @@ void load(Archive& ar,
     dogen::sml::model& v,
     const unsigned int /*version*/) {
     ar >> make_nvp("name", v.name_);
-    ar >> make_nvp("pods", v.pods_);
+    ar >> make_nvp("value_objects", v.value_objects_);
     ar >> make_nvp("primitives", v.primitives_);
     ar >> make_nvp("enumerations", v.enumerations_);
     ar >> make_nvp("exceptions", v.exceptions_);
@@ -88,6 +92,9 @@ void load(Archive& ar,
     ar >> make_nvp("services", v.services_);
     ar >> make_nvp("modules", v.modules_);
     ar >> make_nvp("concepts", v.concepts_);
+    ar >> make_nvp("entities", v.entities_);
+    ar >> make_nvp("factories", v.factories_);
+    ar >> make_nvp("repositories", v.repositories_);
 }
 
 } }
diff --git a/projects/sml/src/serialization/pod_ser.cpp b/projects/sml/src/serialization/pod_ser.cpp
deleted file mode 100644
index 34add70..0000000
--- a/projects/sml/src/serialization/pod_ser.cpp
+++ /dev/null
@@ -1,126 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <boost/archive/binary_iarchive.hpp>
-#include <boost/archive/binary_oarchive.hpp>
-#include <boost/archive/polymorphic_iarchive.hpp>
-#include <boost/archive/polymorphic_oarchive.hpp>
-#include <boost/archive/text_iarchive.hpp>
-#include <boost/archive/text_oarchive.hpp>
-#include <boost/archive/xml_iarchive.hpp>
-#include <boost/archive/xml_oarchive.hpp>
-#include <boost/serialization/list.hpp>
-#include <boost/serialization/nvp.hpp>
-#include <boost/serialization/optional.hpp>
-#include <boost/serialization/string.hpp>
-#include <boost/serialization/utility.hpp>
-#include <boost/serialization/vector.hpp>
-#include "dogen/sml/serialization/category_types_ser.hpp"
-#include "dogen/sml/serialization/generation_types_ser.hpp"
-#include "dogen/sml/serialization/pod_ser.hpp"
-#include "dogen/sml/serialization/pod_types_ser.hpp"
-#include "dogen/sml/serialization/property_ser.hpp"
-#include "dogen/sml/serialization/qname_ser.hpp"
-
-#ifdef __linux__
-#include "eos/portable_iarchive.hpp"
-#include "eos/portable_oarchive.hpp"
-#endif
-
-namespace boost {
-namespace serialization {
-
-template<typename Archive>
-void save(Archive& ar,
-    const dogen::sml::pod& v,
-    const unsigned int /*version*/) {
-    ar << make_nvp("name", v.name_);
-    ar << make_nvp("properties", v.properties_);
-    ar << make_nvp("parent_name", v.parent_name_);
-    ar << make_nvp("original_parent_name", v.original_parent_name_);
-    ar << make_nvp("leaves", v.leaves_);
-    ar << make_nvp("generation_type", v.generation_type_);
-    ar << make_nvp("is_parent", v.is_parent_);
-    ar << make_nvp("category_type", v.category_type_);
-    ar << make_nvp("pod_type", v.pod_type_);
-    ar << make_nvp("documentation", v.documentation_);
-    ar << make_nvp("number_of_type_arguments", v.number_of_type_arguments_);
-    ar << make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
-    ar << make_nvp("is_visitable", v.is_visitable_);
-    ar << make_nvp("is_immutable", v.is_immutable_);
-    ar << make_nvp("is_versioned", v.is_versioned_);
-    ar << make_nvp("is_keyed", v.is_keyed_);
-    ar << make_nvp("is_comparable", v.is_comparable_);
-    ar << make_nvp("is_fluent", v.is_fluent_);
-    ar << make_nvp("is_aggregate_root", v.is_aggregate_root_);
-    ar << make_nvp("versioned_key", v.versioned_key_);
-    ar << make_nvp("unversioned_key", v.unversioned_key_);
-}
-
-template<typename Archive>
-void load(Archive& ar,
-    dogen::sml::pod& v,
-    const unsigned int /*version*/) {
-    ar >> make_nvp("name", v.name_);
-    ar >> make_nvp("properties", v.properties_);
-    ar >> make_nvp("parent_name", v.parent_name_);
-    ar >> make_nvp("original_parent_name", v.original_parent_name_);
-    ar >> make_nvp("leaves", v.leaves_);
-    ar >> make_nvp("generation_type", v.generation_type_);
-    ar >> make_nvp("is_parent", v.is_parent_);
-    ar >> make_nvp("category_type", v.category_type_);
-    ar >> make_nvp("pod_type", v.pod_type_);
-    ar >> make_nvp("documentation", v.documentation_);
-    ar >> make_nvp("number_of_type_arguments", v.number_of_type_arguments_);
-    ar >> make_nvp("implementation_specific_parameters", v.implementation_specific_parameters_);
-    ar >> make_nvp("is_visitable", v.is_visitable_);
-    ar >> make_nvp("is_immutable", v.is_immutable_);
-    ar >> make_nvp("is_versioned", v.is_versioned_);
-    ar >> make_nvp("is_keyed", v.is_keyed_);
-    ar >> make_nvp("is_comparable", v.is_comparable_);
-    ar >> make_nvp("is_fluent", v.is_fluent_);
-    ar >> make_nvp("is_aggregate_root", v.is_aggregate_root_);
-    ar >> make_nvp("versioned_key", v.versioned_key_);
-    ar >> make_nvp("unversioned_key", v.unversioned_key_);
-}
-
-} }
-
-namespace boost {
-namespace serialization {
-
-template void save(archive::polymorphic_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::polymorphic_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::text_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::text_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::binary_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::binary_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-template void save(archive::xml_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(archive::xml_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-
-#ifdef __linux__
-template void save(eos::portable_oarchive& ar, const dogen::sml::pod& v, unsigned int version);
-template void load(eos::portable_iarchive& ar, dogen::sml::pod& v, unsigned int version);
-#endif
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/test_data/category_types_td.cpp b/projects/sml/src/test_data/category_types_td.cpp
deleted file mode 100644
index f7d9c97..0000000
--- a/projects/sml/src/test_data/category_types_td.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/test_data/category_types_td.hpp"
-
-namespace dogen {
-namespace sml {
-
-category_types_generator::category_types_generator() : position_(0) { }
-void category_types_generator::
-populate(const unsigned int position, result_type& v) {
-    v = static_cast<category_types>(position % 4);
-}
-
-category_types_generator::result_type
-category_types_generator::create(const unsigned int  position) {
-    result_type r;
-    category_types_generator::populate(position, r);
-    return r;
-}
-
-category_types_generator::result_type
-category_types_generator::operator()() {
-    return create(position_++);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/test_data/meta_types_td.cpp b/projects/sml/src/test_data/meta_types_td.cpp
index b981e56..c9aca45 100644
--- a/projects/sml/src/test_data/meta_types_td.cpp
+++ b/projects/sml/src/test_data/meta_types_td.cpp
@@ -26,7 +26,7 @@ namespace sml {
 meta_types_generator::meta_types_generator() : position_(0) { }
 void meta_types_generator::
 populate(const unsigned int position, result_type& v) {
-    v = static_cast<meta_types>(position % 12);
+    v = static_cast<meta_types>(position % 11);
 }
 
 meta_types_generator::result_type
diff --git a/projects/sml/src/test_data/model_td.cpp b/projects/sml/src/test_data/model_td.cpp
index 4a77d26..69d7f76 100644
--- a/projects/sml/src/test_data/model_td.cpp
+++ b/projects/sml/src/test_data/model_td.cpp
@@ -20,9 +20,10 @@
  */
 #include <sstream>
 #include "dogen/sml/test_data/concept_td.hpp"
+#include "dogen/sml/test_data/entity_td.hpp"
+#include "dogen/sml/test_data/factory_td.hpp"
 #include "dogen/sml/test_data/model_td.hpp"
 #include "dogen/sml/test_data/module_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
 #include "dogen/sml/test_data/qname_td.hpp"
 #include "dogen/sml/test_data/reference_td.hpp"
 #include "dogen/sml/test_data/service_td.hpp"
@@ -41,19 +42,6 @@ create_dogen_sml_qname(const unsigned int position) {
     return dogen::sml::qname_generator::create(position);
 }
 
-dogen::sml::pod
-create_dogen_sml_pod(const unsigned int position) {
-    return dogen::sml::pod_generator::create(position);
-}
-
-std::unordered_map<dogen::sml::qname, dogen::sml::pod> create_std_unordered_map_dogen_sml_qname_dogen_sml_pod(unsigned int position) {
-    std::unordered_map<dogen::sml::qname, dogen::sml::pod> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_pod(position + i)));
-    }
-    return r;
-}
-
 dogen::sml::value
 create_dogen_sml_value(const unsigned int position) {
     return dogen::sml::value_generator::create(position);
@@ -155,6 +143,32 @@ std::unordered_map<dogen::sml::qname, dogen::sml::concept> create_std_unordered_
     return r;
 }
 
+dogen::sml::entity
+create_dogen_sml_entity(const unsigned int position) {
+    return dogen::sml::entity_generator::create(position);
+}
+
+std::unordered_map<dogen::sml::qname, dogen::sml::entity> create_std_unordered_map_dogen_sml_qname_dogen_sml_entity(unsigned int position) {
+    std::unordered_map<dogen::sml::qname, dogen::sml::entity> r;
+    for (unsigned int i(0); i < 10; ++i) {
+        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_entity(position + i)));
+    }
+    return r;
+}
+
+dogen::sml::factory
+create_dogen_sml_factory(const unsigned int position) {
+    return dogen::sml::factory_generator::create(position);
+}
+
+std::unordered_map<dogen::sml::qname, dogen::sml::factory> create_std_unordered_map_dogen_sml_qname_dogen_sml_factory(unsigned int position) {
+    std::unordered_map<dogen::sml::qname, dogen::sml::factory> r;
+    for (unsigned int i(0); i < 10; ++i) {
+        r.insert(std::make_pair(create_dogen_sml_qname(position + i), create_dogen_sml_factory(position + i)));
+    }
+    return r;
+}
+
 }
 
 namespace dogen {
@@ -165,7 +179,7 @@ model_generator::model_generator() : position_(0) { }
 void model_generator::
 populate(const unsigned int position, result_type& v) {
     v.name(create_std_string(position + 0));
-    v.pods(create_std_unordered_map_dogen_sml_qname_dogen_sml_pod(position + 1));
+    v.value_objects(create_std_unordered_map_dogen_sml_qname_dogen_sml_value(position + 1));
     v.primitives(create_std_unordered_map_dogen_sml_qname_dogen_sml_value(position + 2));
     v.enumerations(create_std_unordered_map_dogen_sml_qname_dogen_sml_value(position + 3));
     v.exceptions(create_std_unordered_map_dogen_sml_qname_dogen_sml_value(position + 4));
@@ -178,6 +192,9 @@ populate(const unsigned int position, result_type& v) {
     v.services(create_std_unordered_map_dogen_sml_qname_dogen_sml_service(position + 11));
     v.modules(create_std_unordered_map_dogen_sml_qname_dogen_sml_module(position + 12));
     v.concepts(create_std_unordered_map_dogen_sml_qname_dogen_sml_concept(position + 13));
+    v.entities(create_std_unordered_map_dogen_sml_qname_dogen_sml_entity(position + 14));
+    v.factories(create_std_unordered_map_dogen_sml_qname_dogen_sml_factory(position + 15));
+    v.repositories(create_std_unordered_map_dogen_sml_qname_dogen_sml_entity(position + 16));
 }
 
 model_generator::result_type
diff --git a/projects/sml/src/test_data/pod_td.cpp b/projects/sml/src/test_data/pod_td.cpp
deleted file mode 100644
index c472410..0000000
--- a/projects/sml/src/test_data/pod_td.cpp
+++ /dev/null
@@ -1,159 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include <sstream>
-#include "dogen/sml/test_data/category_types_td.hpp"
-#include "dogen/sml/test_data/generation_types_td.hpp"
-#include "dogen/sml/test_data/pod_td.hpp"
-#include "dogen/sml/test_data/pod_types_td.hpp"
-#include "dogen/sml/test_data/property_td.hpp"
-#include "dogen/sml/test_data/qname_td.hpp"
-
-namespace {
-
-dogen::sml::qname
-create_dogen_sml_qname(const unsigned int position) {
-    return dogen::sml::qname_generator::create(position);
-}
-
-dogen::sml::property
-create_dogen_sml_property(const unsigned int position) {
-    return dogen::sml::property_generator::create(position);
-}
-
-std::vector<dogen::sml::property> create_std_vector_dogen_sml_property(unsigned int position) {
-    std::vector<dogen::sml::property> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_dogen_sml_property(position + i));
-    }
-    return r;
-}
-
-boost::optional<dogen::sml::qname>
-create_boost_optional_dogen_sml_qname(unsigned int position) {
-    boost::optional<dogen::sml::qname> r(
-        create_dogen_sml_qname(position));
-    return r;
-}
-
-std::list<dogen::sml::qname> create_std_list_dogen_sml_qname(unsigned int position) {
-    std::list<dogen::sml::qname> r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_dogen_sml_qname(position + i));
-    }
-    return r;
-}
-
-dogen::sml::generation_types
-create_dogen_sml_generation_types(const unsigned int position) {
-    return dogen::sml::generation_types_generator::create(position);
-}
-
-bool create_bool(const unsigned int position) {
-    return (position % 2) == 0;
-}
-
-dogen::sml::category_types
-create_dogen_sml_category_types(const unsigned int position) {
-    return dogen::sml::category_types_generator::create(position);
-}
-
-dogen::sml::pod_types
-create_dogen_sml_pod_types(const unsigned int position) {
-    return dogen::sml::pod_types_generator::create(position);
-}
-
-std::string create_std_string(const unsigned int position) {
-    std::ostringstream s;
-    s << "a_string_" << position;
-    return s.str();
-}
-
-unsigned int create_unsigned_int(const unsigned int position) {
-    return static_cast<unsigned int>(position);
-}
-
-std::pair<std::string, std::string>
-create_std_pair_std_string_std_string(unsigned int position) {
-    std::pair<std::string, std::string> r(
-        create_std_string(position),
-        create_std_string(position));
-    return r;
-}
-
-std::vector<std::pair<std::string, std::string> > create_std_vector_std_pair_std_string_std_string_(unsigned int position) {
-    std::vector<std::pair<std::string, std::string> > r;
-    for (unsigned int i(0); i < 10; ++i) {
-        r.push_back(create_std_pair_std_string_std_string(position + i));
-    }
-    return r;
-}
-
-}
-
-namespace dogen {
-namespace sml {
-
-pod_generator::pod_generator() : position_(0) { }
-
-void pod_generator::
-populate(const unsigned int position, result_type& v) {
-    v.name(create_dogen_sml_qname(position + 0));
-    v.properties(create_std_vector_dogen_sml_property(position + 1));
-    v.parent_name(create_boost_optional_dogen_sml_qname(position + 2));
-    v.original_parent_name(create_boost_optional_dogen_sml_qname(position + 3));
-    v.leaves(create_std_list_dogen_sml_qname(position + 4));
-    v.generation_type(create_dogen_sml_generation_types(position + 5));
-    v.is_parent(create_bool(position + 6));
-    v.category_type(create_dogen_sml_category_types(position + 7));
-    v.pod_type(create_dogen_sml_pod_types(position + 8));
-    v.documentation(create_std_string(position + 9));
-    v.number_of_type_arguments(create_unsigned_int(position + 10));
-    v.implementation_specific_parameters(create_std_vector_std_pair_std_string_std_string_(position + 11));
-    v.is_visitable(create_bool(position + 12));
-    v.is_immutable(create_bool(position + 13));
-    v.is_versioned(create_bool(position + 14));
-    v.is_keyed(create_bool(position + 15));
-    v.is_comparable(create_bool(position + 16));
-    v.is_fluent(create_bool(position + 17));
-    v.is_aggregate_root(create_bool(position + 18));
-    v.versioned_key(create_boost_optional_dogen_sml_qname(position + 19));
-    v.unversioned_key(create_boost_optional_dogen_sml_qname(position + 20));
-}
-
-pod_generator::result_type
-pod_generator::create(const unsigned int position) {
-    pod r;
-    pod_generator::populate(position, r);
-    return r;
-}
-pod_generator::result_type*
-pod_generator::create_ptr(const unsigned int position) {
-    pod* p = new pod();
-    pod_generator::populate(position, *p);
-    return p;
-}
-
-pod_generator::result_type
-pod_generator::operator()() {
-    return create(position_++);
-}
-
-} }
diff --git a/projects/sml/src/test_data/pod_types_td.cpp b/projects/sml/src/test_data/pod_types_td.cpp
deleted file mode 100644
index e63efd6..0000000
--- a/projects/sml/src/test_data/pod_types_td.cpp
+++ /dev/null
@@ -1,44 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/test_data/pod_types_td.hpp"
-
-namespace dogen {
-namespace sml {
-
-pod_types_generator::pod_types_generator() : position_(0) { }
-void pod_types_generator::
-populate(const unsigned int position, result_type& v) {
-    v = static_cast<pod_types>(position % 7);
-}
-
-pod_types_generator::result_type
-pod_types_generator::create(const unsigned int  position) {
-    result_type r;
-    pod_types_generator::populate(position, r);
-    return r;
-}
-
-pod_types_generator::result_type
-pod_types_generator::operator()() {
-    return create(position_++);
-}
-
-} }
\ No newline at end of file
diff --git a/projects/sml/src/types/injector.cpp b/projects/sml/src/types/injector.cpp
index de270c7..c1f6d4c 100644
--- a/projects/sml/src/types/injector.cpp
+++ b/projects/sml/src/types/injector.cpp
@@ -57,7 +57,7 @@ const std::string duplicate_qname(
 namespace dogen {
 namespace sml {
 
-pod injector::create_key(const qname& qn, const generation_types gt,
+value injector::create_key(const qname& qn, const generation_types gt,
     const std::vector<property>& properties, const bool versioned) const {
 
     qname kqn;
@@ -66,23 +66,20 @@ pod injector::create_key(const qname& qn, const generation_types gt,
     kqn.model_name(qn.model_name());
     kqn.module_path(qn.module_path());
     kqn.external_module_path(qn.external_module_path());
-    kqn.meta_type(meta_types::pod);
+    kqn.meta_type(meta_types::value);
 
-    pod r;
+    value r;
     r.name(kqn);
     r.generation_type(gt);
-    r.pod_type(pod_types::value);
-    r.documentation(
-        (versioned ? versioned_key_doxygen : unversioned_key_doxygen) +
-        qn.type_name());
-
-    const auto vtc(category_types::versioned_key);
-    const auto uvtc(category_types::unversioned_key);
-    r.category_type(versioned ? vtc : uvtc);
     r.properties(properties);
-
-    if (versioned)
-        inject_version(r);
+    if (versioned) {
+        r.type(value_types::versioned_key);
+        r.documentation(versioned_key_doxygen + qn.type_name());
+        r.properties().push_back(create_version_property());
+    } else {
+        r.type(value_types::unversioned_key);
+        r.documentation(unversioned_key_doxygen + qn.type_name());
+    }
 
     BOOST_LOG_SEV(lg, debug) << "Created key: " << kqn.type_name();
     return r;
@@ -91,11 +88,11 @@ pod injector::create_key(const qname& qn, const generation_types gt,
 void injector::inject_keys(model& m) const {
     BOOST_LOG_SEV(lg, debug) << "Injecting keys.";
 
-    std::list<pod> keys;
-    for (auto& pair : m.pods()) {
-        auto& pod(pair.second);
+    std::list<value> keys;
+    for (auto& pair : m.entities()) {
+        auto& entity(pair.second);
 
-        if (!pod.is_keyed())
+        if (!entities.is_keyed())
             continue;
 
         std::vector<property> identity_properties;
@@ -141,10 +138,7 @@ void injector::inject_keys(model& m) const {
     BOOST_LOG_SEV(lg, debug) << "Done injecting keys. Total: " << keys.size();
 }
 
-void injector::inject_version(pod& p) const {
-    BOOST_LOG_SEV(lg, debug) << "Injecting version property to type: "
-                             << p.name();
-
+property injector::create_version_property() const {
     qname qn;
     qn.type_name(uint_name);
     qn.meta_type(meta_types::primitive);
@@ -152,12 +146,11 @@ void injector::inject_version(pod& p) const {
     nested_qname nqn;
     nqn.type(qn);
 
-    property v;
-    v.name(version_name);
-    v.type_name(nqn);
-    v.documentation(versioned_doxygen);
-
-    p.properties().push_back(v);
+    property r;
+    r.name(version_name);
+    r.type_name(nqn);
+    r.documentation(versioned_doxygen);
+    return r;
 }
 
 void injector::inject_version(model& m) const {
diff --git a/projects/sml/src/types/model.cpp b/projects/sml/src/types/model.cpp
index b87c5c9..9a9fd0e 100644
--- a/projects/sml/src/types/model.cpp
+++ b/projects/sml/src/types/model.cpp
@@ -28,7 +28,7 @@ model::model()
 
 model::model(
     const std::string& name,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& pods,
+    const std::unordered_map<dogen::sml::qname, dogen::sml::value>& value_objects,
     const std::unordered_map<dogen::sml::qname, dogen::sml::value>& primitives,
     const std::unordered_map<dogen::sml::qname, dogen::sml::value>& enumerations,
     const std::unordered_map<dogen::sml::qname, dogen::sml::value>& exceptions,
@@ -40,9 +40,12 @@ model::model(
     const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
     const std::unordered_map<dogen::sml::qname, dogen::sml::service>& services,
     const std::unordered_map<dogen::sml::qname, dogen::sml::module>& modules,
-    const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts)
+    const std::unordered_map<dogen::sml::qname, dogen::sml::concept>& concepts,
+    const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& entities,
+    const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& factories,
+    const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& repositories)
     : name_(name),
-      pods_(pods),
+      value_objects_(value_objects),
       primitives_(primitives),
       enumerations_(enumerations),
       exceptions_(exceptions),
@@ -54,12 +57,15 @@ model::model(
       implementation_specific_parameters_(implementation_specific_parameters),
       services_(services),
       modules_(modules),
-      concepts_(concepts) { }
+      concepts_(concepts),
+      entities_(entities),
+      factories_(factories),
+      repositories_(repositories) { }
 
 void model::swap(model& other) noexcept {
     using std::swap;
     swap(name_, other.name_);
-    swap(pods_, other.pods_);
+    swap(value_objects_, other.value_objects_);
     swap(primitives_, other.primitives_);
     swap(enumerations_, other.enumerations_);
     swap(exceptions_, other.exceptions_);
@@ -72,11 +78,14 @@ void model::swap(model& other) noexcept {
     swap(services_, other.services_);
     swap(modules_, other.modules_);
     swap(concepts_, other.concepts_);
+    swap(entities_, other.entities_);
+    swap(factories_, other.factories_);
+    swap(repositories_, other.repositories_);
 }
 
 bool model::operator==(const model& rhs) const {
     return name_ == rhs.name_ &&
-        pods_ == rhs.pods_ &&
+        value_objects_ == rhs.value_objects_ &&
         primitives_ == rhs.primitives_ &&
         enumerations_ == rhs.enumerations_ &&
         exceptions_ == rhs.exceptions_ &&
@@ -88,7 +97,10 @@ bool model::operator==(const model& rhs) const {
         implementation_specific_parameters_ == rhs.implementation_specific_parameters_ &&
         services_ == rhs.services_ &&
         modules_ == rhs.modules_ &&
-        concepts_ == rhs.concepts_;
+        concepts_ == rhs.concepts_ &&
+        entities_ == rhs.entities_ &&
+        factories_ == rhs.factories_ &&
+        repositories_ == rhs.repositories_;
 }
 
 model& model::operator=(model other) {
@@ -113,20 +125,20 @@ void model::name(const std::string&& v) {
     name_ = std::move(v);
 }
 
-const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& model::pods() const {
-    return pods_;
+const std::unordered_map<dogen::sml::qname, dogen::sml::value>& model::value_objects() const {
+    return value_objects_;
 }
 
-std::unordered_map<dogen::sml::qname, dogen::sml::pod>& model::pods() {
-    return pods_;
+std::unordered_map<dogen::sml::qname, dogen::sml::value>& model::value_objects() {
+    return value_objects_;
 }
 
-void model::pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>& v) {
-    pods_ = v;
+void model::value_objects(const std::unordered_map<dogen::sml::qname, dogen::sml::value>& v) {
+    value_objects_ = v;
 }
 
-void model::pods(const std::unordered_map<dogen::sml::qname, dogen::sml::pod>&& v) {
-    pods_ = std::move(v);
+void model::value_objects(const std::unordered_map<dogen::sml::qname, dogen::sml::value>&& v) {
+    value_objects_ = std::move(v);
 }
 
 const std::unordered_map<dogen::sml::qname, dogen::sml::value>& model::primitives() const {
@@ -313,4 +325,52 @@ void model::concepts(const std::unordered_map<dogen::sml::qname, dogen::sml::con
     concepts_ = std::move(v);
 }
 
+const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& model::entities() const {
+    return entities_;
+}
+
+std::unordered_map<dogen::sml::qname, dogen::sml::entity>& model::entities() {
+    return entities_;
+}
+
+void model::entities(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v) {
+    entities_ = v;
+}
+
+void model::entities(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>&& v) {
+    entities_ = std::move(v);
+}
+
+const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& model::factories() const {
+    return factories_;
+}
+
+std::unordered_map<dogen::sml::qname, dogen::sml::factory>& model::factories() {
+    return factories_;
+}
+
+void model::factories(const std::unordered_map<dogen::sml::qname, dogen::sml::factory>& v) {
+    factories_ = v;
+}
+
+void model::factories(const std::unordered_map<dogen::sml::qname, dogen::sml::factory>&& v) {
+    factories_ = std::move(v);
+}
+
+const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& model::repositories() const {
+    return repositories_;
+}
+
+std::unordered_map<dogen::sml::qname, dogen::sml::entity>& model::repositories() {
+    return repositories_;
+}
+
+void model::repositories(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>& v) {
+    repositories_ = v;
+}
+
+void model::repositories(const std::unordered_map<dogen::sml::qname, dogen::sml::entity>&& v) {
+    repositories_ = std::move(v);
+}
+
 } }
\ No newline at end of file
diff --git a/projects/sml/src/types/pod.cpp b/projects/sml/src/types/pod.cpp
deleted file mode 100644
index a5b70a4..0000000
--- a/projects/sml/src/types/pod.cpp
+++ /dev/null
@@ -1,402 +0,0 @@
-/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
- *
- * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 3 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- */
-#include "dogen/sml/types/pod.hpp"
-
-namespace dogen {
-namespace sml {
-
-pod::pod()
-    : generation_type_(static_cast<dogen::sml::generation_types>(0)),
-      is_parent_(static_cast<bool>(0)),
-      category_type_(static_cast<dogen::sml::category_types>(0)),
-      pod_type_(static_cast<dogen::sml::pod_types>(0)),
-      number_of_type_arguments_(static_cast<unsigned int>(0)),
-      is_visitable_(static_cast<bool>(0)),
-      is_immutable_(static_cast<bool>(0)),
-      is_versioned_(static_cast<bool>(0)),
-      is_keyed_(static_cast<bool>(0)),
-      is_comparable_(static_cast<bool>(0)),
-      is_fluent_(static_cast<bool>(0)),
-      is_aggregate_root_(static_cast<bool>(0)) { }
-
-pod::pod(pod&& rhs)
-    : name_(std::move(rhs.name_)),
-      properties_(std::move(rhs.properties_)),
-      parent_name_(std::move(rhs.parent_name_)),
-      original_parent_name_(std::move(rhs.original_parent_name_)),
-      leaves_(std::move(rhs.leaves_)),
-      generation_type_(std::move(rhs.generation_type_)),
-      is_parent_(std::move(rhs.is_parent_)),
-      category_type_(std::move(rhs.category_type_)),
-      pod_type_(std::move(rhs.pod_type_)),
-      documentation_(std::move(rhs.documentation_)),
-      number_of_type_arguments_(std::move(rhs.number_of_type_arguments_)),
-      implementation_specific_parameters_(std::move(rhs.implementation_specific_parameters_)),
-      is_visitable_(std::move(rhs.is_visitable_)),
-      is_immutable_(std::move(rhs.is_immutable_)),
-      is_versioned_(std::move(rhs.is_versioned_)),
-      is_keyed_(std::move(rhs.is_keyed_)),
-      is_comparable_(std::move(rhs.is_comparable_)),
-      is_fluent_(std::move(rhs.is_fluent_)),
-      is_aggregate_root_(std::move(rhs.is_aggregate_root_)),
-      versioned_key_(std::move(rhs.versioned_key_)),
-      unversioned_key_(std::move(rhs.unversioned_key_)) { }
-
-pod::pod(
-    const dogen::sml::qname& name,
-    const std::vector<dogen::sml::property>& properties,
-    const boost::optional<dogen::sml::qname>& parent_name,
-    const boost::optional<dogen::sml::qname>& original_parent_name,
-    const std::list<dogen::sml::qname>& leaves,
-    const dogen::sml::generation_types& generation_type,
-    const bool is_parent,
-    const dogen::sml::category_types& category_type,
-    const dogen::sml::pod_types& pod_type,
-    const std::string& documentation,
-    const unsigned int number_of_type_arguments,
-    const std::vector<std::pair<std::string, std::string> >& implementation_specific_parameters,
-    const bool is_visitable,
-    const bool is_immutable,
-    const bool is_versioned,
-    const bool is_keyed,
-    const bool is_comparable,
-    const bool is_fluent,
-    const bool is_aggregate_root,
-    const boost::optional<dogen::sml::qname>& versioned_key,
-    const boost::optional<dogen::sml::qname>& unversioned_key)
-    : name_(name),
-      properties_(properties),
-      parent_name_(parent_name),
-      original_parent_name_(original_parent_name),
-      leaves_(leaves),
-      generation_type_(generation_type),
-      is_parent_(is_parent),
-      category_type_(category_type),
-      pod_type_(pod_type),
-      documentation_(documentation),
-      number_of_type_arguments_(number_of_type_arguments),
-      implementation_specific_parameters_(implementation_specific_parameters),
-      is_visitable_(is_visitable),
-      is_immutable_(is_immutable),
-      is_versioned_(is_versioned),
-      is_keyed_(is_keyed),
-      is_comparable_(is_comparable),
-      is_fluent_(is_fluent),
-      is_aggregate_root_(is_aggregate_root),
-      versioned_key_(versioned_key),
-      unversioned_key_(unversioned_key) { }
-
-void pod::swap(pod& other) noexcept {
-    using std::swap;
-    swap(name_, other.name_);
-    swap(properties_, other.properties_);
-    swap(parent_name_, other.parent_name_);
-    swap(original_parent_name_, other.original_parent_name_);
-    swap(leaves_, other.leaves_);
-    swap(generation_type_, other.generation_type_);
-    swap(is_parent_, other.is_parent_);
-    swap(category_type_, other.category_type_);
-    swap(pod_type_, other.pod_type_);
-    swap(documentation_, other.documentation_);
-    swap(number_of_type_arguments_, other.number_of_type_arguments_);
-    swap(implementation_specific_parameters_, other.implementation_specific_parameters_);
-    swap(is_visitable_, other.is_visitable_);
-    swap(is_immutable_, other.is_immutable_);
-    swap(is_versioned_, other.is_versioned_);
-    swap(is_keyed_, other.is_keyed_);
-    swap(is_comparable_, other.is_comparable_);
-    swap(is_fluent_, other.is_fluent_);
-    swap(is_aggregate_root_, other.is_aggregate_root_);
-    swap(versioned_key_, other.versioned_key_);
-    swap(unversioned_key_, other.unversioned_key_);
-}
-
-bool pod::operator==(const pod& rhs) const {
-    return name_ == rhs.name_ &&
-        properties_ == rhs.properties_ &&
-        parent_name_ == rhs.parent_name_ &&
-        original_parent_name_ == rhs.original_parent_name_ &&
-        leaves_ == rhs.leaves_ &&
-        generation_type_ == rhs.generation_type_ &&
-        is_parent_ == rhs.is_parent_ &&
-        category_type_ == rhs.category_type_ &&
-        pod_type_ == rhs.pod_type_ &&
-        documentation_ == rhs.documentation_ &&
-        number_of_type_arguments_ == rhs.number_of_type_arguments_ &&
-        implementation_specific_parameters_ == rhs.implementation_specific_parameters_ &&
-        is_visitable_ == rhs.is_visitable_ &&
-        is_immutable_ == rhs.is_immutable_ &&
-        is_versioned_ == rhs.is_versioned_ &&
-        is_keyed_ == rhs.is_keyed_ &&
-        is_comparable_ == rhs.is_comparable_ &&
-        is_fluent_ == rhs.is_fluent_ &&
-        is_aggregate_root_ == rhs.is_aggregate_root_ &&
-        versioned_key_ == rhs.versioned_key_ &&
-        unversioned_key_ == rhs.unversioned_key_;
-}
-
-pod& pod::operator=(pod other) {
-    using std::swap;
-    swap(*this, other);
-    return *this;
-}
-
-const dogen::sml::qname& pod::name() const {
-    return name_;
-}
-
-dogen::sml::qname& pod::name() {
-    return name_;
-}
-
-void pod::name(const dogen::sml::qname& v) {
-    name_ = v;
-}
-
-void pod::name(const dogen::sml::qname&& v) {
-    name_ = std::move(v);
-}
-
-const std::vector<dogen::sml::property>& pod::properties() const {
-    return properties_;
-}
-
-std::vector<dogen::sml::property>& pod::properties() {
-    return properties_;
-}
-
-void pod::properties(const std::vector<dogen::sml::property>& v) {
-    properties_ = v;
-}
-
-void pod::properties(const std::vector<dogen::sml::property>&& v) {
-    properties_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::parent_name() const {
-    return parent_name_;
-}
-
-boost::optional<dogen::sml::qname>& pod::parent_name() {
-    return parent_name_;
-}
-
-void pod::parent_name(const boost::optional<dogen::sml::qname>& v) {
-    parent_name_ = v;
-}
-
-void pod::parent_name(const boost::optional<dogen::sml::qname>&& v) {
-    parent_name_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::original_parent_name() const {
-    return original_parent_name_;
-}
-
-boost::optional<dogen::sml::qname>& pod::original_parent_name() {
-    return original_parent_name_;
-}
-
-void pod::original_parent_name(const boost::optional<dogen::sml::qname>& v) {
-    original_parent_name_ = v;
-}
-
-void pod::original_parent_name(const boost::optional<dogen::sml::qname>&& v) {
-    original_parent_name_ = std::move(v);
-}
-
-const std::list<dogen::sml::qname>& pod::leaves() const {
-    return leaves_;
-}
-
-std::list<dogen::sml::qname>& pod::leaves() {
-    return leaves_;
-}
-
-void pod::leaves(const std::list<dogen::sml::qname>& v) {
-    leaves_ = v;
-}
-
-void pod::leaves(const std::list<dogen::sml::qname>&& v) {
-    leaves_ = std::move(v);
-}
-
-dogen::sml::generation_types pod::generation_type() const {
-    return generation_type_;
-}
-
-void pod::generation_type(const dogen::sml::generation_types& v) {
-    generation_type_ = v;
-}
-
-bool pod::is_parent() const {
-    return is_parent_;
-}
-
-void pod::is_parent(const bool v) {
-    is_parent_ = v;
-}
-
-dogen::sml::category_types pod::category_type() const {
-    return category_type_;
-}
-
-void pod::category_type(const dogen::sml::category_types& v) {
-    category_type_ = v;
-}
-
-dogen::sml::pod_types pod::pod_type() const {
-    return pod_type_;
-}
-
-void pod::pod_type(const dogen::sml::pod_types& v) {
-    pod_type_ = v;
-}
-
-const std::string& pod::documentation() const {
-    return documentation_;
-}
-
-std::string& pod::documentation() {
-    return documentation_;
-}
-
-void pod::documentation(const std::string& v) {
-    documentation_ = v;
-}
-
-void pod::documentation(const std::string&& v) {
-    documentation_ = std::move(v);
-}
-
-unsigned int pod::number_of_type_arguments() const {
-    return number_of_type_arguments_;
-}
-
-void pod::number_of_type_arguments(const unsigned int v) {
-    number_of_type_arguments_ = v;
-}
-
-const std::vector<std::pair<std::string, std::string> >& pod::implementation_specific_parameters() const {
-    return implementation_specific_parameters_;
-}
-
-std::vector<std::pair<std::string, std::string> >& pod::implementation_specific_parameters() {
-    return implementation_specific_parameters_;
-}
-
-void pod::implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >& v) {
-    implementation_specific_parameters_ = v;
-}
-
-void pod::implementation_specific_parameters(const std::vector<std::pair<std::string, std::string> >&& v) {
-    implementation_specific_parameters_ = std::move(v);
-}
-
-bool pod::is_visitable() const {
-    return is_visitable_;
-}
-
-void pod::is_visitable(const bool v) {
-    is_visitable_ = v;
-}
-
-bool pod::is_immutable() const {
-    return is_immutable_;
-}
-
-void pod::is_immutable(const bool v) {
-    is_immutable_ = v;
-}
-
-bool pod::is_versioned() const {
-    return is_versioned_;
-}
-
-void pod::is_versioned(const bool v) {
-    is_versioned_ = v;
-}
-
-bool pod::is_keyed() const {
-    return is_keyed_;
-}
-
-void pod::is_keyed(const bool v) {
-    is_keyed_ = v;
-}
-
-bool pod::is_comparable() const {
-    return is_comparable_;
-}
-
-void pod::is_comparable(const bool v) {
-    is_comparable_ = v;
-}
-
-bool pod::is_fluent() const {
-    return is_fluent_;
-}
-
-void pod::is_fluent(const bool v) {
-    is_fluent_ = v;
-}
-
-bool pod::is_aggregate_root() const {
-    return is_aggregate_root_;
-}
-
-void pod::is_aggregate_root(const bool v) {
-    is_aggregate_root_ = v;
-}
-
-const boost::optional<dogen::sml::qname>& pod::versioned_key() const {
-    return versioned_key_;
-}
-
-boost::optional<dogen::sml::qname>& pod::versioned_key() {
-    return versioned_key_;
-}
-
-void pod::versioned_key(const boost::optional<dogen::sml::qname>& v) {
-    versioned_key_ = v;
-}
-
-void pod::versioned_key(const boost::optional<dogen::sml::qname>&& v) {
-    versioned_key_ = std::move(v);
-}
-
-const boost::optional<dogen::sml::qname>& pod::unversioned_key() const {
-    return unversioned_key_;
-}
-
-boost::optional<dogen::sml::qname>& pod::unversioned_key() {
-    return unversioned_key_;
-}
-
-void pod::unversioned_key(const boost::optional<dogen::sml::qname>& v) {
-    unversioned_key_ = v;
-}
-
-void pod::unversioned_key(const boost::optional<dogen::sml::qname>&& v) {
-    unversioned_key_ = std::move(v);
-}
-
-} }
\ No newline at end of file
