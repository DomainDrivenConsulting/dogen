diff --git a/data/fields/cpp.hash.json b/data/fields/cpp.hash.json
deleted file mode 100644
index 1d5331f..0000000
--- a/data/fields/cpp.hash.json
+++ /dev/null
@@ -1,90 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.hash.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "hash"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.hash.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "hash"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.hash.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash",
-            "formatter_name" : "cpp.hash.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.hash.class_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash",
-            "formatter_name" : "cpp.hash.class_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.hash.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash",
-            "formatter_name" : "cpp.hash.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.hash.enum_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.hash",
-            "formatter_name" : "cpp.hash.enum_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    }
-]
diff --git a/data/fields/cpp.io.json b/data/fields/cpp.io.json
deleted file mode 100644
index 07f798c..0000000
--- a/data/fields/cpp.io.json
+++ /dev/null
@@ -1,90 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.io.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "io"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.io.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "io"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.io.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io",
-            "formatter_name" : "cpp.io.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.io.class_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io",
-            "formatter_name" : "cpp.io.class_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.io.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io",
-            "formatter_name" : "cpp.io.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.io.enum_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.io",
-            "formatter_name" : "cpp.io.enum_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    }
-]
\ No newline at end of file
diff --git a/data/fields/cpp.json b/data/fields/cpp.json
deleted file mode 100644
index 07af8a8..0000000
--- a/data/fields/cpp.json
+++ /dev/null
@@ -1,269 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "enabled"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "global_template",
-        "scope" : "root_module",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "supported"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "facet_template",
-        "scope" : "entity",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "file_path"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "formatter_template",
-        "scope" : "entity"
-    },
-    {
-        "name" : {
-            "simple" : "header_guard"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "formatter_group" : "cpp.header_files"
-        },
-        "value_type" : "text",
-        "definition_type" : "formatter_template",
-        "scope" : "entity"
-    },
-    {
-        "name" : {
-            "simple" : "inclusion_required",
-            "qualified" : "cpp.inclusion_required"
-
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "entity",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "inclusion_directive",
-            "formatter_group" : "cpp.header_files"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "formatter_template",
-        "scope" : "entity"
-    },
-    {
-        "name" : {
-            "simple" : "inclusion_dependency"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text_collection",
-        "definition_type" : "formatter_template",
-        "scope" : "entity"
-    },
-    {
-        "name" : {
-            "simple" : "inclusion_required",
-            "formatter_group" : "cpp.header_files"
-
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "formatter_template",
-        "scope" : "entity",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "split_project",
-            "qualified" : "cpp.split_project"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : false
-    },
-    {
-        "name" : {
-            "simple" : "source_directory_name",
-            "qualified" : "cpp.source_directory_name"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "src"
-    },
-    {
-        "name" : {
-            "simple" : "include_directory_name",
-            "qualified" : "cpp.include_directory_name"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "include"
-    },
-    {
-        "name" : {
-            "simple" : "header_file_extension",
-            "qualified" : "cpp.header_file_extension"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "hpp"
-    },
-    {
-        "name" : {
-            "simple" : "implementation_file_extension",
-            "qualified" : "cpp.implementation_file_extension"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "cpp"
-    },
-    {
-        "name" : {
-            "simple" : "enable_facet_folders",
-            "qualified" : "cpp.enable_facet_folders"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "enable_unique_file_names",
-            "qualified" : "cpp.enable_unique_file_names"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : true
-    },
-    {
-        "name" : {
-            "simple" : "requires_manual_default_constructor",
-            "qualified" : "cpp.type.requires_manual_default_constructor"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "entity",
-        "default_value" : false
-    },
-    {
-        "name" : {
-            "simple" : "requires_manual_move_constructor",
-            "qualified" : "cpp.type.requires_manual_move_constructor"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "entity",
-        "default_value" : false
-    },
-    {
-        "name" : {
-            "simple" : "disable_complete_constructor",
-            "qualified" : "cpp.disable_complete_constructor"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : false
-    },
-    {
-        "name" : {
-            "simple" : "disable_xml_serialization",
-            "qualified" : "cpp.disable_xml_serialization"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : false
-    },
-    {
-        "name" : {
-            "simple" : "disable_versioning",
-            "qualified" : "cpp.disable_versioning"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : false
-    },
-   {
-        "name" : {
-            "simple" : "disable_facet_directories",
-            "qualified" : "cpp.disable_facet_directories"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : false
-    }
-]
diff --git a/data/fields/cpp.odb.json b/data/fields/cpp.odb.json
deleted file mode 100644
index 45f0720..0000000
--- a/data/fields/cpp.odb.json
+++ /dev/null
@@ -1,88 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.odb.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "odb"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.odb.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "pragmas"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.odb.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb",
-            "formatter_name" : "cpp.odb.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.odb.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb",
-            "formatter_name" : "cpp.odb.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.odb.odb_options_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb",
-            "formatter_name" : "cpp.odb.odb_options_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "odb_pragma",
-            "qualified" : "odb_pragma"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.odb"
-        },
-        "value_type" : "text_collection",
-        "definition_type" : "instance",
-        "scope" : "any"
-    }
-]
diff --git a/data/fields/cpp.serialization.json b/data/fields/cpp.serialization.json
deleted file mode 100644
index b2c6333..0000000
--- a/data/fields/cpp.serialization.json
+++ /dev/null
@@ -1,120 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.serialization.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "serialization"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "ser"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.class_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.class_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.registrar_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.registrar_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "fwd"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.registrar_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.registrar_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "fwd"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.serialization.forward_declarations_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.serialization",
-            "formatter_name" : "cpp.serialization.forward_declarations_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "fwd"
-    }
-]
diff --git a/data/fields/cpp.test_data.json b/data/fields/cpp.test_data.json
deleted file mode 100644
index e737dcb..0000000
--- a/data/fields/cpp.test_data.json
+++ /dev/null
@@ -1,90 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.test_data.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "test_data"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.test_data.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "td"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.test_data.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data",
-            "formatter_name" : "cpp.test_data.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.test_data.class_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data",
-            "formatter_name" : "cpp.test_data.class_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.test_data.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data",
-            "formatter_name" : "cpp.test_data.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.test_data.enum_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.test_data",
-            "formatter_name" : "cpp.test_data.enum_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    }
-]
diff --git a/data/fields/cpp.types.json b/data/fields/cpp.types.json
deleted file mode 100644
index 6b12c19..0000000
--- a/data/fields/cpp.types.json
+++ /dev/null
@@ -1,163 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "directory",
-            "qualified" : "cpp.types.directory"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "types"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "integrated_facet",
-            "qualified" : "cpp.types.integrated_facet"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types"
-        },
-        "value_type" : "text_collection",
-        "definition_type" : "instance",
-        "scope" : "root_module"
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.class_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.class_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.class_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.class_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.enum_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.enum_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.enum_implementation_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.enum_implementation_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.exception_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.exception_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.namespace_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.namespace_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.visitor_header_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.visitor_header_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : ""
-    },
-    {
-        "name" : {
-            "simple" : "postfix",
-            "qualified" : "cpp.types.forward_declarations_formatter.postfix"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "cpp",
-            "facet_name" : "cpp.types",
-            "formatter_name" : "cpp.types.forward_declarations_formatter"
-        },
-        "value_type" : "text",
-        "definition_type" : "instance",
-        "scope" : "root_module",
-        "default_value" : "fwd"
-    }
-]
\ No newline at end of file
diff --git a/data/fields/dia_to_sml.json b/data/fields/dia_to_sml.json
deleted file mode 100644
index 5d3e21b..0000000
--- a/data/fields/dia_to_sml.json
+++ /dev/null
@@ -1,26 +0,0 @@
-[
-    {
-        "name" : {
-            "simple" : "comment",
-            "qualified" : "dia.comment"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "dia_to_tack"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "not_applicable"
-    },
-    {
-        "name" : {
-            "simple" : "identity_attribute",
-            "qualified" : "dia.identity_attribute"
-        },
-        "ownership_hierarchy" : {
-            "model_name" : "dia_to_tack"
-        },
-        "value_type" : "boolean",
-        "definition_type" : "instance",
-        "scope" : "property"
-    }
-]
diff --git a/data/fields/quilt.cpp.hash.json b/data/fields/quilt.cpp.hash.json
new file mode 100644
index 0000000..cab5989
--- /dev/null
+++ b/data/fields/quilt.cpp.hash.json
@@ -0,0 +1,90 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.hash.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "hash"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.hash.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "hash"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.hash.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash",
+            "formatter_name" : "quilt.cpp.hash.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.hash.class_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash",
+            "formatter_name" : "quilt.cpp.hash.class_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.hash.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash",
+            "formatter_name" : "quilt.cpp.hash.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.hash.enum_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.hash",
+            "formatter_name" : "quilt.cpp.hash.enum_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    }
+]
diff --git a/data/fields/quilt.cpp.io.json b/data/fields/quilt.cpp.io.json
new file mode 100644
index 0000000..cafa260
--- /dev/null
+++ b/data/fields/quilt.cpp.io.json
@@ -0,0 +1,90 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.io.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "io"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.io.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "io"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.io.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io",
+            "formatter_name" : "quilt.cpp.io.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.io.class_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io",
+            "formatter_name" : "quilt.cpp.io.class_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.io.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io",
+            "formatter_name" : "quilt.cpp.io.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.io.enum_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.io",
+            "formatter_name" : "quilt.cpp.io.enum_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    }
+]
diff --git a/data/fields/quilt.cpp.json b/data/fields/quilt.cpp.json
new file mode 100644
index 0000000..60cfaba
--- /dev/null
+++ b/data/fields/quilt.cpp.json
@@ -0,0 +1,269 @@
+[
+    {
+        "name" : {
+            "simple" : "enabled"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "global_template",
+        "scope" : "root_module",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "supported"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "facet_template",
+        "scope" : "entity",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "file_path"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "formatter_template",
+        "scope" : "entity"
+    },
+    {
+        "name" : {
+            "simple" : "header_guard"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "formatter_group" : "quilt.cpp.header_files"
+        },
+        "value_type" : "text",
+        "definition_type" : "formatter_template",
+        "scope" : "entity"
+    },
+    {
+        "name" : {
+            "simple" : "inclusion_required",
+            "qualified" : "quilt.cpp.inclusion_required"
+
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "entity",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "inclusion_directive",
+            "formatter_group" : "quilt.cpp.header_files"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "formatter_template",
+        "scope" : "entity"
+    },
+    {
+        "name" : {
+            "simple" : "inclusion_dependency"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text_collection",
+        "definition_type" : "formatter_template",
+        "scope" : "entity"
+    },
+    {
+        "name" : {
+            "simple" : "inclusion_required",
+            "formatter_group" : "quilt.cpp.header_files"
+
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "formatter_template",
+        "scope" : "entity",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "split_project",
+            "qualified" : "quilt.cpp.split_project"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : false
+    },
+    {
+        "name" : {
+            "simple" : "source_directory_name",
+            "qualified" : "quilt.cpp.source_directory_name"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "src"
+    },
+    {
+        "name" : {
+            "simple" : "include_directory_name",
+            "qualified" : "quilt.cpp.include_directory_name"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "include"
+    },
+    {
+        "name" : {
+            "simple" : "header_file_extension",
+            "qualified" : "quilt.cpp.header_file_extension"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "hpp"
+    },
+    {
+        "name" : {
+            "simple" : "implementation_file_extension",
+            "qualified" : "quilt.cpp.implementation_file_extension"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "cpp"
+    },
+    {
+        "name" : {
+            "simple" : "enable_facet_folders",
+            "qualified" : "quilt.cpp.enable_facet_folders"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "enable_unique_file_names",
+            "qualified" : "quilt.cpp.enable_unique_file_names"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : true
+    },
+    {
+        "name" : {
+            "simple" : "requires_manual_default_constructor",
+            "qualified" : "quilt.cpp.type.requires_manual_default_constructor"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "entity",
+        "default_value" : false
+    },
+    {
+        "name" : {
+            "simple" : "requires_manual_move_constructor",
+            "qualified" : "quilt.cpp.type.requires_manual_move_constructor"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "entity",
+        "default_value" : false
+    },
+    {
+        "name" : {
+            "simple" : "disable_complete_constructor",
+            "qualified" : "quilt.cpp.disable_complete_constructor"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : false
+    },
+    {
+        "name" : {
+            "simple" : "disable_xml_serialization",
+            "qualified" : "quilt.cpp.disable_xml_serialization"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : false
+    },
+    {
+        "name" : {
+            "simple" : "disable_versioning",
+            "qualified" : "quilt.cpp.disable_versioning"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : false
+    },
+   {
+        "name" : {
+            "simple" : "disable_facet_directories",
+            "qualified" : "quilt.cpp.disable_facet_directories"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : false
+    }
+]
diff --git a/data/fields/quilt.cpp.odb.json b/data/fields/quilt.cpp.odb.json
new file mode 100644
index 0000000..8af9444
--- /dev/null
+++ b/data/fields/quilt.cpp.odb.json
@@ -0,0 +1,88 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.odb.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "odb"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.odb.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "pragmas"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.odb.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb",
+            "formatter_name" : "quilt.cpp.odb.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.odb.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb",
+            "formatter_name" : "quilt.cpp.odb.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.odb.odb_options_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb",
+            "formatter_name" : "quilt.cpp.odb.odb_options_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "odb_pragma",
+            "qualified" : "odb_pragma"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.odb"
+        },
+        "value_type" : "text_collection",
+        "definition_type" : "instance",
+        "scope" : "any"
+    }
+]
diff --git a/data/fields/quilt.cpp.serialization.json b/data/fields/quilt.cpp.serialization.json
new file mode 100644
index 0000000..3da52cd
--- /dev/null
+++ b/data/fields/quilt.cpp.serialization.json
@@ -0,0 +1,120 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.serialization.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "serialization"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "ser"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.class_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.class_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.registrar_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.registrar_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "fwd"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.registrar_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.registrar_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "fwd"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.serialization.forward_declarations_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.serialization",
+            "formatter_name" : "quilt.cpp.serialization.forward_declarations_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "fwd"
+    }
+]
diff --git a/data/fields/quilt.cpp.test_data.json b/data/fields/quilt.cpp.test_data.json
new file mode 100644
index 0000000..feb4ae0
--- /dev/null
+++ b/data/fields/quilt.cpp.test_data.json
@@ -0,0 +1,90 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.test_data.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "test_data"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.test_data.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "td"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.test_data.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data",
+            "formatter_name" : "quilt.cpp.test_data.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.test_data.class_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data",
+            "formatter_name" : "quilt.cpp.test_data.class_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.test_data.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data",
+            "formatter_name" : "quilt.cpp.test_data.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.test_data.enum_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.test_data",
+            "formatter_name" : "quilt.cpp.test_data.enum_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    }
+]
diff --git a/data/fields/quilt.cpp.types.json b/data/fields/quilt.cpp.types.json
new file mode 100644
index 0000000..ac507bf
--- /dev/null
+++ b/data/fields/quilt.cpp.types.json
@@ -0,0 +1,163 @@
+[
+    {
+        "name" : {
+            "simple" : "directory",
+            "qualified" : "quilt.cpp.types.directory"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "types"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "integrated_facet",
+            "qualified" : "quilt.cpp.types.integrated_facet"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types"
+        },
+        "value_type" : "text_collection",
+        "definition_type" : "instance",
+        "scope" : "root_module"
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.class_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.class_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.class_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.class_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.enum_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.enum_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.enum_implementation_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.enum_implementation_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.exception_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.exception_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.namespace_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.namespace_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.visitor_header_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.visitor_header_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : ""
+    },
+    {
+        "name" : {
+            "simple" : "postfix",
+            "qualified" : "quilt.cpp.types.forward_declarations_formatter.postfix"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "quilt.cpp",
+            "facet_name" : "quilt.cpp.types",
+            "formatter_name" : "quilt.cpp.types.forward_declarations_formatter"
+        },
+        "value_type" : "text",
+        "definition_type" : "instance",
+        "scope" : "root_module",
+        "default_value" : "fwd"
+    }
+]
diff --git a/data/fields/yarn.dia.json b/data/fields/yarn.dia.json
new file mode 100644
index 0000000..0812d7f
--- /dev/null
+++ b/data/fields/yarn.dia.json
@@ -0,0 +1,26 @@
+[
+    {
+        "name" : {
+            "simple" : "comment",
+            "qualified" : "yarn.dia.comment"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "yarn.dia"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "not_applicable"
+    },
+    {
+        "name" : {
+            "simple" : "identity_attribute",
+            "qualified" : "yarn.dia.identity_attribute"
+        },
+        "ownership_hierarchy" : {
+            "model_name" : "yarn.dia"
+        },
+        "value_type" : "boolean",
+        "definition_type" : "instance",
+        "scope" : "property"
+    }
+]
diff --git a/data/library/cpp.boost.json b/data/library/cpp.boost.json
index cf3f254..a9427b0 100644
--- a/data/library/cpp.boost.json
+++ b/data/library/cpp.boost.json
@@ -8,12 +8,12 @@
             "simple_name" : "shared_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/shared_ptr.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/shared_ptr.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/shared_ptr.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/shared_ptr.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -21,12 +21,12 @@
             "simple_name" : "weak_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/weak_ptr.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/weak_ptr.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/weak_ptr.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/weak_ptr.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -34,38 +34,38 @@
             "simple_name" : "scoped_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/scoped_ptr.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/scoped_ptr.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/scoped_ptr.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/scoped_ptr.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "optional",
             "extensions" : {
-                "cpp.type.requires_manual_move_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/optional.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/optional.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_move_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/optional.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/optional.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "variant",
             "extensions" : {
-                "cpp.type.requires_manual_move_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/variant.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/variant.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_move_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/variant.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/variant.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -75,7 +75,7 @@
                 "asio"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/io_service.hpp>"
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/io_service.hpp>"
             }
         },
         {
@@ -85,7 +85,7 @@
                 "asio", "ip", "tcp"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/ip/tcp.hpp>"
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/ip/tcp.hpp>"
             }
         },
         {
@@ -95,7 +95,7 @@
                 "asio", "ip", "tcp"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/ip/tcp.hpp>"
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/asio/ip/tcp.hpp>"
             }
         },
         {
@@ -105,13 +105,13 @@
                 "filesystem"
             ],
             "extensions" : {
-                "cpp.type.requires_manual_move_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/filesystem/path.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "\"dogen/utility/serialization/path.hpp\"",
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_move_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/filesystem/path.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "\"dogen/utility/serialization/path.hpp\"",
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -121,13 +121,13 @@
                 "gregorian"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian_types.hpp>",
-                "cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian.hpp>",
-                "cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/greg_serialize.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian_types.hpp>",
+                "quilt.cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian.hpp>",
+                "quilt.cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/date_time/gregorian/gregorian.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/gregorian/greg_serialize.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -137,13 +137,13 @@
                 "posix_time"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time_types.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/time_serialize.hpp>",
-                "cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
-                "cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time_types.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/time_serialize.hpp>",
+                "quilt.cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
+                "quilt.cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -153,13 +153,13 @@
                 "posix_time"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time_types.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/time_serialize.hpp>",
-                "cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time_types.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/time_serialize.hpp>",
+                "quilt.cpp.io.class_header_formatter.inclusion_directive" : "<boost/date_time/posix_time/posix_time.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -169,13 +169,13 @@
                 "property_tree"
             ],
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<boost/property_tree/ptree.hpp>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/property_tree/ptree_serialization.hpp>",
-                "cpp.io.class_header_formatter.inclusion_directive" : "<boost/property_tree/json_parser.hpp>",
-                "cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/property_tree/json_parser.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<boost/property_tree/ptree.hpp>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/property_tree/ptree_serialization.hpp>",
+                "quilt.cpp.io.class_header_formatter.inclusion_directive" : "<boost/property_tree/json_parser.hpp>",
+                "quilt.cpp.io.class_implementation_formatter.inclusion_directive" : "<boost/property_tree/json_parser.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         }
     ]
diff --git a/data/library/cpp.std.json b/data/library/cpp.std.json
index 495f943..0fa2a5e 100644
--- a/data/library/cpp.std.json
+++ b/data/library/cpp.std.json
@@ -7,116 +7,116 @@
             "meta_type" : "primitive",
             "simple_name" : "int8_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "int16_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "int32_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "int64_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "uint8_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "uint16_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "uint32_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "primitive",
             "simple_name" : "uint64_t",
             "extensions" : {
-                "cpp.type.requires_manual_default_constructor" : true,
-                "cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.serialization.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.type.requires_manual_default_constructor" : true,
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<cstdint>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.serialization.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "string",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<string>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/string.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<string>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/string.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -124,12 +124,12 @@
             "simple_name" : "vector",
             "object_type" : "sequence_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<vector>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/vector.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<vector>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/vector.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -137,12 +137,12 @@
             "simple_name" : "deque",
             "object_type" : "sequence_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<deque>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/deque.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<deque>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/deque.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -150,11 +150,11 @@
             "simple_name" : "array",
             "object_type" : "sequence_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<array>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<array>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -162,12 +162,12 @@
             "simple_name" : "list",
             "object_type" : "sequence_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<list>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/list.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<list>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/list.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -175,11 +175,11 @@
             "simple_name" : "forward_list",
             "object_type" : "sequence_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<forward_list>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<forward_list>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -187,12 +187,12 @@
             "simple_name" : "set",
             "object_type" : "ordered_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<set>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/set.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<set>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/set.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -200,12 +200,12 @@
             "simple_name" : "multiset",
             "object_type" : "ordered_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<multiset>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/multiset.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<multiset>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/multiset.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -213,12 +213,12 @@
             "simple_name" : "unordered_set",
             "object_type" : "hash_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<unordered_set>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/unordered_set.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<unordered_set>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/unordered_set.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -226,12 +226,12 @@
             "simple_name" : "map",
             "object_type" : "ordered_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<map>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/map.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<map>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/map.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -239,12 +239,12 @@
             "simple_name" : "multimap",
             "object_type" : "ordered_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<multimap>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/multimap.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<multimap>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/multimap.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -252,24 +252,24 @@
             "simple_name" : "unordered_map",
             "object_type" : "hash_container",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<unordered_map>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/unordered_map.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<unordered_map>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/unordered_map.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "pair",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<utility>",
-                "cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/utility.hpp>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<utility>",
+                "quilt.cpp.serialization.class_header_formatter.inclusion_directive" : "<boost/serialization/utility.hpp>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -277,11 +277,11 @@
             "simple_name" : "shared_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -289,11 +289,11 @@
             "simple_name" : "weak_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
@@ -301,53 +301,53 @@
             "simple_name" : "unique_ptr",
             "object_type" : "smart_pointer",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<memory>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "function",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<functional>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<functional>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "optional",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<functional>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<functional>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "ostream",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<ostream>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.io.class_header_formatter.inclusion_required" : false,
-                "cpp.test_data.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<ostream>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.io.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.test_data.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         },
         {
             "meta_type" : "object",
             "simple_name" : "ostringstream",
             "extensions" : {
-                "cpp.types.class_header_formatter.inclusion_directive" : "<sstream>",
-                "cpp.hash.class_header_formatter.inclusion_required" : false,
-                "cpp.odb.class_header_formatter.inclusion_required" : false
+                "quilt.cpp.types.class_header_formatter.inclusion_directive" : "<sstream>",
+                "quilt.cpp.hash.class_header_formatter.inclusion_required" : false,
+                "quilt.cpp.odb.class_header_formatter.inclusion_required" : false
             }
         }
 
diff --git a/data/library/hardware.json b/data/library/hardware.json
index 2b349b4..80c1e17 100644
--- a/data/library/hardware.json
+++ b/data/library/hardware.json
@@ -8,8 +8,8 @@
             "simple_name" : "bool",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -17,8 +17,8 @@
             "simple_name" : "char",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -26,8 +26,8 @@
             "simple_name" : "unsigned char",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -35,8 +35,8 @@
             "simple_name" : "int",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -44,8 +44,8 @@
             "simple_name" : "unsigned int",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -53,8 +53,8 @@
             "simple_name" : "short",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -62,8 +62,8 @@
             "simple_name" : "unsigned short",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -71,8 +71,8 @@
             "simple_name" : "long",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -80,8 +80,8 @@
             "simple_name" : "unsigned long",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -89,8 +89,8 @@
             "simple_name" : "long long",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -98,8 +98,8 @@
             "simple_name" : "unsigned long long",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -107,8 +107,8 @@
             "simple_name" : "float",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -116,8 +116,8 @@
             "simple_name" : "double",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         },
         {
@@ -125,8 +125,8 @@
             "simple_name" : "long double",
             "in_global_module" : true,
             "extensions" : {
-                "cpp.inclusion_required" : false,
-                "cpp.type.requires_manual_default_constructor" : true
+                "quilt.cpp.inclusion_required" : false,
+                "quilt.cpp.type.requires_manual_default_constructor" : true
             }
         }
     ]
diff --git a/diagrams/config.dia b/diagrams/config.dia
index 45c9987..fc52dcb 100644
--- a/diagrams/config.dia
+++ b/diagrams/config.dia
@@ -1679,11 +1679,11 @@ The config model provides types to store general configuration
 options for all the different Dogen applications, such as
 knitter, etc.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/database.dia b/diagrams/database.dia
index 205965c..7e8c54a 100644
--- a/diagrams/database.dia
+++ b/diagrams/database.dia
@@ -954,11 +954,11 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=true#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/dia.dia b/diagrams/dia.dia
index 388e6dd..e2a905e 100644
--- a/diagrams/dia.dia
+++ b/diagrams/dia.dia
@@ -4824,11 +4824,11 @@ between the class and the slot concepts, we renamed it.#</dia:string>
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/dynamic.dia b/diagrams/dynamic.dia
index 48790c6..fcb309f 100644
--- a/diagrams/dynamic.dia
+++ b/diagrams/dynamic.dia
@@ -100,11 +100,11 @@ The idea is to allow the meta-models to carry data over to the
 formatting process without necessarily knowing about this data, but
 yet imposing some constraints on the shape of this data.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/formatters.dia b/diagrams/formatters.dia
index 2e9619d..3c34dd9 100644
--- a/diagrams/formatters.dia
+++ b/diagrams/formatters.dia
@@ -4487,11 +4487,11 @@ This model is the repository of all formatting related code
 which is not language specific. Language-specific models can
 then make use of it.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/hello_world.dia b/diagrams/hello_world.dia
index 627170c..662a43f 100644
--- a/diagrams/hello_world.dia
+++ b/diagrams/hello_world.dia
@@ -92,7 +92,7 @@ This is one of the simplest models you can generate, a single class with one
 property. You can see the use of comments at the class level and property
 level.
 
-#DOGEN dia.comment=true#</dia:string>
+#DOGEN yarn.dia.comment=true#</dia:string>
       </dia:attribute>
       <dia:attribute name="abstract">
         <dia:boolean val="false"/>
diff --git a/diagrams/knit.dia b/diagrams/knit.dia
index 3b598f0..573adb7 100644
--- a/diagrams/knit.dia
+++ b/diagrams/knit.dia
@@ -821,11 +821,11 @@ pipeline, that is able to take a model in any of the supported input
 formats and transform it to code in any of the supported programming
 languages.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/quilt.cpp.dia b/diagrams/quilt.cpp.dia
index e4b638b..4bab216 100644
--- a/diagrams/quilt.cpp.dia
+++ b/diagrams/quilt.cpp.dia
@@ -3108,11 +3108,11 @@ the heavy use of inheritance.
 This is why we settled on something which duplicates quite a bit of yarn; it
 seems like the least bad approach.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/quilt.dia b/diagrams/quilt.dia
index e1add69..1d8a743 100644
--- a/diagrams/quilt.dia
+++ b/diagrams/quilt.dia
@@ -1355,11 +1355,11 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/stitch.dia b/diagrams/stitch.dia
index ccb9503..1125dc5 100644
--- a/diagrams/stitch.dia
+++ b/diagrams/stitch.dia
@@ -4178,11 +4178,11 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/yarn.dia b/diagrams/yarn.dia
index f37fdc0..465186c 100644
--- a/diagrams/yarn.dia
+++ b/diagrams/yarn.dia
@@ -1779,11 +1779,11 @@ etc.).
 @li to provide all the information required to build the final model
 and to build it.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
@@ -3122,7 +3122,7 @@ all types in the merged intermediate model.#</dia:string>
           <dia:attribute name="comment">
             <dia:string>#Fully qualified name.
 
-#DOGEN dia.identity_attribute=true#</dia:string>
+#DOGEN yarn.dia.identity_attribute=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
diff --git a/diagrams/yarn.dia.dia b/diagrams/yarn.dia.dia
index c80ea5f..8664635 100644
--- a/diagrams/yarn.dia.dia
+++ b/diagrams/yarn.dia.dia
@@ -6220,9 +6220,10 @@ in the Domain Driven Design book.
 
 @li any type without any stereotype defaults to @e value @e object.
 
-@li any UML Note with the marker #DOGEN dia.comment=true will be used as the
-documentation of the current package, or the model. Only one such note is
-expexted.
+@li any UML Note with the marker #DOGEN yarn.dia.comment=true will be
+used as the documentation of the current package - or the model, if
+place at the top-level. Only one such note is expected per containing
+entity.
 
 The yarn stereotypes have the following behaviours:
 
@@ -6248,11 +6249,11 @@ the root of an inheritance tree.
 
 @li @b comparable: unused as of yet.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/diagrams/yarn.json.dia b/diagrams/yarn.json.dia
index 685bb04..18de7d0 100644
--- a/diagrams/yarn.json.dia
+++ b/diagrams/yarn.json.dia
@@ -96,11 +96,11 @@
           <dia:attribute name="string">
             <dia:string>#Provides yarn file importing support for JSON.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/doc/agile/sprint_backlog_78.org b/doc/agile/sprint_backlog_78.org
index 126b922..c84dc38 100644
--- a/doc/agile/sprint_backlog_78.org
+++ b/doc/agile/sprint_backlog_78.org
@@ -67,11 +67,18 @@ Notes:
 As part of the quilt refactor, we need to rename =backend= to =quilt=.
 
 *** STARTED Rename =cpp= to =quilt.cpp=                               :story:
+    CLOCK: [2016-01-09 Sat 22:41]--[2016-01-10 Sun 00:27] =>  1:46
     CLOCK: [2016-01-08 Fri 23:20]--[2016-01-09 Sat 02:52] =>  3:32
     CLOCK: [2016-01-08 Fri 21:11]--[2016-01-08 Fri 22:40] =>  1:29
 
 As part of the quilt refactor we need to rename =cpp= to =quilt.cpp=.
 
+Notes:
+
+- namespace documentation file is not part of master includer
+- not generating services
+- test data folder is still called =yarn_dia= rather than =yarn.dia=
+
 *** STARTED Create a separate flow for yarn based types               :story:
     CLOCK: [2016-01-06 Wed 22:30]--[2016-01-06 Wed 23:27] =>  0:57
 
diff --git a/projects/dia/src/test/mock_object_factory.cpp b/projects/dia/src/test/mock_object_factory.cpp
index bf38ac1..057bea7 100644
--- a/projects/dia/src/test/mock_object_factory.cpp
+++ b/projects/dia/src/test/mock_object_factory.cpp
@@ -115,7 +115,7 @@ std::string mock_object_factory::to_oject_id(const unsigned int number) {
 
 object mock_object_factory::make_uml_note(const unsigned int number) {
     std::ostringstream ss;
-    ss << "#DOGEN dia.comment=true" << std::endl << std::endl
+    ss << "#DOGEN yarn.dia.comment=true" << std::endl << std::endl
        << "this is a comment." << std::endl;
 
     dogen::dia::string s(ss.str());
diff --git a/projects/dynamic/src/test/mock_field_definition_factory.cpp b/projects/dynamic/src/test/mock_field_definition_factory.cpp
index c4f5227..edeee8b 100644
--- a/projects/dynamic/src/test/mock_field_definition_factory.cpp
+++ b/projects/dynamic/src/test/mock_field_definition_factory.cpp
@@ -60,8 +60,8 @@ field_definition mock_field_definition_factory::licence_name() const {
 field_definition mock_field_definition_factory::create_comment() const {
     field_definition r;
     r.name().simple("comment");
-    r.name().qualified("dia.comment");
-    r.ownership_hierarchy().model_name("yarn_dia");
+    r.name().qualified("yarn.dia.comment");
+    r.ownership_hierarchy().model_name("yarn.dia");
     r.value_type(value_types::text);
     r.definition_type(field_definition_types::instance);
     r.scope(scope_types::not_applicable);
@@ -72,8 +72,8 @@ field_definition mock_field_definition_factory::
 create_identity_attribute() const {
     field_definition r;
     r.name().simple("identity_attribute");
-    r.name().qualified("dia.identity_attribute");
-    r.ownership_hierarchy().model_name("yarn_dia");
+    r.name().qualified("yarn.dia.identity_attribute");
+    r.ownership_hierarchy().model_name("yarn.dia");
     r.value_type(value_types::text);
     r.definition_type(field_definition_types::instance);
     r.scope(scope_types::property);
diff --git a/projects/quilt.cpp/src/types/formatters/traits.cpp b/projects/quilt.cpp/src/types/formatters/traits.cpp
index 533d78b..97191fe 100644
--- a/projects/quilt.cpp/src/types/formatters/traits.cpp
+++ b/projects/quilt.cpp/src/types/formatters/traits.cpp
@@ -26,17 +26,17 @@ namespace cpp {
 namespace formatters {
 
 std::string traits::model_name() {
-    static std::string r("cpp");
+    static std::string r("quilt.cpp");
     return r;
 }
 
 std::string traits::header_formatter_group_name() {
-    static std::string r("cpp.header_files");
+    static std::string r("quilt.cpp.header_files");
     return r;
 }
 
 std::string traits::implementation_formatter_group_name() {
-    static std::string r("cpp.implementation_files");
+    static std::string r("quilt.cpp.implementation_files");
     return r;
 }
 
@@ -45,12 +45,12 @@ std::string traits::includers_formatter_name(const std::string& facet_name) {
 }
 
 std::string traits::include_cmakelists_formatter_name() {
-    static std::string r("cpp.include_cmakelists");
+    static std::string r("quilt.cpp.include_cmakelists");
     return r;
 }
 
 std::string traits::source_cmakelists_formatter_name() {
-    static std::string r("cpp.source_cmakelists");
+    static std::string r("quilt.cpp.source_cmakelists");
     return r;
 }
 
diff --git a/projects/quilt.cpp/src/types/traits.cpp b/projects/quilt.cpp/src/types/traits.cpp
index 0785fab..1154284 100644
--- a/projects/quilt.cpp/src/types/traits.cpp
+++ b/projects/quilt.cpp/src/types/traits.cpp
@@ -75,42 +75,42 @@ std::string traits::inclusion_dependency() {
 }
 
 std::string traits::disable_complete_constructor() {
-    static std::string r("cpp.disable_complete_constructor");
+    static std::string r("quilt.cpp.disable_complete_constructor");
     return r;
 }
 
 std::string traits::disable_xml_serialization() {
-    static std::string r("cpp.disable_xml_serialization");
+    static std::string r("quilt.cpp.disable_xml_serialization");
     return r;
 }
 
 std::string traits::cpp::inclusion_required() {
-    static std::string r("cpp.inclusion_required");
+    static std::string r("quilt.cpp.inclusion_required");
     return r;
 }
 
 std::string traits::cpp::header_file_extension() {
-    static std::string r("cpp.header_file_extension");
+    static std::string r("quilt.cpp.header_file_extension");
     return r;
 }
 
 std::string traits::cpp::implementation_file_extension() {
-    static std::string r("cpp.implementation_file_extension");
+    static std::string r("quilt.cpp.implementation_file_extension");
     return r;
 }
 
 std::string traits::cpp::include_directory_name() {
-    static std::string r("cpp.include_directory_name");
+    static std::string r("quilt.cpp.include_directory_name");
     return r;
 }
 
 std::string traits::cpp::source_directory_name() {
-    static std::string r("cpp.source_directory_name");
+    static std::string r("quilt.cpp.source_directory_name");
     return r;
 }
 
 std::string traits::cpp::disable_facet_directories() {
-    static std::string r("cpp.disable_facet_directories");
+    static std::string r("quilt.cpp.disable_facet_directories");
     return r;
 }
 
diff --git a/projects/yarn.dia/src/test/mock_processed_object_factory.cpp b/projects/yarn.dia/src/test/mock_processed_object_factory.cpp
index 96e3b56..b467a5b 100644
--- a/projects/yarn.dia/src/test/mock_processed_object_factory.cpp
+++ b/projects/yarn.dia/src/test/mock_processed_object_factory.cpp
@@ -32,7 +32,7 @@ const std::string empty;
 const std::string object_prefix("O");
 const std::string doxygen_comment("this is a doxygen brief");
 const std::string note_text("this is a comment");
-const std::string instruction_key("dia.comment");
+const std::string instruction_key("yarn.dia.comment");
 const std::string instruction_value("true");
 const std::string uml_large_package("UML - LargePackage");
 const std::string uml_class("UML - Class");
@@ -113,7 +113,7 @@ processed_object mock_processed_object_factory::
 make_uml_note_with_marker(const unsigned int n) {
     processed_object r(create_object(object_types::uml_note, n));
     std::ostringstream s;
-    s << "#DOGEN dia.comment=true" << std::endl << std::endl
+    s << "#DOGEN yarn.dia.comment=true" << std::endl << std::endl
       << doxygen_comment;
     r.comment().documentation(doxygen_comment);
     r.comment().original_content(s.str());
diff --git a/projects/yarn.dia/src/types/traits.cpp b/projects/yarn.dia/src/types/traits.cpp
index 68fec49..1b2df17 100644
--- a/projects/yarn.dia/src/types/traits.cpp
+++ b/projects/yarn.dia/src/types/traits.cpp
@@ -25,12 +25,12 @@ namespace yarn {
 namespace dia {
 
 std::string traits::comment() {
-    static std::string r("dia.comment");
+    static std::string r("yarn.dia.comment");
     return r;
 }
 
 std::string traits::identity_attribute() {
-    static std::string r("dia.identity_attribute");
+    static std::string r("yarn.dia.identity_attribute");
     return r;
 }
 
diff --git a/test_data/yarn_dia/input/all_primitives.dia b/test_data/yarn_dia/input/all_primitives.dia
index 5d54258..d31e273 100644
--- a/test_data/yarn_dia/input/all_primitives.dia
+++ b/test_data/yarn_dia/input/all_primitives.dia
@@ -504,7 +504,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/boost_model.dia b/test_data/yarn_dia/input/boost_model.dia
index e3ef6ee..63c851e 100644
--- a/test_data/yarn_dia/input/boost_model.dia
+++ b/test_data/yarn_dia/input/boost_model.dia
@@ -2131,7 +2131,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/class_in_a_package.dia b/test_data/yarn_dia/input/class_in_a_package.dia
index 40cadc9..83204bf 100644
--- a/test_data/yarn_dia/input/class_in_a_package.dia
+++ b/test_data/yarn_dia/input/class_in_a_package.dia
@@ -290,7 +290,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/class_without_attributes.dia b/test_data/yarn_dia/input/class_without_attributes.dia
index 09e6f87..cf3b0d8 100644
--- a/test_data/yarn_dia/input/class_without_attributes.dia
+++ b/test_data/yarn_dia/input/class_without_attributes.dia
@@ -243,7 +243,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/class_without_name.dia b/test_data/yarn_dia/input/class_without_name.dia
index 4089e73..1921ab9 100644
--- a/test_data/yarn_dia/input/class_without_name.dia
+++ b/test_data/yarn_dia/input/class_without_name.dia
@@ -267,7 +267,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/class_without_package.dia b/test_data/yarn_dia/input/class_without_package.dia
index 06d5fe2..4ced9aa 100644
--- a/test_data/yarn_dia/input/class_without_package.dia
+++ b/test_data/yarn_dia/input/class_without_package.dia
@@ -228,7 +228,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/classes_in_a_package.dia b/test_data/yarn_dia/input/classes_in_a_package.dia
index effe132..9098617 100644
--- a/test_data/yarn_dia/input/classes_in_a_package.dia
+++ b/test_data/yarn_dia/input/classes_in_a_package.dia
@@ -807,7 +807,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/classes_inout_package.dia b/test_data/yarn_dia/input/classes_inout_package.dia
index d0a887a..897569a 100644
--- a/test_data/yarn_dia/input/classes_inout_package.dia
+++ b/test_data/yarn_dia/input/classes_inout_package.dia
@@ -401,7 +401,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/classes_without_package.dia b/test_data/yarn_dia/input/classes_without_package.dia
index 6aeb013..fd351c7 100644
--- a/test_data/yarn_dia/input/classes_without_package.dia
+++ b/test_data/yarn_dia/input/classes_without_package.dia
@@ -764,7 +764,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/comments.dia b/test_data/yarn_dia/input/comments.dia
index ab01474..70b3975 100644
--- a/test_data/yarn_dia/input/comments.dia
+++ b/test_data/yarn_dia/input/comments.dia
@@ -517,7 +517,7 @@ it will be ignored.#</dia:string>
         <dia:composite type="text">
           <dia:attribute name="string">
             <dia:string>#package
-#DOGEN dia.comment=true#</dia:string>
+#DOGEN yarn.dia.comment=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
@@ -609,7 +609,7 @@ it will be ignored.#</dia:string>
         <dia:composite type="text">
           <dia:attribute name="string">
             <dia:string>#package2
-#DOGEN dia.comment=true#</dia:string>
+#DOGEN yarn.dia.comment=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
@@ -664,7 +664,7 @@ it will be ignored.#</dia:string>
             <dia:string>#This model demonstrates the use of comments in dogen.
 
 This comment will be applied to the model namespace itself.
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/compressed.dia b/test_data/yarn_dia/input/compressed.dia
index d04925a..81a67c0 100644
Binary files a/test_data/yarn_dia/input/compressed.dia and b/test_data/yarn_dia/input/compressed.dia differ
diff --git a/test_data/yarn_dia/input/disable_cmakelists.dia b/test_data/yarn_dia/input/disable_cmakelists.dia
index c902cfb..496bada 100644
--- a/test_data/yarn_dia/input/disable_cmakelists.dia
+++ b/test_data/yarn_dia/input/disable_cmakelists.dia
@@ -290,7 +290,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/disable_facet_folders.dia b/test_data/yarn_dia/input/disable_facet_folders.dia
index aeee4ff..cf49fa1 100644
--- a/test_data/yarn_dia/input/disable_facet_folders.dia
+++ b/test_data/yarn_dia/input/disable_facet_folders.dia
@@ -290,11 +290,11 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.disable_facet_directories=true#</dia:string>
+#DOGEN quilt.cpp.disable_facet_directories=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/disable_full_ctor.dia b/test_data/yarn_dia/input/disable_full_ctor.dia
index 04b5613..823a9ba 100644
--- a/test_data/yarn_dia/input/disable_full_ctor.dia
+++ b/test_data/yarn_dia/input/disable_full_ctor.dia
@@ -290,11 +290,11 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.disable_complete_constructor=true#</dia:string>
+#DOGEN quilt.cpp.disable_complete_constructor=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/disable_model_package.dia b/test_data/yarn_dia/input/disable_model_package.dia
index aad2026..ddd9de5 100644
--- a/test_data/yarn_dia/input/disable_model_package.dia
+++ b/test_data/yarn_dia/input/disable_model_package.dia
@@ -290,7 +290,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/disable_unique_file_names.dia b/test_data/yarn_dia/input/disable_unique_file_names.dia
index aad2026..ddd9de5 100644
--- a/test_data/yarn_dia/input/disable_unique_file_names.dia
+++ b/test_data/yarn_dia/input/disable_unique_file_names.dia
@@ -290,7 +290,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/enable_facet_domain.dia b/test_data/yarn_dia/input/enable_facet_domain.dia
index a6bdc5f..e55e943 100644
--- a/test_data/yarn_dia/input/enable_facet_domain.dia
+++ b/test_data/yarn_dia/input/enable_facet_domain.dia
@@ -290,16 +290,16 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.types.enabled=true
-#DOGEN cpp.hash.enabled=false
-#DOGEN cpp.io.enabled=false
-#DOGEN cpp.test_data.enabled=false
-#DOGEN cpp.odb.enabled=false
-#DOGEN cpp.serialization.enabled=false#</dia:string>
+#DOGEN quilt.cpp.types.enabled=true
+#DOGEN quilt.cpp.hash.enabled=false
+#DOGEN quilt.cpp.io.enabled=false
+#DOGEN quilt.cpp.test_data.enabled=false
+#DOGEN quilt.cpp.odb.enabled=false
+#DOGEN quilt.cpp.serialization.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/enable_facet_hash.dia b/test_data/yarn_dia/input/enable_facet_hash.dia
index 23fb720..845f077 100644
--- a/test_data/yarn_dia/input/enable_facet_hash.dia
+++ b/test_data/yarn_dia/input/enable_facet_hash.dia
@@ -290,16 +290,16 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.types.enabled=true
-#DOGEN cpp.hash.enabled=true
-#DOGEN cpp.io.enabled=false
-#DOGEN cpp.test_data.enabled=false
-#DOGEN cpp.odb.enabled=false
-#DOGEN cpp.serialization.enabled=false#</dia:string>
+#DOGEN quilt.cpp.types.enabled=true
+#DOGEN quilt.cpp.hash.enabled=true
+#DOGEN quilt.cpp.io.enabled=false
+#DOGEN quilt.cpp.test_data.enabled=false
+#DOGEN quilt.cpp.odb.enabled=false
+#DOGEN quilt.cpp.serialization.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/enable_facet_io.dia b/test_data/yarn_dia/input/enable_facet_io.dia
index 99629d9..77b3e9c 100644
--- a/test_data/yarn_dia/input/enable_facet_io.dia
+++ b/test_data/yarn_dia/input/enable_facet_io.dia
@@ -290,16 +290,16 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.types.enabled=true
-#DOGEN cpp.hash.enabled=false
-#DOGEN cpp.io.enabled=true
-#DOGEN cpp.test_data.enabled=false
-#DOGEN cpp.odb.enabled=false
-#DOGEN cpp.serialization.enabled=false#</dia:string>
+#DOGEN quilt.cpp.types.enabled=true
+#DOGEN quilt.cpp.hash.enabled=false
+#DOGEN quilt.cpp.io.enabled=true
+#DOGEN quilt.cpp.test_data.enabled=false
+#DOGEN quilt.cpp.odb.enabled=false
+#DOGEN quilt.cpp.serialization.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/enable_facet_serialization.dia b/test_data/yarn_dia/input/enable_facet_serialization.dia
index 3adb1e1..a4ad929 100644
--- a/test_data/yarn_dia/input/enable_facet_serialization.dia
+++ b/test_data/yarn_dia/input/enable_facet_serialization.dia
@@ -290,16 +290,16 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs
-#DOGEN cpp.types.enabled=true
-#DOGEN cpp.hash.enabled=false
-#DOGEN cpp.io.enabled=false
-#DOGEN cpp.test_data.enabled=false
-#DOGEN cpp.serialization.enabled=true
-#DOGEN cpp.odb.enabled=false#</dia:string>
+#DOGEN quilt.cpp.types.enabled=true
+#DOGEN quilt.cpp.hash.enabled=false
+#DOGEN quilt.cpp.io.enabled=false
+#DOGEN quilt.cpp.test_data.enabled=false
+#DOGEN quilt.cpp.serialization.enabled=true
+#DOGEN quilt.cpp.odb.enabled=false#</dia:string>
           </dia:attribute>
           <dia:attribute name="font">
             <dia:font family="monospace" style="0" name="Courier"/>
diff --git a/test_data/yarn_dia/input/enumeration.dia b/test_data/yarn_dia/input/enumeration.dia
index 1fe0fa7..14c153a 100644
--- a/test_data/yarn_dia/input/enumeration.dia
+++ b/test_data/yarn_dia/input/enumeration.dia
@@ -901,7 +901,7 @@ this is a long comment#</dia:string>
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/exception.dia b/test_data/yarn_dia/input/exception.dia
index 8bb04be..272f791 100644
--- a/test_data/yarn_dia/input/exception.dia
+++ b/test_data/yarn_dia/input/exception.dia
@@ -487,7 +487,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/package_without_name.dia b/test_data/yarn_dia/input/package_without_name.dia
index 568739a..bd55468 100644
--- a/test_data/yarn_dia/input/package_without_name.dia
+++ b/test_data/yarn_dia/input/package_without_name.dia
@@ -243,7 +243,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/stand_alone_class.dia b/test_data/yarn_dia/input/stand_alone_class.dia
index 31cadf3..807a38f 100644
--- a/test_data/yarn_dia/input/stand_alone_class.dia
+++ b/test_data/yarn_dia/input/stand_alone_class.dia
@@ -228,7 +228,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/std_model.dia b/test_data/yarn_dia/input/std_model.dia
index 8817611..f1bc88c 100644
--- a/test_data/yarn_dia/input/std_model.dia
+++ b/test_data/yarn_dia/input/std_model.dia
@@ -178,7 +178,7 @@
             <dia:string>##</dia:string>
           </dia:attribute>
           <dia:attribute name="comment">
-            <dia:string>##DOGEN dia.identity_attribute=true#</dia:string>
+            <dia:string>##DOGEN yarn.dia.identity_attribute=true#</dia:string>
           </dia:attribute>
           <dia:attribute name="visibility">
             <dia:enum val="0"/>
@@ -2698,7 +2698,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/stereotypes.dia b/test_data/yarn_dia/input/stereotypes.dia
index fa5f72e..dd1ae95 100644
--- a/test_data/yarn_dia/input/stereotypes.dia
+++ b/test_data/yarn_dia/input/stereotypes.dia
@@ -1426,7 +1426,7 @@ These are the main cases:
 @li @e entity: pods marked as entity must have an identity
 @li @e keyed: entities marked as keyed will generate external keys.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/trivial_association.dia b/test_data/yarn_dia/input/trivial_association.dia
index 5ca5b47..97241b0 100644
--- a/test_data/yarn_dia/input/trivial_association.dia
+++ b/test_data/yarn_dia/input/trivial_association.dia
@@ -724,7 +724,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/trivial_inheritance.dia b/test_data/yarn_dia/input/trivial_inheritance.dia
index 375d2b8..c2eee9d 100644
--- a/test_data/yarn_dia/input/trivial_inheritance.dia
+++ b/test_data/yarn_dia/input/trivial_inheritance.dia
@@ -3277,7 +3277,7 @@
 It includes the visitable stereotype since it only makes sense
 in the context of inheritance.
 
-#DOGEN dia.comment=true
+#DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
diff --git a/test_data/yarn_dia/input/two_layers_with_objects.dia b/test_data/yarn_dia/input/two_layers_with_objects.dia
index a7ff67e..40a9eff 100644
--- a/test_data/yarn_dia/input/two_layers_with_objects.dia
+++ b/test_data/yarn_dia/input/two_layers_with_objects.dia
@@ -267,7 +267,7 @@
       <dia:attribute name="text">
         <dia:composite type="text">
           <dia:attribute name="string">
-            <dia:string>##DOGEN dia.comment=true
+            <dia:string>##DOGEN yarn.dia.comment=true
 #DOGEN licence_name=gpl_v3
 #DOGEN copyright_notice=Copyright (C) 2012-2015 Marco Craveiro &lt;marco.craveiro@gmail.com&gt;
 #DOGEN modeline_group_name=emacs#</dia:string>
