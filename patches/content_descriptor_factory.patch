diff --git a/diagrams/cpp.dia b/diagrams/cpp.dia
index 4b27eca..206a57b 100644
--- a/diagrams/cpp.dia
+++ b/diagrams/cpp.dia
@@ -349,7 +349,7 @@
         <dia:point val="110.125,-49.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="11.665000000000001"/>
+        <dia:real val="11.664999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="34.000000000000021"/>
@@ -5167,7 +5167,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="51.125,-28.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="27.064999999999998"/>
+        <dia:real val="27.065000000000001"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="10.600000000000001"/>
@@ -7731,7 +7731,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-126.375,96.0625"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="11.997499999999999"/>
+        <dia:real val="11.9975"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -7842,7 +7842,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-125.312,72.75"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="7.4025000000000007"/>
+        <dia:real val="7.4024999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -8481,7 +8481,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-136.438,83.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="10.442499999999999"/>
+        <dia:real val="10.442500000000001"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -8703,7 +8703,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-58.625,64.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="13.594999999999999"/>
+        <dia:real val="13.595000000000001"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -9120,7 +9120,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-105,65"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="6.2174999999999994"/>
+        <dia:real val="6.2175000000000002"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -9675,7 +9675,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-51.8125,73.3125"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="11.620000000000001"/>
+        <dia:real val="11.619999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -10634,7 +10634,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-149,65"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="6.9575000000000005"/>
+        <dia:real val="6.9574999999999996"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -11078,7 +11078,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-166,65"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="9.6224999999999987"/>
+        <dia:real val="9.6225000000000005"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -11189,7 +11189,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-160,73"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="13.602500000000001"/>
+        <dia:real val="13.602499999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -11300,7 +11300,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-40.875,84.5"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="7.0275000000000007"/>
+        <dia:real val="7.0274999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -12740,7 +12740,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-89,96"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="14.022499999999999"/>
+        <dia:real val="14.022500000000001"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -13650,7 +13650,7 @@ pre-processor includes.#</dia:string>
         <dia:point val="-191.425,83.8906"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="5.9700000000000006"/>
+        <dia:real val="5.9699999999999998"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -14403,7 +14403,7 @@ for a given type.#</dia:string>
         <dia:point val="28,-25"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="18.610000000000003"/>
+        <dia:real val="18.609999999999999"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="2.5"/>
@@ -14713,7 +14713,7 @@ of relationship information.#</dia:string>
         <dia:point val="-75,-113"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="29.390000000000001"/>
+        <dia:real val="29.389999999999997"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="25.700000000000003"/>
@@ -15125,7 +15125,7 @@ switch to Clang when it has 100% feature coverage.
         <dia:point val="-5.8125,64.9375"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="32.839999999999996"/>
+        <dia:real val="32.840000000000003"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="17.200000000000003"/>
@@ -17755,7 +17755,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:point val="-11,94"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="32.839999999999996"/>
+        <dia:real val="32.840000000000003"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="6.8000000000000007"/>
@@ -18682,7 +18682,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:point val="50,40.8125"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="7.5775000000000006"/>
+        <dia:real val="7.5774999999999997"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -20195,13 +20195,13 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
     </dia:object>
     <dia:object type="UML - Class" version="0" id="O147">
       <dia:attribute name="obj_pos">
-        <dia:point val="20.9592,15.9822"/>
+        <dia:point val="12.2925,16.0655"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="20.9092,15.9322;35.3692,22.0322"/>
+        <dia:rectangle val="12.2425,16.0155;26.7025,22.1155"/>
       </dia:attribute>
       <dia:attribute name="elem_corner">
-        <dia:point val="20.9592,15.9822"/>
+        <dia:point val="12.2925,16.0655"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
         <dia:real val="14.359999999999999"/>
@@ -20460,7 +20460,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:point val="51.0025,16.067"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="28.0892,11.2455;51.7525,16.867"/>
+        <dia:rectangle val="19.4225,11.2455;51.7525,16.867"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -20468,8 +20468,8 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
       <dia:attribute name="orth_points">
         <dia:point val="51.0025,16.067"/>
         <dia:point val="51.0025,11.9955"/>
-        <dia:point val="28.1392,11.9955"/>
-        <dia:point val="28.1392,15.9822"/>
+        <dia:point val="19.4725,11.9955"/>
+        <dia:point val="19.4725,16.0655"/>
       </dia:attribute>
       <dia:attribute name="orth_orient">
         <dia:enum val="1"/>
@@ -20501,7 +20501,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:point val="51.0025,16.067"/>
       </dia:attribute>
       <dia:attribute name="elem_width">
-        <dia:real val="7.6650000000000009"/>
+        <dia:real val="7.665"/>
       </dia:attribute>
       <dia:attribute name="elem_height">
         <dia:real val="3"/>
@@ -20638,17 +20638,17 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:boolean val="false"/>
       </dia:attribute>
       <dia:attribute name="obj_pos">
-        <dia:point val="54.835,19.067"/>
+        <dia:point val="58.6675,19.067"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="54.085,18.317;68.1673,29.3871"/>
+        <dia:rectangle val="57.9175,18.317;68.1673,28.5871"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
       </dia:attribute>
       <dia:attribute name="orth_points">
-        <dia:point val="54.835,19.067"/>
-        <dia:point val="54.835,23.1384"/>
+        <dia:point val="58.6675,19.067"/>
+        <dia:point val="58.6675,23.1384"/>
         <dia:point val="67.9673,23.1384"/>
         <dia:point val="67.9673,27.7871"/>
       </dia:attribute>
@@ -20667,7 +20667,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:color val="#000000"/>
       </dia:attribute>
       <dia:connections>
-        <dia:connection handle="0" to="O149" connection="6"/>
+        <dia:connection handle="0" to="O149" connection="7"/>
         <dia:connection handle="1" to="O145" connection="1"/>
       </dia:connections>
     </dia:object>
@@ -20822,7 +20822,7 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:point val="58.6675,16.067"/>
       </dia:attribute>
       <dia:attribute name="obj_bb">
-        <dia:rectangle val="57.9175,12.017;76.4559,17.667"/>
+        <dia:rectangle val="57.9175,11.317;76.4559,16.867"/>
       </dia:attribute>
       <dia:attribute name="meta">
         <dia:composite type="dict"/>
@@ -20852,5 +20852,257 @@ Does not use characters which are not valid for C++ identifiers.#</dia:string>
         <dia:connection handle="1" to="O151" connection="1"/>
       </dia:connections>
     </dia:object>
+    <dia:object type="UML - Class" version="0" id="O153">
+      <dia:attribute name="obj_pos">
+        <dia:point val="32.1126,16.1402"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="32.0626,16.0902;44.7826,19.1902"/>
+      </dia:attribute>
+      <dia:attribute name="elem_corner">
+        <dia:point val="32.1126,16.1402"/>
+      </dia:attribute>
+      <dia:attribute name="elem_width">
+        <dia:real val="12.619999999999999"/>
+      </dia:attribute>
+      <dia:attribute name="elem_height">
+        <dia:real val="3"/>
+      </dia:attribute>
+      <dia:attribute name="name">
+        <dia:string>#content_descriptor_factory#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="stereotype">
+        <dia:string>#service#</dia:string>
+      </dia:attribute>
+      <dia:attribute name="comment">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="abstract">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_attributes">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="suppress_operations">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="visible_attributes">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="visible_comments">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_operations">
+        <dia:boolean val="true"/>
+      </dia:attribute>
+      <dia:attribute name="wrap_after_char">
+        <dia:int val="40"/>
+      </dia:attribute>
+      <dia:attribute name="comment_line_length">
+        <dia:int val="17"/>
+      </dia:attribute>
+      <dia:attribute name="comment_tagging">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="line_width">
+        <dia:real val="0.10000000000000001"/>
+      </dia:attribute>
+      <dia:attribute name="line_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="fill_color">
+        <dia:color val="#ffffff"/>
+      </dia:attribute>
+      <dia:attribute name="text_color">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font">
+        <dia:font family="monospace" style="0" name="Courier"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font">
+        <dia:font family="monospace" style="88" name="Courier-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font">
+        <dia:font family="monospace" style="8" name="Courier-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font">
+        <dia:font family="sans" style="80" name="Helvetica-Bold"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font">
+        <dia:font family="sans" style="88" name="Helvetica-BoldOblique"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font">
+        <dia:font family="sans" style="8" name="Helvetica-Oblique"/>
+      </dia:attribute>
+      <dia:attribute name="normal_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="polymorphic_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_font_height">
+        <dia:real val="0.80000000000000004"/>
+      </dia:attribute>
+      <dia:attribute name="classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="abstract_classname_font_height">
+        <dia:real val="1"/>
+      </dia:attribute>
+      <dia:attribute name="comment_font_height">
+        <dia:real val="0.69999999999999996"/>
+      </dia:attribute>
+      <dia:attribute name="attributes"/>
+      <dia:attribute name="operations"/>
+      <dia:attribute name="template">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="templates"/>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O154">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="32.1126,19.1402"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="19.4225,18.3902;32.8626,26.8569"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="32.1126,19.1402"/>
+        <dia:point val="32.1126,26.0569"/>
+        <dia:point val="19.4725,26.0569"/>
+        <dia:point val="19.4725,22.0655"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O153" connection="5"/>
+        <dia:connection handle="1" to="O147" connection="6"/>
+      </dia:connections>
+    </dia:object>
+    <dia:object type="UML - Association" version="2" id="O155">
+      <dia:attribute name="name">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="direction">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="show_direction">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="assoc_type">
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="role_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_a">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_a">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_a">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="role_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="multipicity_b">
+        <dia:string>##</dia:string>
+      </dia:attribute>
+      <dia:attribute name="visibility_b">
+        <dia:enum val="3"/>
+      </dia:attribute>
+      <dia:attribute name="show_arrow_b">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="obj_pos">
+        <dia:point val="51.0025,19.067"/>
+      </dia:attribute>
+      <dia:attribute name="obj_bb">
+        <dia:rectangle val="44.6826,18.317;51.7525,26.6069"/>
+      </dia:attribute>
+      <dia:attribute name="meta">
+        <dia:composite type="dict"/>
+      </dia:attribute>
+      <dia:attribute name="orth_points">
+        <dia:point val="51.0025,19.067"/>
+        <dia:point val="51.0025,25.8069"/>
+        <dia:point val="44.7326,25.8069"/>
+        <dia:point val="44.7326,19.1402"/>
+      </dia:attribute>
+      <dia:attribute name="orth_orient">
+        <dia:enum val="1"/>
+        <dia:enum val="0"/>
+        <dia:enum val="1"/>
+      </dia:attribute>
+      <dia:attribute name="orth_autoroute">
+        <dia:boolean val="false"/>
+      </dia:attribute>
+      <dia:attribute name="text_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:attribute name="line_colour">
+        <dia:color val="#000000"/>
+      </dia:attribute>
+      <dia:connections>
+        <dia:connection handle="0" to="O149" connection="5"/>
+        <dia:connection handle="1" to="O153" connection="7"/>
+      </dia:connections>
+    </dia:object>
   </dia:layer>
 </dia:diagram>
diff --git a/doc/release_notes_sprint_27.org b/doc/release_notes_sprint_27.org
index a579b2b..9dd9c00 100644
--- a/doc/release_notes_sprint_27.org
+++ b/doc/release_notes_sprint_27.org
@@ -10,14 +10,14 @@ This file contains all stories that were closed during sprint 27.
 ** Development Stories Implemented
 
 #+begin: clocktable :maxlevel 3 :scope subtree
-Clock summary at [2013-05-21 Tue 08:31]
+Clock summary at [2013-05-21 Tue 19:05]
 
 | Headline                                           | Time   |      |      |
 |----------------------------------------------------+--------+------+------|
-| *Total time*                                       | *4:45* |      |      |
+| *Total time*                                       | *5:24* |      |      |
 |----------------------------------------------------+--------+------+------|
-| Development Stories Implemented                    |        | 4:45 |      |
-| IMPLEMENTATION Clean up the SML to C++ transformer |        |      | 4:45 |
+| Development Stories Implemented                    |        | 5:24 |      |
+| IMPLEMENTATION Clean up the SML to C++ transformer |        |      | 5:24 |
 #+end:
 
 *** IMPLEMENTATION Clean up the SML to C++ transformer                :spike:
@@ -25,6 +25,8 @@ Clock summary at [2013-05-21 Tue 08:31]
 Continuing from previous iteration, see description in Sprint 26.
 
 **** IMPLEMENTATION Create =file_info_factory=
+     CLOCK: [2013-05-21 Tue 18:10]--[2013-05-21 Tue 18:42] =>  0:32
+     CLOCK: [2013-05-21 Tue 17:57]--[2013-05-21 Tue 18:04] =>  0:07
      CLOCK: [2013-05-21 Tue 08:30]--[2013-05-21 Tue 08:32] =>  0:02
      CLOCK: [2013-05-21 Tue 08:23]--[2013-05-21 Tue 08:26] =>  0:08
      CLOCK: [2013-05-21 Tue 07:56]--[2013-05-21 Tue 08:15] =>  0:19
diff --git a/projects/cpp/include/dogen/cpp/types/all.hpp b/projects/cpp/include/dogen/cpp/types/all.hpp
index 4f8120d..aeec0fd 100644
--- a/projects/cpp/include/dogen/cpp/types/all.hpp
+++ b/projects/cpp/include/dogen/cpp/types/all.hpp
@@ -25,6 +25,7 @@
 #include "dogen/cpp/types/class_info.hpp"
 #include "dogen/cpp/types/cmakelists_info.hpp"
 #include "dogen/cpp/types/content_descriptor.hpp"
+#include "dogen/cpp/types/content_descriptor_factory.hpp"
 #include "dogen/cpp/types/enumeration_info.hpp"
 #include "dogen/cpp/types/enumerator_info.hpp"
 #include "dogen/cpp/types/exception_info.hpp"
diff --git a/projects/cpp/include/dogen/cpp/types/content_descriptor_factory.hpp b/projects/cpp/include/dogen/cpp/types/content_descriptor_factory.hpp
new file mode 100644
index 0000000..cbd0464
--- /dev/null
+++ b/projects/cpp/include/dogen/cpp/types/content_descriptor_factory.hpp
@@ -0,0 +1,105 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_CPP_TYPES_CONTENT_DESCRIPTOR_FACTORY_HPP
+#define DOGEN_CPP_TYPES_CONTENT_DESCRIPTOR_FACTORY_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+#include <set>
+#include "dogen/sml/types/pod.hpp"
+#include "dogen/sml/types/model.hpp"
+#include "dogen/sml/types/meta_types.hpp"
+#include "dogen/sml/types/pod_types.hpp"
+#include "dogen/config/types/cpp_facet_types.hpp"
+#include "dogen/cpp/types/content_descriptor.hpp"
+
+namespace dogen {
+namespace cpp {
+
+/**
+ * @brief Produces all the content descriptors for the supplied
+ * inputs.
+ */
+class content_descriptor_factory {
+public:
+    content_descriptor_factory() = delete;
+    content_descriptor_factory(const content_descriptor_factory&) = default;
+    content_descriptor_factory&
+    operator=(const content_descriptor_factory&) = delete;
+
+public:
+    explicit content_descriptor_factory(
+        const std::set<config::cpp_facet_types>& enabled_facets);
+
+private:
+    /**
+     * @brief Returns the available facets for the given inputs.
+     *
+     * @param mt Meta-type which we want to process.
+     * @param pt Pod type to process; must be set to invalid if the
+     * meta-type is not a pod.
+     */
+    std::set<config::cpp_facet_types> enabled_facets(const sml::meta_types mt,
+        const sml::pod_types pt = sml::pod_types::invalid) const;
+
+    /**
+     * @brief Returns true if the facet requires a C++ source file,
+     * false otherwise.
+     */
+    bool has_implementation(const config::cpp_facet_types ft,
+        const sml::meta_types mt) const;
+
+    /**
+     * @brief Returns true if facet has forward declarations, false otherwise.
+     */
+    bool has_forward_decls(const config::cpp_facet_types ft,
+        const sml::meta_types mt) const;
+
+public:
+    /**
+     * @brief Generate all of the content descriptors for the given
+     * parameters.
+     */
+    std::list<content_descriptor> create(const sml::qname& qn,
+        const sml::category_types ct = sml::category_types::invalid) const;
+
+    /**
+     * @brief Generate all of the content descriptors the supplied pod.
+     */
+    std::list<content_descriptor> create(const sml::pod& p) const;
+
+    /**
+     * @brief Generate a content descriptor for the model.
+     *
+     * @todo this is a hack to deal with a lack of qname at the model
+     * level.
+     */
+    std::list<content_descriptor> create(const sml::model& m) const;
+
+private:
+    const std::set<config::cpp_facet_types>& enabled_facets_;
+};
+
+} }
+
+#endif
diff --git a/projects/cpp/include/dogen/cpp/types/content_descriptor_factory_fwd.hpp b/projects/cpp/include/dogen/cpp/types/content_descriptor_factory_fwd.hpp
new file mode 100644
index 0000000..d1fc551
--- /dev/null
+++ b/projects/cpp/include/dogen/cpp/types/content_descriptor_factory_fwd.hpp
@@ -0,0 +1,35 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#ifndef DOGEN_CPP_TYPES_CONTENT_DESCRIPTOR_FACTORY_FWD_HPP
+#define DOGEN_CPP_TYPES_CONTENT_DESCRIPTOR_FACTORY_FWD_HPP
+
+#if defined(_MSC_VER) && (_MSC_VER >= 1200)
+#pragma once
+#endif
+
+namespace dogen {
+namespace cpp {
+
+class content_descriptor_factory;
+
+} }
+
+#endif
diff --git a/projects/cpp/include/dogen/cpp/types/file_info_factory.hpp b/projects/cpp/include/dogen/cpp/types/file_info_factory.hpp
index a5c3561..ba6343f 100644
--- a/projects/cpp/include/dogen/cpp/types/file_info_factory.hpp
+++ b/projects/cpp/include/dogen/cpp/types/file_info_factory.hpp
@@ -166,6 +166,11 @@ public:
         const optional_class_info pci = optional_class_info(),
         const optional_class_info opci = optional_class_info());
 
+    /**
+     * @brief Manufacture all the file infos for includers.
+     */
+    std::list<file_info> create_facet_includers() const;
+
 private:
     const std::set<config::cpp_facet_types> enabled_facets_;
     const transformer& transformer_;
diff --git a/projects/cpp/src/types/content_descriptor_factory.cpp b/projects/cpp/src/types/content_descriptor_factory.cpp
new file mode 100644
index 0000000..b780314
--- /dev/null
+++ b/projects/cpp/src/types/content_descriptor_factory.cpp
@@ -0,0 +1,171 @@
+/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+ *
+ * Copyright (C) 2012 Kitanda <info@kitanda.co.uk>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA 02110-1301, USA.
+ *
+ */
+#include <sstream>
+#include <boost/lexical_cast.hpp>
+#include "dogen/utility/log/logger.hpp"
+#include "dogen/sml/io/meta_types_io.hpp"
+#include "dogen/sml/io/pod_types_io.hpp"
+#include "dogen/cpp/types/building_error.hpp"
+#include "dogen/cpp/types/content_descriptor_factory.hpp"
+
+using namespace dogen::utility::log;
+
+namespace {
+
+auto lg(logger_factory("cpp.content_descriptor_factory"));
+
+const std::string invalid_enabled_facets("Invalid enabled facets request: ");
+const std::string unsupported_meta_type("Meta type not supported: ");
+
+}
+
+namespace dogen {
+namespace cpp {
+
+content_descriptor_factory::content_descriptor_factory(
+    const std::set<config::cpp_facet_types>& enabled_facets) :
+    enabled_facets_(enabled_facets) { }
+
+std::set<config::cpp_facet_types> content_descriptor_factory::
+enabled_facets(const sml::meta_types mt, const sml::pod_types pt) const {
+    using sml::pod_types;
+    using sml::meta_types;
+    using config::cpp_facet_types;
+
+    switch(mt) {
+    case meta_types::pod:
+        if (pt == pod_types::value || pt == pod_types::entity)
+            return enabled_facets_;
+        else if (pt == pod_types::service)
+            return std::set<cpp_facet_types> { cpp_facet_types::types };
+        break;
+    case meta_types::enumeration:
+    case meta_types::primitive:
+        return enabled_facets_;
+        break;
+    case meta_types::exception:
+        return std::set<cpp_facet_types> { cpp_facet_types::types };
+        break;
+    default:
+        break;
+    }
+
+    BOOST_LOG_SEV(lg, error) << invalid_enabled_facets
+                             << boost::lexical_cast<std::string>(mt)
+                             << boost::lexical_cast<std::string>(pt);
+
+    BOOST_THROW_EXCEPTION(building_error(invalid_enabled_facets +
+            boost::lexical_cast<std::string>(mt) + ", " +
+            boost::lexical_cast<std::string>(pt)));
+}
+
+bool content_descriptor_factory::has_implementation(
+    const config::cpp_facet_types ft, const sml::meta_types mt) const {
+
+    using sml::meta_types;
+    using config::cpp_facet_types;
+    switch(mt) {
+    case meta_types::pod:
+        return
+            ft == cpp_facet_types::types ||
+            ft == cpp_facet_types::hash ||
+            ft == cpp_facet_types::io ||
+            ft == cpp_facet_types::test_data ||
+            ft == cpp_facet_types::serialization;
+        break;
+    case meta_types::exception:
+        return false; break;
+    case meta_types::enumeration:
+        return
+            ft == cpp_facet_types::io ||
+            ft == cpp_facet_types::test_data;
+        break;
+    default: break;
+    }
+
+    BOOST_LOG_SEV(lg, error) << unsupported_meta_type << mt;
+    BOOST_THROW_EXCEPTION(building_error(unsupported_meta_type +
+            boost::lexical_cast<std::string>(mt)));
+}
+
+bool file_info_factory::has_forward_decls(const config::cpp_facet_types ft,
+    const dogen::sml::meta_types mt) const {
+    using dogen::sml::meta_types;
+    using config::cpp_facet_types;
+
+    switch(mt) {
+    case meta_types::pod:
+        return
+            ft == cpp_facet_types::types ||
+            ft == cpp_facet_types::serialization;
+        break;
+    case meta_types::enumeration:
+        return ft == cpp_facet_types::types;
+        break;
+    case meta_types::exception:
+        return ft == cpp_facet_types::types;
+        break;
+    default: break;
+    }
+
+    BOOST_LOG_SEV(lg, error) << unsupported_meta_type << mt;
+    BOOST_THROW_EXCEPTION(building_error(unsupported_meta_type +
+            boost::lexical_cast<std::string>(mt)));
+}
+
+std::list<content_descriptor>
+content_descriptor_factory::create(const sml::qname& qn,
+    const sml::category_types ct, const sml::pod_types pt) const {
+
+    std::list<content_descriptor> r;
+    const auto main(aspect_types::main);
+    const auto header(file_types::header);
+    if (qn.meta_type() == sml::meta_types::package) {
+        const auto ft(config::cpp_facet_types::types);
+        r.push_back(content_descriptor(header, ft, main, ct, qn));
+        return r;
+    }
+
+    const auto mt(qn.meta_type());
+    for (const auto ft : enabled_facets(mt, pt)) {
+        r.push_back(content_descriptor(header, ft, main, ct, qn));
+
+        const auto implementation(file_types::implementation);
+        if (has_implementation(ft, mt))
+            r.push_back(content_descriptor(implementation, ft, main, ct, qn));
+
+        const auto forward_decls(aspect_types::forward_decls);
+        if (has_forward_decls(ft, mt))
+            r.push_back(content_descriptor(header, ft, forward_decls, ct, qn));
+    }
+    return r;
+}
+
+
+// std::list<content_descriptor>
+// content_descriptor_factory::create(const sml::qname& qn,
+//     const sml::category_types ct = sml::category_types::invalid) const {
+
+    
+// }
+
+
+} }
diff --git a/projects/cpp/src/types/file_info_factory.cpp b/projects/cpp/src/types/file_info_factory.cpp
index 4cfa91d..135487b 100644
--- a/projects/cpp/src/types/file_info_factory.cpp
+++ b/projects/cpp/src/types/file_info_factory.cpp
@@ -36,6 +36,7 @@ auto lg(logger_factory("cpp.file_info_factory"));
 const std::string empty;
 const std::string dot(".");
 const std::string separator("_");
+const std::string includer_name("all");
 const std::string invalid_enabled_facets("Invalid enabled facets request: ");
 const std::string unsupported_meta_type("Meta type not supported: ");
 
@@ -326,4 +327,34 @@ std::list<file_info> file_info_factory::create(const sml::pod& p,
     return r;
 }
 
+std::list<file_info> file_info_factory::create_facet_includers() const {
+    std::list<file_info> r;
+    const file_types file_type(file_types::header);
+    const auto at(aspect_types::includers);
+
+    sml::qname qn;
+    qn.type_name(includer_name);
+    qn.external_package_path(model_.external_package_path());
+    const auto rq(location_request_factory(ft, file_type, at, qn));
+
+    for (const auto cd : content_descriptor_factory(p.name(), ct, pt)) {
+
+    for (cpp_facet_types ft : settings_.enabled_facets()) {
+
+            file_info fi;
+            fi.facet_type(ft);
+            fi.file_path(locator_.absolute_path(rq));
+            fi.file_type(file_type);
+            fi.aspect_type(at);
+
+            const auto includes(includer_.includes_for_includer_files(ft));
+            fi.system_includes(includes.system);
+            fi.user_includes(includes.user);
+
+            r.push_back(fi);
+        }
+        return r;
+    }
+
+
 } }
