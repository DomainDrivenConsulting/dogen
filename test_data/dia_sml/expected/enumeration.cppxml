<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!DOCTYPE boost_serialization>
<boost_serialization signature="serialization::archive" version="9">
<entity class_id="0" tracking_level="0" version="0">
	<count>51</count>
	<item_version>0</item_version>
	<item class_id="1" tracking_level="0" version="0">
		<first>/enumeration.cppxml/enumeration/CMakeLists.txt</first>
		<second># -*- mode: cmake; tab-width: 4; indent-tabs-mode: nil -*-
#
# Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be  useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.
#
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/src)

install(
    DIRECTORY include/
    DESTINATION include/
    COMPONENT headers
    FILES_MATCHING PATTERN &quot;*.hpp&quot;)

set(include_dir &quot;${CMAKE_CURRENT_SOURCE_DIR}/include//enumeration&quot;)
set(all_odb_files &quot;&quot;)
file(GLOB_RECURSE all_odb_files RELATIVE
    &quot;${include_dir}/odb/&quot;
    &quot;${include_dir}/odb/*_pragmas.hpp&quot;)

set(src_odb_dir &quot;${CMAKE_CURRENT_SOURCE_DIR}/src/odb/&quot;)
if(NOT EXISTS &quot;${src_odb_dir}&quot;)
    file(MAKE_DIRECTORY &quot;${src_odb_dir}&quot;)
endif()

add_custom_target(codegen_enumeration_odb
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    COMMAND mv ${CMAKE_CURRENT_SOURCE_DIR}/include//enumeration/odb/*.cpp
    ${src_odb_dir})

set(ignore_file false)
foreach(odb_file ${all_odb_files})
    if (odb_file MATCHES &quot;all_pragmas.hpp&quot;)
        set(ignore_file true)
    endif()

    if(NOT ignore_file)
        set(type_name &quot;&quot;)
        string(REPLACE &quot;_pragmas.hpp&quot; &quot;&quot; type_name ${odb_file})
        string(REPLACE &quot;\\&quot; &quot;_&quot; type_name ${type_name})
        string(REPLACE &quot;/&quot; &quot;_&quot; type_name ${type_name})

        set(pfh_dir &quot;$ENV{PFH_LOCATION}&quot;)
        set(target_name &quot;codegen_enumeration_odb_${type_name}&quot;)
        add_custom_target(${target_name}
            WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
            COMMAND odb
            --options-file ${CMAKE_CURRENT_SOURCE_DIR}/src/options.odb
            --std c++11
            --output-dir ${CMAKE_CURRENT_SOURCE_DIR}/include//enumeration/odb/
            --odb-epilogue &apos;\#include \&quot;/enumeration/odb/${odb_file}\&quot;&apos;
            -I ${pfh_dir}/include -I ${CMAKE_CURRENT_SOURCE_DIR}/include
            ${include_dir}/types/${type_name}.hpp)

        add_dependencies(codegen_enumeration_odb ${target_name})
    endif()
    add_dependencies(codegen_enumeration_odb codegen_enumeration)
    set(ignore_file false)
endforeach()
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/hash/a_class_hash.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_HASH_A_CLASS_HASH_HPP
#define ENUMERATION_HASH_A_CLASS_HASH_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;functional&gt;
#include &quot;enumeration/types/a_class.hpp&quot;

namespace enumeration {

class a_class_hasher {
public:
    static std::size_t hash(const a_class&amp; v);
};

}

namespace std {

template&lt;&gt;
class hash&lt;enumeration::a_class&gt; {
public:
    size_t operator()(const enumeration::a_class&amp; v) const {
        return enumeration::a_class_hasher::hash(v);
    }
};

}
#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/hash/all_hash.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/hash/a_class_hash.hpp&quot;
#include &quot;enumeration/hash/book_types_hash.hpp&quot;
#include &quot;enumeration/hash/colour_types_hash.hpp&quot;
#include &quot;enumeration/hash/pkg1/shape_types_hash.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/hash/book_types_hash.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_HASH_BOOK_TYPES_HASH_HPP
#define ENUMERATION_HASH_BOOK_TYPES_HASH_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;functional&gt;
#include &quot;enumeration/types/book_types.hpp&quot;

namespace std {

template&lt;&gt;
class hash&lt;enumeration::book_types&gt; {
public:
    size_t operator()(const enumeration::book_types&amp; v) const {
        return std::hash&lt;unsigned int&gt;()(static_cast&lt;unsigned int&gt;(v));
    }
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/hash/colour_types_hash.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_HASH_COLOUR_TYPES_HASH_HPP
#define ENUMERATION_HASH_COLOUR_TYPES_HASH_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;functional&gt;
#include &quot;enumeration/types/colour_types.hpp&quot;

namespace std {

template&lt;&gt;
class hash&lt;enumeration::colour_types&gt; {
public:
    size_t operator()(const enumeration::colour_types&amp; v) const {
        return std::hash&lt;unsigned int&gt;()(static_cast&lt;unsigned int&gt;(v));
    }
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/hash/pkg1/shape_types_hash.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_HASH_PKG1_SHAPE_TYPES_HASH_HPP
#define ENUMERATION_HASH_PKG1_SHAPE_TYPES_HASH_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;functional&gt;
#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;

namespace std {

template&lt;&gt;
class hash&lt;enumeration::pkg1::shape_types&gt; {
public:
    size_t operator()(const enumeration::pkg1::shape_types&amp; v) const {
        return std::hash&lt;unsigned int&gt;()(static_cast&lt;unsigned int&gt;(v));
    }
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/io/a_class_io.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_IO_A_CLASS_IO_HPP
#define ENUMERATION_IO_A_CLASS_IO_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;iosfwd&gt;
#include &quot;enumeration/types/a_class.hpp&quot;

namespace enumeration {

std::ostream&amp;
operator&lt;&lt;(std::ostream&amp; s,
     const enumeration::a_class&amp; v);

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/io/all_io.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/io/a_class_io.hpp&quot;
#include &quot;enumeration/io/book_types_io.hpp&quot;
#include &quot;enumeration/io/colour_types_io.hpp&quot;
#include &quot;enumeration/io/pkg1/shape_types_io.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/io/book_types_io.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_IO_BOOK_TYPES_IO_HPP
#define ENUMERATION_IO_BOOK_TYPES_IO_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;iosfwd&gt;
#include &quot;enumeration/types/book_types.hpp&quot;

namespace enumeration {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const book_types&amp; v);

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/io/colour_types_io.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_IO_COLOUR_TYPES_IO_HPP
#define ENUMERATION_IO_COLOUR_TYPES_IO_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;iosfwd&gt;
#include &quot;enumeration/types/colour_types.hpp&quot;

namespace enumeration {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const colour_types&amp; v);

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/io/pkg1/shape_types_io.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_IO_PKG1_SHAPE_TYPES_IO_HPP
#define ENUMERATION_IO_PKG1_SHAPE_TYPES_IO_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;iosfwd&gt;
#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;

namespace enumeration {
namespace pkg1 {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const shape_types&amp; v);

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/odb/a_class_pragmas.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_ODB_A_CLASS_PRAGMAS_HPP
#define ENUMERATION_ODB_A_CLASS_PRAGMAS_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/odb/pkg1/shape_types_pragmas.hpp&quot;
#include &quot;enumeration/types/a_class.hpp&quot;
#include &quot;odb/book_types_pragmas.hpp&quot;
#include &quot;odb/colour_types_pragmas.hpp&quot;

// class has no ODB pragmas defined.

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/odb/all_pragmas.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/odb/a_class_pragmas.hpp&quot;
#include &quot;enumeration/odb/book_types_pragmas.hpp&quot;
#include &quot;enumeration/odb/colour_types_pragmas.hpp&quot;
#include &quot;enumeration/odb/pkg1/shape_types_pragmas.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/odb/book_types_pragmas.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_ODB_BOOK_TYPES_PRAGMAS_HPP
#define ENUMERATION_ODB_BOOK_TYPES_PRAGMAS_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/book_types.hpp&quot;

namespace enumeration {

#ifdef ODB_COMPILER

#endif

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/odb/colour_types_pragmas.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_ODB_COLOUR_TYPES_PRAGMAS_HPP
#define ENUMERATION_ODB_COLOUR_TYPES_PRAGMAS_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/colour_types.hpp&quot;

namespace enumeration {

#ifdef ODB_COMPILER

#endif

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/odb/pkg1/shape_types_pragmas.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_ODB_PKG1_SHAPE_TYPES_PRAGMAS_HPP
#define ENUMERATION_ODB_PKG1_SHAPE_TYPES_PRAGMAS_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;

namespace enumeration {
namespace pkg1 {

#ifdef ODB_COMPILER

#endif

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/a_class_fwd_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_SERIALIZATION_A_CLASS_FWD_SER_HPP
#define ENUMERATION_SERIALIZATION_A_CLASS_FWD_SER_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/a_class_fwd.hpp&quot;

namespace boost {
namespace serialization {

template&lt;class Archive&gt;
void save(Archive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);

template&lt;class Archive&gt;
void load(Archive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/a_class_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_SERIALIZATION_A_CLASS_SER_HPP
#define ENUMERATION_SERIALIZATION_A_CLASS_SER_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;boost/serialization/split_free.hpp&gt;
#include &quot;enumeration/types/a_class.hpp&quot;

BOOST_SERIALIZATION_SPLIT_FREE(enumeration::a_class)
namespace boost {
namespace serialization {

template&lt;typename Archive&gt;
void save(Archive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);

template&lt;typename Archive&gt;
void load(Archive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/all_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/serialization/a_class_ser.hpp&quot;
#include &quot;enumeration/serialization/book_types_ser.hpp&quot;
#include &quot;enumeration/serialization/colour_types_ser.hpp&quot;
#include &quot;enumeration/serialization/pkg1/shape_types_ser.hpp&quot;
#include &quot;enumeration/serialization/registrar_ser.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/book_types_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_SERIALIZATION_BOOK_TYPES_SER_HPP
#define ENUMERATION_SERIALIZATION_BOOK_TYPES_SER_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;boost/serialization/nvp.hpp&gt;
#include &quot;enumeration/types/book_types.hpp&quot;

template&lt;class Archive&gt;
void serialize(Archive&amp; ar, enumeration::book_types&amp; v, unsigned int /*version*/){
    using boost::serialization::make_nvp;
    ar &amp; make_nvp(&quot;book_types&quot;, v);
}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/colour_types_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_SERIALIZATION_COLOUR_TYPES_SER_HPP
#define ENUMERATION_SERIALIZATION_COLOUR_TYPES_SER_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;boost/serialization/nvp.hpp&gt;
#include &quot;enumeration/types/colour_types.hpp&quot;

template&lt;class Archive&gt;
void serialize(Archive&amp; ar, enumeration::colour_types&amp; v, unsigned int /*version*/){
    using boost::serialization::make_nvp;
    ar &amp; make_nvp(&quot;colour_types&quot;, v);
}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/pkg1/shape_types_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_SERIALIZATION_PKG1_SHAPE_TYPES_SER_HPP
#define ENUMERATION_SERIALIZATION_PKG1_SHAPE_TYPES_SER_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;boost/serialization/nvp.hpp&gt;
#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;

template&lt;class Archive&gt;
void serialize(Archive&amp; ar, enumeration::pkg1::shape_types&amp; v, unsigned int /*version*/){
    using boost::serialization::make_nvp;
    ar &amp; make_nvp(&quot;shape_types&quot;, v);
}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/serialization/registrar_ser.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
namespace enumeration {

template&lt;typename Archive&gt;
void register_types(Archive&amp; ar);

}
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/test_data/a_class_td.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TEST_DATA_A_CLASS_TD_HPP
#define ENUMERATION_TEST_DATA_A_CLASS_TD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/a_class.hpp&quot;

namespace enumeration {

class a_class_generator {
public:
    a_class_generator();

public:
    typedef enumeration::a_class result_type;

public:
    static void populate(const unsigned int position, result_type&amp; v);
    static result_type create(const unsigned int position);
    result_type operator()();

private:
    unsigned int position_;
public:
    static result_type* create_ptr(const unsigned int position);
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/test_data/all_td.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/test_data/a_class_td.hpp&quot;
#include &quot;enumeration/test_data/book_types_td.hpp&quot;
#include &quot;enumeration/test_data/colour_types_td.hpp&quot;
#include &quot;enumeration/test_data/pkg1/shape_types_td.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/test_data/book_types_td.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TEST_DATA_BOOK_TYPES_TD_HPP
#define ENUMERATION_TEST_DATA_BOOK_TYPES_TD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/book_types.hpp&quot;

namespace enumeration {

class book_types_generator {
public:
    book_types_generator();

public:
    typedef enumeration::book_types result_type;

public:
    static void populate(const unsigned int position, result_type&amp; v);
    static result_type create(const unsigned int position);
    result_type operator()();

private:
    unsigned int position_;
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/test_data/colour_types_td.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TEST_DATA_COLOUR_TYPES_TD_HPP
#define ENUMERATION_TEST_DATA_COLOUR_TYPES_TD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/colour_types.hpp&quot;

namespace enumeration {

class colour_types_generator {
public:
    colour_types_generator();

public:
    typedef enumeration::colour_types result_type;

public:
    static void populate(const unsigned int position, result_type&amp; v);
    static result_type create(const unsigned int position);
    result_type operator()();

private:
    unsigned int position_;
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/test_data/pkg1/shape_types_td.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TEST_DATA_PKG1_SHAPE_TYPES_TD_HPP
#define ENUMERATION_TEST_DATA_PKG1_SHAPE_TYPES_TD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;

namespace enumeration {
namespace pkg1 {

class shape_types_generator {
public:
    shape_types_generator();

public:
    typedef enumeration::pkg1::shape_types result_type;

public:
    static void populate(const unsigned int position, result_type&amp; v);
    static result_type create(const unsigned int position);
    result_type operator()();

private:
    unsigned int position_;
};

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/a_class.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_A_CLASS_HPP
#define ENUMERATION_TYPES_A_CLASS_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

#include &lt;algorithm&gt;
#include &quot;enumeration/serialization/a_class_fwd_ser.hpp&quot;
#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;
#include &quot;types/book_types.hpp&quot;
#include &quot;types/colour_types.hpp&quot;

namespace enumeration {

class a_class final {
public:
    a_class() = default;
    a_class(const a_class&amp;) = default;
    a_class(a_class&amp;&amp;) = default;
    ~a_class() = default;

public:
    a_class(
        const colour_types&amp; colour_type,
        const book_types&amp; book_type,
        const enumeration::pkg1::shape_types&amp; shape_type);

private:
    template&lt;typename Archive&gt;
    friend void boost::serialization::save(Archive&amp; ar, const a_class&amp; v, unsigned int version);

    template&lt;typename Archive&gt;
    friend void boost::serialization::load(Archive&amp; ar, a_class&amp; v, unsigned int version);

public:
    const colour_types&amp; colour_type() const;
    colour_types&amp; colour_type();
    void colour_type(const colour_types&amp; v);
    void colour_type(const colour_types&amp;&amp; v);

    const book_types&amp; book_type() const;
    book_types&amp; book_type();
    void book_type(const book_types&amp; v);
    void book_type(const book_types&amp;&amp; v);

    const enumeration::pkg1::shape_types&amp; shape_type() const;
    enumeration::pkg1::shape_types&amp; shape_type();
    void shape_type(const enumeration::pkg1::shape_types&amp; v);
    void shape_type(const enumeration::pkg1::shape_types&amp;&amp; v);

public:
    bool operator==(const a_class&amp; rhs) const;
    bool operator!=(const a_class&amp; rhs) const {
        return !this-&gt;operator==(rhs);
    }

public:
    void swap(a_class&amp; other) noexcept;
    a_class&amp; operator=(a_class other);

private:
    colour_types colour_type_;
    book_types book_type_;
    enumeration::pkg1::shape_types shape_type_;
};

}

namespace std {

template&lt;&gt;
inline void swap(
    enumeration::a_class&amp; lhs,
    enumeration::a_class&amp; rhs) {
    lhs.swap(rhs);
}

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/a_class_fwd.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_A_CLASS_FWD_HPP
#define ENUMERATION_TYPES_A_CLASS_FWD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {

class a_class;

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/all.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/types/a_class.hpp&quot;
#include &quot;enumeration/types/book_types.hpp&quot;
#include &quot;enumeration/types/colour_types.hpp&quot;
#include &quot;enumeration/types/pkg1/shape_types.hpp&quot;
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/book_types.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_BOOK_TYPES_HPP
#define ENUMERATION_TYPES_BOOK_TYPES_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {

/**
 * @brief this is a brief comment
 *
 * this is a long comment
 */
enum class book_types : unsigned int {
    invalid = 0, ///&lt; Represents an uninitialised enum
    great = 1,
    not_so_great = 2,
    bad = 3
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/book_types_fwd.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_BOOK_TYPES_FWD_HPP
#define ENUMERATION_TYPES_BOOK_TYPES_FWD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {

enum class book_types : unsigned int;
}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/colour_types.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_COLOUR_TYPES_HPP
#define ENUMERATION_TYPES_COLOUR_TYPES_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {

enum class colour_types : unsigned int {
    invalid = 0, ///&lt; Represents an uninitialised enum
    red = 1, ///&lt; this is colour red
    blue = 2, ///&lt; this is blue
    green = 3,
    gray = 4 ///&lt; another comment
};

}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/colour_types_fwd.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_COLOUR_TYPES_FWD_HPP
#define ENUMERATION_TYPES_COLOUR_TYPES_FWD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {

enum class colour_types : unsigned int;
}

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/pkg1/shape_types.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_PKG1_SHAPE_TYPES_HPP
#define ENUMERATION_TYPES_PKG1_SHAPE_TYPES_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {
namespace pkg1 {

enum class shape_types : unsigned int {
    invalid = 0, ///&lt; Represents an uninitialised enum
    triangle = 1, ///&lt; some comment
    square = 2, ///&lt; other comment
    rectangle = 3,
    cube = 4 ///&lt; some comment
};

} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/include/enumeration/types/pkg1/shape_types_fwd.hpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#ifndef ENUMERATION_TYPES_PKG1_SHAPE_TYPES_FWD_HPP
#define ENUMERATION_TYPES_PKG1_SHAPE_TYPES_FWD_HPP

#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200)
#pragma once
#endif

namespace enumeration {
namespace pkg1 {

enum class shape_types : unsigned int;
} }

#endif
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/CMakeLists.txt</first>
		<second># -*- mode: cmake; tab-width: 4; indent-tabs-mode: nil -*-
#
# Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be  useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.
#
set(all_files &quot;&quot;)
file(GLOB_RECURSE all_files RELATIVE
    &quot;${CMAKE_CURRENT_SOURCE_DIR}/&quot;
    &quot;${CMAKE_CURRENT_SOURCE_DIR}/*.cpp&quot;)

add_library(enumeration STATIC ${all_files})
set_target_properties(enumeration PROPERTIES
    OUTPUT_NAME enumeration)

install(TARGETS enumeration ARCHIVE DESTINATION lib COMPONENT libraries)
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/hash/a_class_hash.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/hash/a_class_hash.hpp&quot;
#include &quot;enumeration/hash/pkg1/shape_types_hash.hpp&quot;
#include &quot;hash/book_types_hash.hpp&quot;
#include &quot;hash/colour_types_hash.hpp&quot;

namespace {

template &lt;typename HashableType&gt;
inline void combine(std::size_t&amp; seed, const HashableType&amp; value)
{
    std::hash&lt;HashableType&gt; hasher;
    seed ^= hasher(value) + 0x9e3779b9 + (seed &lt;&lt; 6) + (seed &gt;&gt; 2);
}

}

namespace enumeration {

std::size_t a_class_hasher::hash(const a_class&amp;v) {
    std::size_t seed(0);

    combine(seed, v.colour_type());
    combine(seed, v.book_type());
    combine(seed, v.shape_type());

    return seed;
}

}
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/io/a_class_io.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;ostream&gt;
#include &quot;enumeration/io/a_class_io.hpp&quot;
#include &quot;enumeration/io/pkg1/shape_types_io.hpp&quot;
#include &quot;io/book_types_io.hpp&quot;
#include &quot;io/colour_types_io.hpp&quot;

namespace enumeration {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const a_class&amp; v) {
    s &lt;&lt; &quot; { &quot;
      &lt;&lt; &quot;\&quot;__type__\&quot;: &quot; &lt;&lt; &quot;\&quot;enumeration::a_class\&quot;&quot; &lt;&lt; &quot;, &quot;
      &lt;&lt; &quot;\&quot;colour_type\&quot;: &quot; &lt;&lt; v.colour_type() &lt;&lt; &quot;, &quot;
      &lt;&lt; &quot;\&quot;book_type\&quot;: &quot; &lt;&lt; v.book_type() &lt;&lt; &quot;, &quot;
      &lt;&lt; &quot;\&quot;shape_type\&quot;: &quot; &lt;&lt; v.shape_type()
      &lt;&lt; &quot; }&quot;;
    return(s);
}

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/io/book_types_io.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;ostream&gt;
#include &lt;stdexcept&gt;
#include &quot;enumeration/io/book_types_io.hpp&quot;

namespace enumeration {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const book_types&amp; v) {
    s &lt;&lt; &quot;{ &quot; &lt;&lt; &quot;\&quot;__type__\&quot;: &quot; &lt;&lt; &quot;\&quot;book_types\&quot;, &quot; &lt;&lt; &quot;\&quot;value\&quot;: &quot;;

    std::string attr;
    switch (v) {
    case book_types::invalid:
        attr = &quot;\&quot;invalid\&quot;&quot;;
        break;
    case book_types::great:
        attr = &quot;\&quot;great\&quot;&quot;;
        break;
    case book_types::not_so_great:
        attr = &quot;\&quot;not_so_great\&quot;&quot;;
        break;
    case book_types::bad:
        attr = &quot;\&quot;bad\&quot;&quot;;
        break;
    default:
        throw std::invalid_argument(&quot;Invalid value for book_types&quot;);
    }
    s &lt;&lt; attr &lt;&lt; &quot; }&quot;;
    return s;
}

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/io/colour_types_io.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;ostream&gt;
#include &lt;stdexcept&gt;
#include &quot;enumeration/io/colour_types_io.hpp&quot;

namespace enumeration {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const colour_types&amp; v) {
    s &lt;&lt; &quot;{ &quot; &lt;&lt; &quot;\&quot;__type__\&quot;: &quot; &lt;&lt; &quot;\&quot;colour_types\&quot;, &quot; &lt;&lt; &quot;\&quot;value\&quot;: &quot;;

    std::string attr;
    switch (v) {
    case colour_types::invalid:
        attr = &quot;\&quot;invalid\&quot;&quot;;
        break;
    case colour_types::red:
        attr = &quot;\&quot;red\&quot;&quot;;
        break;
    case colour_types::blue:
        attr = &quot;\&quot;blue\&quot;&quot;;
        break;
    case colour_types::green:
        attr = &quot;\&quot;green\&quot;&quot;;
        break;
    case colour_types::gray:
        attr = &quot;\&quot;gray\&quot;&quot;;
        break;
    default:
        throw std::invalid_argument(&quot;Invalid value for colour_types&quot;);
    }
    s &lt;&lt; attr &lt;&lt; &quot; }&quot;;
    return s;
}

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/io/pkg1/shape_types_io.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;ostream&gt;
#include &lt;stdexcept&gt;
#include &quot;enumeration/io/pkg1/shape_types_io.hpp&quot;

namespace enumeration {
namespace pkg1 {

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const shape_types&amp; v) {
    s &lt;&lt; &quot;{ &quot; &lt;&lt; &quot;\&quot;__type__\&quot;: &quot; &lt;&lt; &quot;\&quot;shape_types\&quot;, &quot; &lt;&lt; &quot;\&quot;value\&quot;: &quot;;

    std::string attr;
    switch (v) {
    case shape_types::invalid:
        attr = &quot;\&quot;invalid\&quot;&quot;;
        break;
    case shape_types::triangle:
        attr = &quot;\&quot;triangle\&quot;&quot;;
        break;
    case shape_types::square:
        attr = &quot;\&quot;square\&quot;&quot;;
        break;
    case shape_types::rectangle:
        attr = &quot;\&quot;rectangle\&quot;&quot;;
        break;
    case shape_types::cube:
        attr = &quot;\&quot;cube\&quot;&quot;;
        break;
    default:
        throw std::invalid_argument(&quot;Invalid value for shape_types&quot;);
    }
    s &lt;&lt; attr &lt;&lt; &quot; }&quot;;
    return s;
}

} }</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/options.odb</first>
		<second># -*- mode: sh; tab-width: 4; indent-tabs-mode: nil -*-

# enable C++11. FIXME: causes ODB crash in options file.
# --std c++11

# target postgres
--database pgsql

# use the boost profile
--profile boost

# generate queries and embedded schemas
--generate-query
--generate-schema
--schema-format embedded

# use extensions similar to the dogen ones
# --ixx-suffix .ipp
# --hxx-suffix .hpp
--cxx-suffix .cpp

# fix domain includes
--include-regex &apos;%(.*).hpp%/enumeration/types/$1.hpp%&apos;

# fix odb generated includes
--include-regex &apos;%(^[a-zA-Z0-9_]+)-odb.(.*)%/enumeration/odb/$1-odb.$2%&apos;
--include-regex &apos;%/enumeration/types/(.*)-odb.(.*)%/enumeration/odb/$1-odb.$2%&apos;

# debug regexes
# --include-regex-trace

# make the header guards similar to dogen ones
--guard-prefix _ENUMERATION_ODB
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/serialization/a_class_ser.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;boost/archive/binary_iarchive.hpp&gt;
#include &lt;boost/archive/binary_oarchive.hpp&gt;
#include &lt;boost/archive/polymorphic_iarchive.hpp&gt;
#include &lt;boost/archive/polymorphic_oarchive.hpp&gt;
#include &lt;boost/archive/text_iarchive.hpp&gt;
#include &lt;boost/archive/text_oarchive.hpp&gt;
#include &lt;boost/archive/xml_iarchive.hpp&gt;
#include &lt;boost/archive/xml_oarchive.hpp&gt;
#include &lt;boost/serialization/nvp.hpp&gt;
#include &quot;enumeration/serialization/a_class_ser.hpp&quot;
#include &quot;enumeration/serialization/pkg1/shape_types_ser.hpp&quot;
#include &quot;serialization/book_types_ser.hpp&quot;
#include &quot;serialization/colour_types_ser.hpp&quot;

#ifdef __linux__
#include &quot;eos/portable_iarchive.hpp&quot;
#include &quot;eos/portable_oarchive.hpp&quot;
#endif

namespace boost {
namespace serialization {

template&lt;typename Archive&gt;
void save(Archive&amp; ar,
    const enumeration::a_class&amp; v,
    const unsigned int /*version*/) {
    ar &lt;&lt; make_nvp(&quot;colour_type&quot;, v.colour_type_);
    ar &lt;&lt; make_nvp(&quot;book_type&quot;, v.book_type_);
    ar &lt;&lt; make_nvp(&quot;shape_type&quot;, v.shape_type_);
}

template&lt;typename Archive&gt;
void load(Archive&amp; ar,
    enumeration::a_class&amp; v,
    const unsigned int /*version*/) {
    ar &gt;&gt; make_nvp(&quot;colour_type&quot;, v.colour_type_);
    ar &gt;&gt; make_nvp(&quot;book_type&quot;, v.book_type_);
    ar &gt;&gt; make_nvp(&quot;shape_type&quot;, v.shape_type_);
}

} }

namespace boost {
namespace serialization {

template void save(archive::polymorphic_oarchive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);
template void load(archive::polymorphic_iarchive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

template void save(archive::text_oarchive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);
template void load(archive::text_iarchive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

template void save(archive::binary_oarchive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);
template void load(archive::binary_iarchive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

template void save(archive::xml_oarchive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);
template void load(archive::xml_iarchive&amp; ar, enumeration::a_class&amp; v, unsigned int version);

#ifdef __linux__
template void save(eos::portable_oarchive&amp; ar, const enumeration::a_class&amp; v, unsigned int version);
template void load(eos::portable_iarchive&amp; ar, enumeration::a_class&amp; v, unsigned int version);
#endif

} }</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/serialization/registrar_ser.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &lt;boost/archive/binary_iarchive.hpp&gt;
#include &lt;boost/archive/binary_oarchive.hpp&gt;
#include &lt;boost/archive/polymorphic_iarchive.hpp&gt;
#include &lt;boost/archive/polymorphic_oarchive.hpp&gt;
#include &lt;boost/archive/text_iarchive.hpp&gt;
#include &lt;boost/archive/text_oarchive.hpp&gt;
#include &lt;boost/archive/xml_iarchive.hpp&gt;
#include &lt;boost/archive/xml_oarchive.hpp&gt;
#ifdef __linux__
#include &quot;eos/portable_iarchive.hpp&quot;
#include &quot;eos/portable_oarchive.hpp&quot;
#endif

namespace enumeration {

template&lt;typename Archive&gt;
void register_types(Archive&amp;) {
}

template void register_types(boost::archive::polymorphic_oarchive&amp;);
template void register_types(boost::archive::polymorphic_iarchive&amp;);

template void register_types(boost::archive::text_oarchive&amp;);
template void register_types(boost::archive::text_iarchive&amp;);

template void register_types(boost::archive::binary_oarchive&amp;);
template void register_types(boost::archive::binary_iarchive&amp;);

template void register_types(boost::archive::xml_oarchive&amp;);
template void register_types(boost::archive::xml_iarchive&amp;);

#ifdef __linux__
template void register_types(eos::portable_oarchive&amp; ar);
template void register_types(eos::portable_iarchive&amp; ar);
#endif

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/test_data/a_class_td.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/test_data/a_class_td.hpp&quot;
#include &quot;enumeration/test_data/pkg1/shape_types_td.hpp&quot;
#include &quot;test_data/book_types_td.hpp&quot;
#include &quot;test_data/colour_types_td.hpp&quot;

namespace {

colour_types
create_colour_types(const unsigned int position) {
    return colour_types_generator::create(position);
}

book_types
create_book_types(const unsigned int position) {
    return book_types_generator::create(position);
}

enumeration::pkg1::shape_types
create_enumeration_pkg1_shape_types(const unsigned int position) {
    return enumeration::pkg1::shape_types_generator::create(position);
}

}

namespace enumeration {

a_class_generator::a_class_generator() : position_(0) { }

void a_class_generator::
populate(const unsigned int position, result_type&amp; v) {
    v.colour_type(create_colour_types(position + 0));
    v.book_type(create_book_types(position + 1));
    v.shape_type(create_enumeration_pkg1_shape_types(position + 2));
}

a_class_generator::result_type
a_class_generator::create(const unsigned int position) {
    a_class r;
    a_class_generator::populate(position, r);
    return r;
}
a_class_generator::result_type*
a_class_generator::create_ptr(const unsigned int position) {
    a_class* p = new a_class();
    a_class_generator::populate(position, *p);
    return p;
}

a_class_generator::result_type
a_class_generator::operator()() {
    return create(position_++);
}

}
</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/test_data/book_types_td.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/test_data/book_types_td.hpp&quot;

namespace enumeration {

book_types_generator::book_types_generator() : position_(0) { }
void book_types_generator::
populate(const unsigned int position, result_type&amp; v) {
    v = static_cast&lt;book_types&gt;(position % 4);
}

book_types_generator::result_type
book_types_generator::create(const unsigned int  position) {
    result_type r;
    book_types_generator::populate(position, r);
    return r;
}

book_types_generator::result_type
book_types_generator::operator()() {
    return create(position_++);
}

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/test_data/colour_types_td.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/test_data/colour_types_td.hpp&quot;

namespace enumeration {

colour_types_generator::colour_types_generator() : position_(0) { }
void colour_types_generator::
populate(const unsigned int position, result_type&amp; v) {
    v = static_cast&lt;colour_types&gt;(position % 5);
}

colour_types_generator::result_type
colour_types_generator::create(const unsigned int  position) {
    result_type r;
    colour_types_generator::populate(position, r);
    return r;
}

colour_types_generator::result_type
colour_types_generator::operator()() {
    return create(position_++);
}

}</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/test_data/pkg1/shape_types_td.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/test_data/pkg1/shape_types_td.hpp&quot;

namespace enumeration {
namespace pkg1 {

shape_types_generator::shape_types_generator() : position_(0) { }
void shape_types_generator::
populate(const unsigned int position, result_type&amp; v) {
    v = static_cast&lt;shape_types&gt;(position % 5);
}

shape_types_generator::result_type
shape_types_generator::create(const unsigned int  position) {
    result_type r;
    shape_types_generator::populate(position, r);
    return r;
}

shape_types_generator::result_type
shape_types_generator::operator()() {
    return create(position_++);
}

} }</second>
	</item>
	<item>
		<first>/enumeration.cppxml/enumeration/src/types/a_class.cpp</first>
		<second>/* -*- mode: c++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * Copyright (C) 2012 Kitanda &lt;info@kitanda.co.uk&gt;
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 */
#include &quot;enumeration/types/a_class.hpp&quot;

namespace enumeration {

a_class::a_class(
    const colour_types&amp; colour_type,
    const book_types&amp; book_type,
    const enumeration::pkg1::shape_types&amp; shape_type)
    : colour_type_(colour_type),
      book_type_(book_type),
      shape_type_(shape_type) { }

void a_class::swap(a_class&amp; other) noexcept {
    using std::swap;
    swap(colour_type_, other.colour_type_);
    swap(book_type_, other.book_type_);
    swap(shape_type_, other.shape_type_);
}

bool a_class::operator==(const a_class&amp; rhs) const {
    return colour_type_ == rhs.colour_type_ &amp;&amp;
        book_type_ == rhs.book_type_ &amp;&amp;
        shape_type_ == rhs.shape_type_;
}

a_class&amp; a_class::operator=(a_class other) {
    using std::swap;
    swap(*this, other);
    return *this;
}

const colour_types&amp; a_class::colour_type() const {
    return colour_type_;
}

colour_types&amp; a_class::colour_type() {
    return colour_type_;
}

void a_class::colour_type(const colour_types&amp; v) {
    colour_type_ = v;
}

void a_class::colour_type(const colour_types&amp;&amp; v) {
    colour_type_ = std::move(v);
}

const book_types&amp; a_class::book_type() const {
    return book_type_;
}

book_types&amp; a_class::book_type() {
    return book_type_;
}

void a_class::book_type(const book_types&amp; v) {
    book_type_ = v;
}

void a_class::book_type(const book_types&amp;&amp; v) {
    book_type_ = std::move(v);
}

const enumeration::pkg1::shape_types&amp; a_class::shape_type() const {
    return shape_type_;
}

enumeration::pkg1::shape_types&amp; a_class::shape_type() {
    return shape_type_;
}

void a_class::shape_type(const enumeration::pkg1::shape_types&amp; v) {
    shape_type_ = v;
}

void a_class::shape_type(const enumeration::pkg1::shape_types&amp;&amp; v) {
    shape_type_ = std::move(v);
}

}</second>
	</item>
</entity>
</boost_serialization>

